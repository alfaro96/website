%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: cursobanner.pdf
%%Creator: (Adobe Acrobat 17.12.0)
%%For: enriquegonzalezrodrigo
%%CreationDate: 14/11/2017, 17:27
%%BoundingBox: 0 0 859 475
%%HiResBoundingBox: 0 0 858.8981 474.8190
%%CropBox: 0 0 858.8981 474.8190
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 2060 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c015 84.159810, 2016/09/10-02:41:30        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
    xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:pdfxid="http://www.npes.org/pdfx/ns/id/"
    xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/"
   xmp:CreateDate="2017-11-10T09:50:03+01:00"
   xmp:MetadataDate="2017-11-14T17:25:50+01:00"
   xmp:ModifyDate="2017-11-14T17:25:50+01:00"
   xmp:CreatorTool="Adobe InDesign CC 2017 (Macintosh)"
   xmpMM:InstanceID="uuid:2b63a1e1-5fb5-ec4a-9b66-ad691a32c02d"
   xmpMM:OriginalDocumentID="xmp.did:F97F117407206811A961C072023BAAE9"
   xmpMM:DocumentID="xmp.id:d09489f3-50f1-4f53-9148-f909b64dd5d9"
   xmpMM:RenditionClass="proof:pdf"
   xmpMM:VersionID="1"
   dc:format="application/pdf"
   pdf:Producer="Adobe PDF Library 15.0"
   pdf:Trapped="False"
   pdfxid:GTS_PDFXVersion="PDF/X-4"
   pdfx:GTS_PDFXVersion="PDF/X-4">
   <xmpMM:DerivedFrom
    stRef:instanceID="xmp.iid:a60f1c7b-e0fb-43d4-aeac-bd479d54e139"
    stRef:documentID="xmp.did:0ad1401b-aa9c-44e8-810d-c28e3cfc79da"
    stRef:originalDocumentID="xmp.did:F97F117407206811A961C072023BAAE9"
    stRef:renditionClass="default"/>
   <xmpMM:History>
    <rdf:Seq>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/x-indesign to application/pdf"
      stEvt:softwareAgent="Adobe InDesign CC 2017 (Macintosh)"
      stEvt:changed="/"
      stEvt:when="2017-11-10T09:50:03+01:00"/>
    </rdf:Seq>
   </xmpMM:History>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Cartel A3_Datos_apps_Nube.indd</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
<<
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 216 
/Lookup <~
n":3ln"1-kn"1*jm[k!im@OpibE!eKbE!bJbDdVGb)[YIb)RSHb)RSGb)RSFb)IMGac@PHa,_>C`J>Z>
]n%:.\pkk*Z?[SpY]:feYB:rhWc]KfWbWUUWG!1OWG!1MWFm(LWFm(KWFm%JWFctIW,Nj\W,Nj[W,Ed[
W,EdZW,EaZW,EaYW+m@SW+HkHVf3a]Vf3a\Vf3a[Vf3aYVf*XYVf*XXVe-bGVe$bIVe$YEVcX3)VJmXX
VJ$tNV/ILZV,[d$V,[a#V,R^#Uh_"QUf7U"Uf7R!Uf.O!UJqL!U2(hQU2(hPU15#?U1"l=U0nc;Tk,)A
TOJf>T26(!T25LfSnB)GSmN<8SRrlDSR305SPB=gRqWuIRqEfERp6X-Rp-R,Rp$I*RS=%fRS<qcQt%*;
Qsq$9QV7S`QV.M_Q=_3?P[>F4P[5@2PZ/7qPZ&+nP@5R8P>_tlP!fTVO[fZWOC943OAHGfO@'?TO)SJl
O's(1N`d>&ND'f^N*RG)N)go!N)gkuN'R[KMfN8lMfN8iMf<2lMf<,gMbt8kMa@[LMK32kMK3/kMK3/h
MK*,jMK*,iMK*,hMK!,lMK!&iMK!&hMK!&gMK!#fMJuueMJurgMFJ*VM/m,lM/m,jM/ZuhM/ZriM/Zrh
M/ZrgM/ZrfM/ZogM/ZofM/ZoeLi?igLi?ffLcu"CLbAl2Lb8f1LN$chLN$WdLHZ"ELG/u6LG/o4LG/l3
LG/i2LG&f2LG&c1LG&`0L-Z.HL+`Z0L+WT/L+NN.KeNW0Ke<K.Ke3H.K0BYCK09SBJk$UXJOgUZJO^LV
J5@*aJ57$`J1ps'Inpp_Ildi7IQ.Q4HT)93GrQ'0GUEasG!HlFE$ttlD^>SfDEJa9B0@%3B0-h.Aj$q1
Aipk0Ag%9WAg%6V@PSMq@6,,'?o\r%?ml9\?l]FO=u6on=u-im=Yg]k=YLNi=;hAD=;_8B="G!b="Fsa
<\+j`<@na^:F?YQ:+[+Z:+6_S9.CST8Lb>Q7jnuM7OJfK6mWHG66m6F66d-D66d*C5p?pA59CF:1`R#+
1E6o*1E6l)1(sro//J]p-l!*i+V"YU('t'C%0m%:!!!!!~>
>>
/CSD add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -474.819 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 474.819 li
858.898 474.819 li
858.898 0 li
cp
clp
gsave
0 475.57 mo
859 475.57 li
859 -.430173 li
0 -.430173 li
0 475.57 li
clp
0 889.95 mo
858.898 889.95 li
858.898 -182.988 li
0 -182.988 li
0 889.95 li
false sop
/1 
[/DeviceCMYK] /CSA add_res
.6 0 0 0 cmyk
f
gsave
0 1024.57 mo
858.898 1024.57 li
858.898 -182.989 li
0 -182.989 li
0 1024.57 li
clp
858.898 420.636 mo
843.869 417.72 828.331 416.191 812.436 416.191 cv
808.696 416.191 804.983 416.301 801.292 416.499 cv
800.308 415.998 799.674 415.134 799.674 413.787 cv
799.674 411.884 800.905 411.137 803.853 411.137 cv
815.383 411.137 li
815.383 406.511 li
802.995 406.511 li
799.114 406.511 795.868 407.817 795.868 412.182 cv
795.868 414.567 797.078 415.894 798.167 416.687 cv
793.415 417.004 788.699 417.457 784.01 417.995 cv
785.697 406.552 786.849 394.93 787.397 383.16 cv
787.639 377.954 787.763 372.72 787.763 367.459 cv
787.763 367.459 li
787.763 367.458 787.763 367.458 787.763 367.458 cv
787.763 312.493 774.88 260.512 751.928 214.286 cv
756.215 214.286 li
756.215 207.539 li
756.215 200.348 751.989 195.158 743.278 195.158 cv
742.735 195.158 742.209 195.175 741.7 195.209 cv
741.139 194.239 740.582 193.283 740.012 192.318 cv
756.4 186.929 li
758.031 187.263 li
759.996 187.856 760.849 188.449 760.812 189.821 cv
760.812 190.525 760.626 191.044 760.441 191.563 cv
763.962 191.822 li
764.185 191.155 764.444 190.117 764.444 188.894 cv
764.444 185.817 762.48 184.26 759.848 183.445 cv
737.124 176.476 li
737.124 180.924 li
751.544 184.594 li
751.544 184.668 li
737.654 188.381 li
725.432 168.279 711.227 149.513 695.285 132.317 cv
695.909 131.499 696.271 130.406 696.271 128.973 cv
696.271 126.049 694.502 124.893 693.13 124.027 cv
693.094 124.063 li
693.13 123.955 li
694.069 123.955 695.043 123.846 695.982 123.81 cv
695.982 119.622 li
695.152 119.731 694.069 119.767 692.913 119.767 cv
683.056 119.767 li
666.492 103.591 648.316 89.0306 628.783 76.3318 cv
641.531 72.1397 li
642.888 72.4168 li
644.523 72.9107 645.233 73.4049 645.202 74.5457 cv
645.202 75.1319 645.048 75.5638 644.893 75.9959 cv
647.824 76.2117 li
648.009 75.6568 648.225 74.7928 648.225 73.7747 cv
648.225 71.2137 646.59 69.9188 644.4 69.2399 cv
625.489 63.4399 li
625.489 67.1417 li
637.489 70.1959 li
637.489 70.258 li
625.489 73.4656 li
625.489 74.2165 li
570.613 39.4037 505.315 19.2081 435.247 19.2081 cv
369.302 19.2081 307.591 37.1037 254.82 68.24 cv
179.938 112.423 123.051 183.272 97.5376 267.531 cv
86.6712 265.688 75.6246 264.373 64.4136 263.645 cv
57.6501 263.206 50.8262 262.98 43.9474 262.98 cv
29.0378 262.98 14.3617 263.997 0 265.962 cv
0 36.2855 li
7.88133 35.7437 15.8186 35.4683 23.8126 35.4683 cv
47.5315 35.4683 70.7415 37.5385 93.3506 41.3733 cv
97.7388 26.8806 102.837 12.9542 108.616 -.430173 cv
677.298 -.430173 li
677.298 3.25665 li
692.977 6.50162 li
692.977 6.58065 li
677.298 9.90366 li
677.298 15.4165 li
692.977 18.8186 li
692.977 18.8966 li
677.298 22.1416 li
677.298 27.1466 li
697.433 21.7117 li
697.433 16.3946 li
681.754 12.8755 li
681.754 12.7965 li
697.433 9.19971 li
697.433 3.92158 li
681.076 -.430173 li
742.561 -.430173 li
743.783 .0901078 745.191 .339137 746.692 .339137 cv
748.216 .339137 749.646 .0924772 750.882 -.430173 cv
800.188 -.430173 li
801.607 .0895819 803.354 .365481 805.389 .365481 cv
807.252 .365481 809.015 .113049 810.501 -.430173 cv
858.898 -.430173 li
858.898 420.636 li
802.284 374.525 mo
794.337 374.525 790.278 378.516 790.278 386.016 cv
790.278 392.277 li
814.291 392.277 li
814.291 386.016 li
814.291 379.342 810.369 374.525 802.284 374.525 cv
805.759 357.118 mo
798.534 357.118 796.298 360.386 796.298 364.205 cv
796.298 368.711 800.392 371.498 805.69 371.498 cv
810.472 371.498 814.566 369.021 814.566 363.31 cv
814.566 360.764 813.809 358.907 813.431 358.012 cv
810.059 358.219 li
810.644 359.01 811.436 360.248 811.436 362.863 cv
811.436 366.166 809.612 367.37 806.585 367.37 cv
806.585 357.118 li
805.759 357.118 li
791.62 347.967 mo
792.927 352.233 li
796.574 352.233 li
796.574 355.054 li
799.704 355.054 li
799.704 352.233 li
809.406 352.233 li
813.121 352.233 814.566 350.444 814.566 347.279 cv
814.566 346.006 814.291 345.077 813.981 344.423 cv
810.954 344.423 li
811.126 344.733 811.332 345.283 811.332 346.04 cv
811.332 347.279 810.782 347.967 808.89 347.967 cv
799.704 347.967 li
799.704 344.423 li
796.574 344.423 li
796.574 347.967 li
791.62 347.967 li
805.759 327.807 mo
798.534 327.807 796.298 331.075 796.298 334.894 cv
796.298 339.401 800.392 342.187 805.69 342.187 cv
810.472 342.187 814.566 339.71 814.566 333.999 cv
814.566 331.454 813.809 329.596 813.431 328.701 cv
810.059 328.908 li
810.644 329.699 811.436 330.938 811.436 333.552 cv
811.436 336.855 809.612 338.059 806.585 338.059 cv
806.585 327.807 li
805.759 327.807 li
797.021 312.704 mo
796.711 313.495 796.298 315.078 796.298 316.42 cv
796.298 322.371 800.392 324.986 805.449 324.986 cv
810.472 324.986 814.566 322.509 814.566 316.66 cv
814.566 314.94 814.222 313.461 813.844 312.463 cv
810.472 312.704 li
810.851 313.289 811.332 314.699 811.332 315.732 cv
811.332 319 808.787 320.582 805.484 320.582 cv
801.7 320.582 799.532 319.172 799.532 315.938 cv
799.532 314.768 800.014 313.702 800.392 312.945 cv
797.021 312.704 li
797.021 298.049 mo
796.711 298.84 796.298 300.422 796.298 301.764 cv
796.298 307.716 800.392 310.33 805.449 310.33 cv
810.472 310.33 814.566 307.853 814.566 302.005 cv
814.566 300.285 814.222 298.806 813.844 297.808 cv
810.472 298.049 li
810.851 298.634 811.332 300.044 811.332 301.076 cv
811.332 304.344 808.787 305.927 805.484 305.927 cv
801.7 305.927 799.532 304.516 799.532 301.283 cv
799.532 300.113 800.014 299.046 800.392 298.29 cv
797.021 298.049 li
789.039 290.446 mo
789.039 294.85 li
793.236 294.85 li
793.236 290.446 li
789.039 290.446 li
796.574 290.515 mo
796.574 294.781 li
814.291 294.781 li
814.291 290.515 li
796.574 290.515 li
805.415 271.146 mo
798.19 271.146 796.298 275.309 796.298 278.921 cv
796.298 282.533 798.19 286.731 805.415 286.731 cv
812.846 286.731 814.566 282.533 814.566 278.921 cv
814.566 275.309 812.846 271.146 805.415 271.146 cv
789.659 274.758 mo
789.659 278.749 li
794.613 280.951 li
794.613 278.267 li
789.659 274.758 li
802.869 253.773 mo
799.291 253.773 796.298 254.977 796.298 259.002 cv
796.298 261.892 798.225 263.096 799.291 263.715 cv
799.291 263.784 li
798.397 263.784 797.468 263.888 796.574 263.922 cv
796.574 267.913 li
797.365 267.809 798.397 267.775 799.498 267.775 cv
814.291 267.775 li
814.291 263.509 li
803.97 263.509 li
801.7 263.509 799.807 262.718 799.807 260.482 cv
799.807 258.727 800.943 258.039 803.661 258.039 cv
814.291 258.039 li
814.291 253.773 li
802.869 253.773 li
788.489 226.423 mo
788.489 230.689 li
799.119 230.689 li
799.119 230.758 li
797.743 231.377 796.298 232.788 796.298 235.333 cv
796.298 239.152 799.67 241.457 805.449 241.457 cv
810.369 241.457 814.566 239.634 814.566 235.23 cv
814.566 232.478 813.052 231.205 811.539 230.517 cv
811.539 230.414 li
812.743 230.414 813.775 230.345 814.291 230.276 cv
814.291 226.286 li
813.637 226.389 812.536 226.423 811.264 226.423 cv
788.489 226.423 li
805.759 208.603 mo
798.534 208.603 796.298 211.871 796.298 215.69 cv
796.298 220.197 800.392 222.983 805.69 222.983 cv
810.472 222.983 814.566 220.506 814.566 214.795 cv
814.566 212.25 813.809 210.392 813.431 209.497 cv
810.059 209.704 li
810.644 210.495 811.436 211.734 811.436 214.348 cv
811.436 217.651 809.612 218.855 806.585 218.855 cv
806.585 208.603 li
805.759 208.603 li
802.697 187.101 mo
803.351 187.101 li
803.351 187.961 li
803.351 193.363 804.555 197.285 809.371 197.285 cv
812.674 197.285 814.566 194.739 814.566 191.987 cv
814.566 189.441 813.328 188.099 811.883 187.033 cv
811.883 186.964 li
812.743 186.964 813.603 186.929 814.291 186.723 cv
814.291 182.87 li
813.603 182.973 812.433 183.111 811.16 183.111 cv
803.42 183.111 li
798.982 183.111 796.298 184.384 796.298 189.888 cv
796.298 192.606 797.055 194.292 797.606 195.496 cv
801.046 195.255 li
800.358 194.429 799.326 192.537 799.326 190.404 cv
799.326 187.961 800.943 187.101 802.697 187.101 cv
802.869 165.152 mo
799.291 165.152 796.298 166.357 796.298 170.382 cv
796.298 173.271 798.225 174.476 799.291 175.095 cv
799.291 175.164 li
798.397 175.164 797.468 175.267 796.574 175.301 cv
796.574 179.292 li
797.365 179.189 798.397 179.154 799.498 179.154 cv
814.291 179.154 li
814.291 174.888 li
803.97 174.888 li
801.7 174.888 799.807 174.097 799.807 171.861 cv
799.807 170.106 800.943 169.418 803.661 169.418 cv
814.291 169.418 li
814.291 165.152 li
802.869 165.152 li
743.908 159.127 mo
740.053 159.127 736.828 160.425 736.828 164.762 cv
736.828 167.876 738.904 169.173 740.053 169.84 cv
740.053 169.915 li
739.089 169.915 738.088 170.026 737.124 170.063 cv
737.124 174.363 li
737.977 174.252 739.089 174.215 740.275 174.215 cv
756.215 174.215 li
756.215 169.618 li
745.094 169.618 li
742.648 169.618 740.609 168.765 740.609 166.356 cv
740.609 164.465 741.832 163.724 744.761 163.724 cv
756.215 163.724 li
756.215 159.127 li
743.908 159.127 li
805.415 146.197 mo
798.19 146.197 796.298 150.359 796.298 153.972 cv
796.298 157.584 798.19 161.781 805.415 161.781 cv
812.846 161.781 814.566 157.584 814.566 153.972 cv
814.566 150.359 812.846 146.197 805.415 146.197 cv
743.723 145.004 mo
744.427 145.004 li
744.427 145.931 li
744.427 151.751 745.724 155.977 750.914 155.977 cv
754.473 155.977 756.512 153.234 756.512 150.268 cv
756.512 147.525 755.177 146.079 753.62 144.93 cv
753.62 144.856 li
754.547 144.856 755.474 144.819 756.215 144.596 cv
756.215 140.445 li
755.474 140.556 754.213 140.704 752.842 140.704 cv
744.501 140.704 li
739.719 140.704 736.828 142.076 736.828 148.007 cv
736.828 150.935 737.643 152.752 738.236 154.049 cv
741.943 153.79 li
741.202 152.9 740.09 150.861 740.09 148.563 cv
740.09 145.931 741.832 145.004 743.723 145.004 cv
803.351 119.81 mo
799.051 119.81 796.298 121.049 796.298 124.902 cv
796.298 127.516 797.881 128.789 799.119 129.649 cv
798.156 130.165 796.298 131.129 796.298 134.122 cv
796.298 136.564 797.984 137.94 799.36 138.594 cv
799.36 138.663 li
798.431 138.663 797.502 138.766 796.574 138.8 cv
796.574 143.066 li
797.227 142.998 798.19 142.929 799.463 142.929 cv
814.291 142.929 li
814.291 138.663 li
803.557 138.663 li
801.596 138.663 799.807 137.665 799.807 135.773 cv
799.807 134.19 800.908 133.502 803.11 133.502 cv
814.291 133.502 li
814.291 129.236 li
803.557 129.236 li
801.596 129.236 799.807 128.239 799.807 126.347 cv
799.807 124.764 800.908 124.076 803.11 124.076 cv
814.291 124.076 li
814.291 119.81 li
803.351 119.81 li
744.427 111.642 mo
739.793 111.642 736.828 112.976 736.828 117.128 cv
736.828 119.945 738.533 121.317 739.867 122.244 cv
738.83 122.8 736.828 123.838 736.828 127.063 cv
736.828 129.695 738.644 131.177 740.127 131.882 cv
740.127 131.956 li
739.126 131.956 738.125 132.067 737.124 132.104 cv
737.124 136.701 li
737.829 136.627 738.867 136.552 740.238 136.552 cv
756.215 136.552 li
756.215 131.956 li
744.649 131.956 li
742.536 131.956 740.609 130.881 740.609 128.842 cv
740.609 127.137 741.795 126.395 744.167 126.395 cv
756.215 126.395 li
756.215 121.799 li
744.649 121.799 li
742.536 121.799 740.609 120.724 740.609 118.685 cv
740.609 116.98 741.795 116.239 744.167 116.239 cv
756.215 116.239 li
756.215 111.642 li
744.427 111.642 li
802.697 106.806 mo
803.351 106.806 li
803.351 107.666 li
803.351 113.067 804.555 116.989 809.371 116.989 cv
812.674 116.989 814.566 114.443 814.566 111.691 cv
814.566 109.145 813.328 107.803 811.883 106.737 cv
811.883 106.668 li
812.743 106.668 813.603 106.634 814.291 106.427 cv
814.291 102.574 li
813.603 102.677 812.433 102.815 811.16 102.815 cv
803.42 102.815 li
798.982 102.815 796.298 104.088 796.298 109.592 cv
796.298 112.31 797.055 113.996 797.606 115.2 cv
801.046 114.959 li
800.358 114.134 799.326 112.241 799.326 110.108 cv
799.326 107.666 800.943 106.806 802.697 106.806 cv
668.904 100.451 mo
668.904 104.928 li
680.06 104.928 li
680.06 105 li
678.616 105.65 677.1 107.13 677.1 109.802 cv
677.1 113.81 680.638 116.229 686.704 116.229 cv
691.866 116.229 696.271 114.315 696.271 109.694 cv
696.271 106.806 694.682 105.47 693.094 104.748 cv
693.094 104.639 li
694.358 104.639 695.441 104.567 695.982 104.495 cv
695.982 100.307 li
695.296 100.415 694.141 100.451 692.805 100.451 cv
668.904 100.451 li
746.651 91.3278 mo
738.867 91.3278 736.828 95.8129 736.828 99.7058 cv
736.828 103.598 738.867 108.12 746.651 108.12 cv
754.658 108.12 756.512 103.598 756.512 99.7058 cv
756.512 95.8129 754.658 91.3278 746.651 91.3278 cv
788.489 94.1799 mo
788.489 98.446 li
814.291 98.446 li
814.291 94.1799 li
788.489 94.1799 li
796.574 85.235 mo
796.574 89.5011 li
814.291 89.5011 li
814.291 85.235 li
796.574 85.235 li
789.659 83.2062 mo
789.659 87.1961 li
794.613 89.398 li
794.613 86.7149 li
789.659 83.2062 li
743.278 68.1228 mo
734.715 68.1228 730.341 72.4228 730.341 80.5038 cv
730.341 87.2508 li
756.215 87.2508 li
756.215 80.5038 li
756.215 73.3129 751.989 68.1228 743.278 68.1228 cv
668.75 65.3527 mo
668.75 70.1196 li
691.269 70.1196 li
691.269 70.2016 li
668.75 79.7358 li
668.75 85.9816 li
697.433 85.9816 li
697.433 81.2147 li
675.078 81.2147 li
675.078 81.1327 li
697.433 71.6395 li
697.433 65.3527 li
668.75 65.3527 li
802.697 71.7149 mo
803.351 71.7149 li
803.351 72.5749 li
803.351 77.9771 804.555 81.899 809.371 81.899 cv
812.674 81.899 814.566 79.353 814.566 76.6012 cv
814.566 74.0552 813.328 72.713 811.883 71.6469 cv
811.883 71.5782 li
812.743 71.5782 813.603 71.5432 814.291 71.3371 cv
814.291 67.4842 li
813.603 67.5869 812.433 67.725 811.16 67.725 cv
803.42 67.725 li
798.982 67.725 796.298 68.9981 796.298 74.502 cv
796.298 77.2201 797.055 78.9061 797.606 80.1099 cv
801.046 79.8692 li
800.358 79.0432 799.326 77.1511 799.326 75.0182 cv
799.326 72.5749 800.943 71.7149 802.697 71.7149 cv
809.578 57.06 mo
810.954 57.06 811.332 58.2641 811.332 59.8121 cv
811.332 61.8069 810.438 63.5619 810.163 64.2502 cv
813.706 64.456 li
814.05 63.5619 814.566 61.7379 814.566 59.537 cv
814.566 55.6841 812.605 52.931 809.337 52.931 cv
807.273 52.931 806.275 54.0321 804.865 56.234 cv
803.523 58.3332 li
802.732 59.571 802.216 60.328 801.252 60.328 cv
800.186 60.328 799.532 59.606 799.532 57.885 cv
799.532 56.337 799.911 55.2019 800.323 54.1351 cv
797.021 53.895 li
796.883 54.3079 796.298 56.0619 796.298 58.3332 cv
796.298 62.083 798.879 64.456 801.321 64.456 cv
804.108 64.456 805.243 62.4952 806.31 60.7061 cv
807.342 58.9521 li
808.236 57.4041 808.89 57.06 809.578 57.06 cv
736.717 48.3288 mo
732.342 48.3288 730.341 50.7748 730.341 56.1129 cv
730.341 63.6747 li
756.215 63.6747 li
756.215 55.7788 li
756.215 51.183 753.657 47.7349 748.949 47.7349 cv
744.612 47.7349 743.204 50.6267 742.759 52.6289 cv
742.685 52.6289 li
742.055 50.9228 740.831 48.3288 736.717 48.3288 cv
621.046 56.3137 mo
622.218 60.1389 li
625.489 60.1389 li
625.489 62.6689 li
628.296 62.6689 li
628.296 60.1389 li
636.996 60.1389 li
640.328 60.1389 641.623 58.5349 641.623 55.6968 cv
641.623 54.5546 641.376 53.7216 641.099 53.1357 cv
638.384 53.1357 li
638.538 53.4139 638.723 53.9067 638.723 54.5857 cv
638.723 55.6968 638.23 56.3137 636.533 56.3137 cv
628.296 56.3137 li
628.296 53.1357 li
625.489 53.1357 li
625.489 56.3137 li
621.046 56.3137 li
687.243 43.4495 mo
678.612 43.4495 675.941 47.3537 675.941 51.9156 cv
675.941 57.2988 680.831 60.6278 687.161 60.6278 cv
692.872 60.6278 697.762 57.6686 697.762 50.8468 cv
697.762 47.8056 696.858 45.5867 696.407 44.5186 cv
692.378 44.7647 li
693.078 45.7108 694.022 47.1897 694.022 50.3126 cv
694.022 54.2575 691.844 55.6958 688.228 55.6958 cv
688.228 43.4495 li
687.243 43.4495 li
618.239 46.8739 mo
618.239 50.6988 li
641.376 50.6988 li
641.376 46.8739 li
632.121 46.8739 li
630.085 46.8739 628.389 46.1636 628.389 44.1588 cv
628.389 42.5858 629.407 41.9689 631.844 41.9689 cv
641.376 41.9689 li
641.376 38.1427 li
631.134 38.1427 li
627.926 38.1427 625.242 39.2228 625.242 42.8319 cv
625.242 45.2079 626.538 46.1019 627.525 46.7808 cv
627.525 46.8739 li
618.239 46.8739 li
670.352 32.5198 mo
671.914 37.6148 li
676.27 37.6148 li
676.27 40.9848 li
680.009 40.9848 li
680.009 37.6148 li
691.598 37.6148 li
696.036 37.6148 697.762 35.4776 697.762 31.6978 cv
697.762 30.1765 697.433 29.0677 697.063 28.2867 cv
693.447 28.2867 li
693.652 28.6565 693.899 29.3138 693.899 30.2175 cv
693.899 31.6978 693.241 32.5198 690.981 32.5198 cv
680.009 32.5198 li
680.009 28.2867 li
676.27 28.2867 li
676.27 32.5198 li
670.352 32.5198 li
796.233 21.8835 mo
791.673 21.8835 789.678 24.8764 789.678 29.2935 cv
789.678 37.0603 li
814.544 37.0603 li
814.544 32.5004 li
803.857 32.5004 li
803.857 31.4673 li
803.857 29.7923 804.497 28.6175 806.458 28.0116 cv
814.544 25.5536 li
814.544 20.7083 li
805.068 23.9503 li
802.753 24.7333 802.325 25.7664 802.182 26.6934 cv
802.075 26.6934 li
801.648 23.9143 799.475 21.8835 796.233 21.8835 cv
633.417 21.1449 mo
626.939 21.1449 625.242 24.8777 625.242 28.1167 cv
625.242 31.3556 626.939 35.1198 633.417 35.1198 cv
640.081 35.1198 641.623 31.3556 641.623 28.1167 cv
641.623 24.8777 640.081 21.1449 633.417 21.1449 cv
738.521 19.5429 mo
734.451 19.5429 732.67 22.2129 732.67 26.1559 cv
732.67 33.087 li
754.863 33.087 li
754.863 29.017 li
745.325 29.017 li
745.325 28.095 li
745.325 26.601 745.897 25.552 747.646 25.0111 cv
754.863 22.8169 li
754.863 18.4931 li
746.406 21.3869 li
744.339 22.0859 743.957 23.0079 743.83 23.8349 cv
743.735 23.8349 li
743.353 21.3549 741.414 19.5429 738.521 19.5429 cv
631.134 5.56591 mo
627.926 5.56591 625.242 6.64468 625.242 10.2548 cv
625.242 12.8458 626.969 13.9259 627.926 14.4808 cv
627.926 14.5429 li
627.124 14.5429 626.291 14.6359 625.489 14.6659 cv
625.489 18.2447 li
626.198 18.1526 627.124 18.1216 628.111 18.1216 cv
641.376 18.1216 li
641.376 14.2958 li
632.121 14.2958 li
630.085 14.2958 628.389 13.5868 628.389 11.5807 cv
628.389 10.0077 629.407 9.39078 631.844 9.39078 cv
641.376 9.39078 li
641.376 5.56591 li
631.134 5.56591 li
805.71 3.28632 mo
798.228 3.28632 795.912 6.67135 795.912 10.6253 cv
795.912 15.2925 800.152 18.1783 805.638 18.1783 cv
810.59 18.1783 814.83 15.6136 814.83 9.69957 cv
814.83 7.06351 814.046 5.1394 813.653 4.21336 cv
810.163 4.42645 li
810.769 5.24645 811.588 6.5283 811.588 9.23639 cv
811.588 12.6564 809.7 13.9036 806.565 13.9036 cv
806.565 3.28632 li
805.71 3.28632 li
746.978 2.94585 mo
740.301 2.94585 738.234 5.96607 738.234 9.49516 cv
738.234 13.6612 742.018 16.2359 746.914 16.2359 cv
751.334 16.2359 755.117 13.947 755.117 8.66916 cv
755.117 6.31588 754.418 4.59885 754.068 3.77219 cv
750.952 3.96293 li
751.493 4.69389 752.224 5.83902 752.224 8.25499 cv
752.224 11.3079 750.539 12.421 747.741 12.421 cv
747.741 2.94585 li
746.978 2.94585 li
810.919 387.873 mo
793.649 387.873 li
793.649 386.394 li
793.649 381.44 797.021 379.204 802.284 379.204 cv
807.548 379.204 810.919 381.44 810.919 386.394 cv
810.919 387.873 li
803.901 367.37 mo
801.562 367.37 799.188 366.441 799.188 364.205 cv
799.188 362.278 800.771 361.246 803.901 361.246 cv
803.901 367.37 li
803.901 338.059 mo
801.562 338.059 799.188 337.13 799.188 334.894 cv
799.188 332.967 800.771 331.935 803.901 331.935 cv
803.901 338.059 li
805.415 282.327 mo
802.456 282.327 799.326 281.673 799.326 278.921 cv
799.326 276.169 802.456 275.55 805.415 275.55 cv
808.374 275.55 811.539 276.169 811.539 278.921 cv
811.539 281.673 808.374 282.327 805.415 282.327 cv
805.277 237.191 mo
801.734 237.191 799.429 236.366 799.429 233.992 cv
799.429 231.652 801.94 230.689 805.381 230.689 cv
808.718 230.689 811.436 231.549 811.436 234.061 cv
811.436 236.538 809.371 237.191 805.277 237.191 cv
803.901 218.855 mo
801.562 218.855 799.188 217.926 799.188 215.69 cv
799.188 213.763 800.771 212.731 803.901 212.731 cv
803.901 218.855 li
752.582 209.541 mo
749.526 209.541 li
747.915 206.418 746.251 203.31 744.549 200.243 cv
749.486 200.587 752.582 203.019 752.582 207.947 cv
752.582 209.541 li
808.959 193.294 mo
806.378 193.294 805.621 191.127 805.621 187.48 cv
805.621 187.101 li
806.619 187.101 li
809.784 187.101 811.676 188.03 811.676 190.576 cv
811.676 192.227 810.575 193.294 808.959 193.294 cv
805.415 157.377 mo
802.456 157.377 799.326 156.724 799.326 153.972 cv
799.326 151.219 802.456 150.6 805.415 150.6 cv
808.374 150.6 811.539 151.219 811.539 153.972 cv
811.539 156.724 808.374 157.377 805.415 157.377 cv
750.469 151.677 mo
747.689 151.677 746.874 149.341 746.874 145.412 cv
746.874 145.004 li
747.949 145.004 li
751.359 145.004 753.398 146.005 753.398 148.748 cv
753.398 150.528 752.212 151.677 750.469 151.677 cv
692.104 128.931 mo
690.603 127.354 689.089 125.793 687.558 124.243 cv
688.039 124.243 li
690.422 124.243 692.588 124.929 692.588 127.312 cv
692.588 127.988 692.434 128.523 692.104 128.931 cv
808.959 112.998 mo
806.378 112.998 805.621 110.831 805.621 107.184 cv
805.621 106.806 li
806.619 106.806 li
809.784 106.806 811.676 107.735 811.676 110.28 cv
811.676 111.932 810.575 112.998 808.959 112.998 cv
686.523 111.752 mo
682.804 111.752 680.385 110.885 680.385 108.394 cv
680.385 105.939 683.021 104.928 686.631 104.928 cv
690.133 104.928 692.986 105.831 692.986 108.466 cv
692.986 111.066 690.819 111.752 686.523 111.752 cv
746.651 103.375 mo
743.463 103.375 740.09 102.671 740.09 99.7058 cv
740.09 96.7396 743.463 96.0727 746.651 96.0727 cv
749.839 96.0727 753.249 96.7396 753.249 99.7058 cv
753.249 102.671 749.839 103.375 746.651 103.375 cv
752.582 82.5059 mo
733.973 82.5059 li
733.973 80.9119 li
733.973 75.5738 737.606 73.1648 743.278 73.1648 cv
748.949 73.1648 752.582 75.5738 752.582 80.9119 cv
752.582 82.5059 li
808.959 77.9081 mo
806.378 77.9081 805.621 75.7402 805.621 72.094 cv
805.621 71.7149 li
806.619 71.7149 li
809.784 71.7149 811.676 72.6439 811.676 75.19 cv
811.676 76.841 810.575 77.9081 808.959 77.9081 cv
752.582 59.0788 mo
744.649 59.0788 li
744.649 56.5948 li
744.649 53.6656 746.355 52.4798 748.616 52.4798 cv
751.025 52.4798 752.582 53.8887 752.582 56.4467 cv
752.582 59.0788 li
741.165 59.0788 mo
733.825 59.0788 li
733.825 56.7429 li
733.825 54.4819 735.123 52.9247 737.31 52.9247 cv
739.423 52.9247 741.165 54.2969 741.165 56.6318 cv
741.165 59.0788 li
685.023 55.6958 mo
682.229 55.6958 679.393 54.5867 679.393 51.9156 cv
679.393 49.6147 681.283 48.3815 685.023 48.3815 cv
685.023 55.6958 li
800.508 32.5004 mo
793.169 32.5004 li
793.169 30.6473 li
793.169 28.0823 793.882 26.5864 796.732 26.5864 cv
799.261 26.5864 800.508 28.2254 800.508 30.6473 cv
800.508 32.5004 li
633.417 31.1709 mo
630.764 31.1709 627.957 30.5847 627.957 28.1167 cv
627.957 25.6487 630.764 25.0938 633.417 25.0938 cv
636.07 25.0938 638.908 25.6487 638.908 28.1167 cv
638.908 30.5847 636.07 31.1709 633.417 31.1709 cv
742.336 29.017 mo
735.786 29.017 li
735.786 27.364 li
735.786 25.0751 736.422 23.7389 738.966 23.7389 cv
741.223 23.7389 742.336 25.2022 742.336 27.364 cv
742.336 29.017 li
803.786 13.9036 mo
801.362 13.9036 798.905 12.9415 798.905 10.6253 cv
798.905 8.63048 800.544 7.56138 803.786 7.56138 cv
803.786 13.9036 li
745.261 12.421 mo
743.099 12.421 740.905 11.562 740.905 9.49516 cv
740.905 7.71511 742.368 6.76106 745.261 6.76106 cv
745.261 12.421 li
.441108 .0674754 .0733959 0 cmyk
f
858.898 475.57 mo
815.383 475.57 li
815.383 471.246 li
796.166 471.246 li
796.166 475.57 li
792.547 475.57 li
792.547 471.172 li
787.995 471.172 li
787.995 475.57 li
757.873 475.57 li
757.873 472.894 li
757.251 472.811 756.006 472.728 754.554 472.728 cv
754.554 472.603 li
756.38 471.773 758.205 470.238 758.205 466.919 cv
758.205 461.608 753.143 459.409 747.21 459.409 cv
740.24 459.409 736.174 462.19 736.174 466.795 cv
736.174 469.865 737.916 471.566 739.576 472.313 cv
739.576 472.396 li
726.755 472.396 li
726.755 475.57 li
695.567 475.57 li
695.369 474.859 695.142 474.308 694.987 473.942 cv
692.059 474.121 li
692.316 474.469 692.62 474.917 692.856 475.57 cv
689.041 475.57 li
689.041 473.165 li
688.324 473.165 li
684.684 473.165 682.502 474.12 681.312 475.57 cv
675.338 475.57 li
673.927 434.164 663.078 395.109 644.848 360.467 cv
644.757 360.294 644.666 360.122 644.574 359.948 cv
644.57 359.941 644.566 359.932 644.562 359.924 cv
643.065 357.097 641.522 354.303 639.929 351.535 cv
640.275 350.773 640.405 349.996 640.405 349.317 cv
640.405 346.649 638.857 345.496 637.539 344.837 cv
637.539 344.771 li
639.153 344.771 li
641.821 344.771 644.49 345.396 644.49 349.251 cv
644.49 351.393 643.567 353.303 643.04 354.257 cv
646.664 354.488 li
647.026 353.501 647.718 351.36 647.718 348.658 cv
647.718 342.433 643.93 340.819 638.626 340.819 cv
633.421 340.819 li
631.337 337.56 629.189 334.355 626.969 331.193 cv
627.198 331.224 627.435 331.24 627.683 331.24 cv
629.929 331.24 631.301 330.117 632.25 328.395 cv
633.148 326.773 li
633.996 325.226 634.545 324.502 635.792 324.502 cv
637.539 324.502 638.313 325.75 638.313 327.147 cv
638.313 328.844 637.64 330.217 637.24 330.84 cv
640.085 331.015 li
640.609 330.142 640.859 328.794 640.859 327.047 cv
640.859 323.729 639.161 321.208 635.618 321.208 cv
633.173 321.208 632.075 322.182 630.927 324.228 cv
629.879 326.099 li
629.33 327.072 628.831 327.946 627.533 327.946 cv
626.336 327.946 625.487 327.122 625.487 325.525 cv
625.487 324.053 625.935 323.03 626.236 322.256 cv
623.566 322.107 li
623.42 322.593 622.966 323.836 622.943 325.607 cv
605.236 301.694 583.642 280.767 559.08 263.734 cv
514.699 232.956 460.628 214.893 402.28 214.893 cv
347.949 214.893 297.333 230.562 254.799 257.576 cv
227.111 275.161 202.844 297.558 183.209 323.566 cv
164.37 348.519 149.797 376.795 140.545 407.351 cv
127.043 405.061 113.178 403.824 99.0116 403.824 cv
99.0116 403.824 li
99.0112 403.824 99.0112 403.824 99.0112 403.824 cv
63.7811 403.824 30.2938 411.137 0 424.317 cv
0 265.962 li
14.3617 263.997 29.0378 262.98 43.9474 262.98 cv
50.8262 262.98 57.6501 263.206 64.4136 263.645 cv
75.6246 264.374 86.6712 265.688 97.5376 267.532 cv
123.051 183.273 179.938 112.423 254.82 68.24 cv
307.591 37.1037 369.302 19.2081 435.247 19.2081 cv
505.315 19.2081 570.613 39.4037 625.489 74.2165 cv
625.489 77.4149 li
628.783 76.3318 li
648.316 89.0306 666.492 103.591 683.056 119.767 cv
677.389 119.767 li
677.389 124.243 li
687.558 124.243 li
689.089 125.793 690.603 127.354 692.104 128.931 cv
691.517 129.658 690.372 129.984 688.545 129.984 cv
677.389 129.984 li
677.389 134.461 li
689.375 134.461 li
691.856 134.461 694.069 133.91 695.285 132.317 cv
711.227 149.513 725.432 168.279 737.654 188.381 cv
737.124 188.523 li
737.124 193.268 li
740.012 192.318 li
740.582 193.283 741.139 194.239 741.7 195.209 cv
734.178 195.718 730.341 199.97 730.341 207.539 cv
730.341 214.286 li
751.928 214.286 li
774.88 260.512 787.763 312.493 787.763 367.459 cv
787.763 367.459 li
787.763 372.72 787.639 377.954 787.397 383.16 cv
786.849 394.93 785.697 406.551 784.01 417.995 cv
784.01 417.995 li
788.699 417.457 793.415 417.004 798.167 416.687 cv
798.508 416.936 798.838 417.133 799.114 417.294 cv
799.114 417.368 li
798.144 417.368 797.136 417.48 796.166 417.518 cv
796.166 421.846 li
797.024 421.734 798.144 421.697 799.338 421.697 cv
815.383 421.697 li
815.383 417.07 li
804.188 417.07 li
803.094 417.07 802.081 416.9 801.292 416.499 cv
804.983 416.301 808.696 416.191 812.436 416.191 cv
828.331 416.191 843.869 417.72 858.898 420.636 cv
858.898 475.57 li
688.025 457.18 mo
683.753 457.18 680.108 458.764 680.108 462.588 cv
680.108 464.979 681.422 466.084 682.737 466.682 cv
682.737 466.771 li
681.691 466.771 680.795 466.831 680.347 466.891 cv
680.347 470.357 li
680.914 470.267 681.87 470.237 682.976 470.237 cv
702.188 470.237 li
702.188 466.532 li
693.523 466.532 li
693.523 466.473 li
694.718 465.935 695.973 464.71 695.973 462.499 cv
695.973 459.182 693.045 457.18 688.025 457.18 cv
810.27 459.344 mo
811.763 459.344 812.173 460.65 812.173 462.329 cv
812.173 464.493 811.203 466.396 810.905 467.142 cv
814.748 467.366 li
815.121 466.396 815.681 464.418 815.681 462.03 cv
815.681 457.851 813.554 454.866 810.009 454.866 cv
807.77 454.866 806.688 456.06 805.158 458.448 cv
803.703 460.724 li
802.845 462.068 802.285 462.889 801.241 462.889 cv
800.084 462.889 799.375 462.105 799.375 460.239 cv
799.375 458.56 799.786 457.329 800.233 456.172 cv
796.651 455.911 li
796.502 456.359 795.868 458.262 795.868 460.724 cv
795.868 464.792 798.666 467.366 801.315 467.366 cv
804.338 467.366 805.569 465.239 806.726 463.299 cv
807.845 461.396 li
808.815 459.717 809.524 459.344 810.27 459.344 cv
747.169 437.129 mo
738.456 437.129 736.174 442.149 736.174 446.506 cv
736.174 450.863 738.456 455.924 747.169 455.924 cv
756.131 455.924 758.205 450.863 758.205 446.506 cv
758.205 442.149 756.131 437.129 747.169 437.129 cv
787.995 446.285 mo
787.995 451.061 li
792.547 451.061 li
792.547 446.285 li
787.995 446.285 li
796.166 446.359 mo
796.166 450.986 li
815.383 450.986 li
815.383 446.359 li
796.166 446.359 li
674.879 442.301 mo
674.879 446.126 li
695.734 446.126 li
695.734 435.429 li
692.686 435.429 li
692.686 442.301 li
674.879 442.301 li
805.755 425.353 mo
797.92 425.353 795.868 429.868 795.868 433.785 cv
795.868 437.703 797.92 442.255 805.755 442.255 cv
813.815 442.255 815.681 437.703 815.681 433.785 cv
815.681 429.868 813.815 425.353 805.755 425.353 cv
788.666 429.271 mo
788.666 433.599 li
794.039 435.987 li
794.039 433.076 li
788.666 429.271 li
688.324 421.148 mo
682.05 421.148 680.108 423.986 680.108 427.303 cv
680.108 431.217 683.663 433.637 688.264 433.637 cv
692.417 433.637 695.973 431.486 695.973 426.526 cv
695.973 424.315 695.316 422.702 694.987 421.925 cv
692.059 422.104 li
692.567 422.791 693.254 423.867 693.254 426.138 cv
693.254 429.006 691.671 430.052 689.041 430.052 cv
689.041 421.148 li
688.324 421.148 li
736.298 421.861 mo
736.257 422.151 736.174 422.401 736.174 422.732 cv
736.174 425.927 738.746 427.545 740.406 428.168 cv
740.406 428.251 li
739.119 428.251 737.792 428.375 736.506 428.417 cv
736.506 433.064 li
737.46 432.939 738.705 432.898 740.032 432.898 cv
757.873 432.898 li
757.873 427.753 li
746.173 427.753 li
742.19 427.753 740.904 425.429 740.904 423.313 cv
740.904 422.774 740.987 422.317 741.111 421.861 cv
736.298 421.861 li
685.665 410.242 mo
686.233 410.242 li
686.233 410.989 li
686.233 415.68 687.278 419.086 691.461 419.086 cv
694.33 419.086 695.973 416.875 695.973 414.485 cv
695.973 412.274 694.897 411.109 693.643 410.182 cv
693.643 410.123 li
694.389 410.123 695.136 410.093 695.734 409.914 cv
695.734 406.567 li
695.136 406.657 694.121 406.776 693.015 406.776 cv
686.292 406.776 li
682.438 406.776 680.108 407.882 680.108 412.662 cv
680.108 415.023 680.765 416.487 681.243 417.533 cv
684.231 417.323 li
683.633 416.606 682.737 414.963 682.737 413.111 cv
682.737 410.989 684.141 410.242 685.665 410.242 cv
744.098 401.572 mo
739.783 401.572 736.174 403.025 736.174 407.879 cv
736.174 411.364 738.497 412.816 739.783 413.563 cv
739.783 413.646 li
738.705 413.646 737.584 413.771 736.506 413.812 cv
736.506 418.625 li
737.46 418.501 738.705 418.459 740.032 418.459 cv
757.873 418.459 li
757.873 413.315 li
745.426 413.315 li
742.688 413.315 740.406 412.36 740.406 409.663 cv
740.406 407.547 741.775 406.717 745.053 406.717 cv
757.873 406.717 li
757.873 401.572 li
744.098 401.572 li
680.197 395.273 mo
680.167 395.482 680.108 395.661 680.108 395.901 cv
680.108 398.201 681.96 399.366 683.155 399.815 cv
683.155 399.874 li
682.229 399.874 681.273 399.964 680.347 399.994 cv
680.347 403.34 li
681.034 403.251 681.93 403.221 682.886 403.221 cv
695.734 403.221 li
695.734 399.516 li
687.308 399.516 li
684.44 399.516 683.514 397.843 683.514 396.319 cv
683.514 395.93 683.573 395.602 683.663 395.273 cv
680.197 395.273 li
685.814 380.663 mo
682.707 380.663 680.108 381.709 680.108 385.204 cv
680.108 387.714 681.781 388.76 682.707 389.298 cv
682.707 389.357 li
681.93 389.357 681.123 389.447 680.347 389.477 cv
680.347 392.943 li
681.034 392.853 681.93 392.823 682.886 392.823 cv
695.734 392.823 li
695.734 389.118 li
686.77 389.118 li
684.798 389.118 683.155 388.431 683.155 386.489 cv
683.155 384.965 684.141 384.368 686.502 384.368 cv
695.734 384.368 li
695.734 380.663 li
685.814 380.663 li
724.257 370.179 mo
724.257 376.552 li
748.803 376.552 li
751.541 376.552 753.832 377.398 753.832 380.485 cv
753.832 381.83 753.483 382.676 753.184 383.423 cv
758.661 383.423 li
759.159 382.278 759.508 380.336 759.508 378.842 cv
759.508 374.212 756.421 370.179 748.853 370.179 cv
724.257 370.179 li
673.803 373.193 mo
673.803 377.017 li
677.448 377.017 li
677.448 373.193 li
673.803 373.193 li
680.347 373.253 mo
680.347 376.958 li
695.734 376.958 li
695.734 373.253 li
680.347 373.253 li
685.814 357.388 mo
682.707 357.388 680.108 358.434 680.108 361.929 cv
680.108 364.439 681.781 365.485 682.707 366.023 cv
682.707 366.082 li
681.93 366.082 681.123 366.172 680.347 366.202 cv
680.347 369.668 li
681.034 369.578 681.93 369.548 682.886 369.548 cv
695.734 369.548 li
695.734 365.843 li
686.77 365.843 li
684.798 365.843 683.155 365.156 683.155 363.214 cv
683.155 361.69 684.141 361.093 686.502 361.093 cv
695.734 361.093 li
695.734 357.388 li
685.814 357.388 li
733.368 358.429 mo
733.368 364.603 li
749.898 364.603 li
755.076 364.603 759.408 362.86 759.408 357.035 cv
759.408 353.002 756.968 351.409 755.076 350.214 cv
755.026 350.264 li
755.076 350.114 li
756.371 350.114 757.715 349.965 759.01 349.915 cv
759.01 344.14 li
757.865 344.289 756.371 344.339 754.778 344.339 cv
733.368 344.339 li
733.368 350.513 li
748.056 350.513 li
751.342 350.513 754.33 351.459 754.33 354.745 cv
754.33 357.334 752.687 358.429 748.753 358.429 cv
733.368 358.429 li
680.347 341.253 mo
680.347 344.6 li
681.153 344.63 681.93 344.719 682.737 344.719 cv
682.737 344.839 li
681.392 345.616 680.108 346.661 680.108 348.902 cv
680.108 352.936 683.842 354.46 688.085 354.46 cv
694.3 354.46 695.734 351.233 695.734 349.082 cv
695.734 346.661 694.33 345.616 693.135 345.018 cv
693.135 344.958 li
694.599 344.958 li
697.019 344.958 699.439 345.526 699.439 349.022 cv
699.439 350.964 698.602 352.697 698.124 353.563 cv
701.411 353.773 li
701.74 352.876 702.367 350.934 702.367 348.484 cv
702.367 342.837 698.931 341.373 694.121 341.373 cv
682.767 341.373 li
681.96 341.373 681.153 341.313 680.347 341.253 cv
746.164 316.905 mo
739.044 316.905 732.97 319.544 732.97 325.917 cv
732.97 329.9 735.161 331.742 737.351 332.738 cv
737.351 332.887 li
735.609 332.887 734.115 332.987 733.368 333.087 cv
733.368 338.862 li
734.313 338.713 735.907 338.663 737.75 338.663 cv
769.764 338.663 li
769.764 332.489 li
755.325 332.489 li
755.325 332.39 li
757.317 331.493 759.408 329.452 759.408 325.768 cv
759.408 320.241 754.529 316.905 746.164 316.905 cv
671.323 314.146 mo
671.107 314.868 670.421 316.745 670.421 319.417 cv
670.421 323.641 672.768 327.36 677.28 327.36 cv
680.53 327.36 682.516 325.735 683.887 323.244 cv
685.187 320.897 li
686.415 318.659 687.209 317.612 689.014 317.612 cv
691.541 317.612 692.661 319.417 692.661 321.439 cv
692.661 323.894 691.686 325.88 691.108 326.782 cv
695.224 327.035 li
695.982 325.771 696.343 323.822 696.343 321.295 cv
696.343 316.493 693.888 312.846 688.761 312.846 cv
685.223 312.846 683.635 314.254 681.974 317.215 cv
680.458 319.923 li
679.663 321.331 678.941 322.594 677.064 322.594 cv
675.331 322.594 674.103 321.403 674.103 319.092 cv
674.103 316.962 674.753 315.482 675.186 314.363 cv
671.323 314.146 li
634.421 308.507 mo
629.18 308.507 627.557 310.878 627.557 313.647 cv
627.557 316.916 630.528 318.938 634.371 318.938 cv
637.839 318.938 640.809 317.141 640.809 312.999 cv
640.809 311.152 640.26 309.805 639.984 309.156 cv
637.539 309.306 li
637.964 309.879 638.538 310.778 638.538 312.674 cv
638.538 315.07 637.215 315.943 635.018 315.943 cv
635.018 308.507 li
634.421 308.507 li
733.368 292.011 mo
733.368 297.986 li
752.736 302.915 li
752.736 303.015 li
733.368 308.193 li
733.368 314.566 li
759.259 306.052 li
761.449 306.5 li
764.088 307.297 765.233 308.093 765.184 309.935 cv
765.184 310.881 764.935 311.578 764.686 312.275 cv
769.416 312.624 li
769.714 311.728 770.063 310.334 770.063 308.691 cv
770.063 304.558 767.424 302.467 763.889 301.372 cv
733.368 292.011 li
687.028 294.469 mo
679.447 294.469 677.1 297.899 677.1 301.907 cv
677.1 306.636 681.396 309.561 686.956 309.561 cv
691.975 309.561 696.271 306.961 696.271 300.968 cv
696.271 298.296 695.477 296.347 695.08 295.408 cv
691.541 295.625 li
692.155 296.455 692.986 297.755 692.986 300.499 cv
692.986 303.965 691.072 305.228 687.895 305.228 cv
687.895 294.469 li
687.028 294.469 li
627.633 299.374 mo
627.607 299.549 627.557 299.698 627.557 299.898 cv
627.557 301.82 629.106 302.793 630.104 303.167 cv
630.104 303.217 li
629.33 303.217 628.532 303.292 627.758 303.317 cv
627.758 306.111 li
628.332 306.037 629.081 306.012 629.879 306.012 cv
640.609 306.012 li
640.609 302.917 li
633.572 302.917 li
631.177 302.917 630.403 301.52 630.403 300.247 cv
630.403 299.923 630.453 299.649 630.528 299.374 cv
627.633 299.374 li
627.758 286.972 mo
627.758 289.967 li
637.665 292.612 li
637.665 292.662 li
627.758 295.282 li
627.758 298.476 li
640.609 294.558 li
640.609 290.915 li
627.758 286.972 li
677.208 281.256 mo
677.172 281.508 677.1 281.725 677.1 282.014 cv
677.1 284.794 679.338 286.202 680.783 286.743 cv
680.783 286.816 li
679.663 286.816 678.508 286.924 677.389 286.96 cv
677.389 291.004 li
678.219 290.895 679.302 290.859 680.458 290.859 cv
695.982 290.859 li
695.982 286.382 li
685.801 286.382 li
682.335 286.382 681.216 284.36 681.216 282.519 cv
681.216 282.05 681.288 281.653 681.396 281.256 cv
677.208 281.256 li
726.199 280.51 mo
728.091 286.684 li
733.368 286.684 li
733.368 290.767 li
737.899 290.767 li
737.899 286.684 li
751.94 286.684 li
757.317 286.684 759.408 284.095 759.408 279.514 cv
759.408 277.672 759.01 276.328 758.562 275.382 cv
754.18 275.382 li
754.429 275.83 754.728 276.627 754.728 277.722 cv
754.728 279.514 753.931 280.51 751.193 280.51 cv
737.899 280.51 li
737.899 275.382 li
733.368 275.382 li
733.368 280.51 li
726.199 280.51 li
634.421 275.245 mo
629.18 275.245 627.557 277.615 627.557 280.385 cv
627.557 283.654 630.528 285.675 634.371 285.675 cv
637.839 285.675 640.809 283.879 640.809 279.736 cv
640.809 277.89 640.26 276.542 639.984 275.893 cv
637.539 276.043 li
637.964 276.617 638.538 277.515 638.538 279.412 cv
638.538 281.807 637.215 282.681 635.018 282.681 cv
635.018 275.245 li
634.421 275.245 li
677.389 263.312 mo
677.389 267.645 li
691.722 271.472 li
691.722 271.544 li
677.389 275.335 li
677.389 279.956 li
695.982 274.288 li
695.982 269.017 li
677.389 263.312 li
627.633 266.112 mo
627.607 266.286 627.557 266.436 627.557 266.636 cv
627.557 268.557 629.106 269.53 630.104 269.905 cv
630.104 269.955 li
629.33 269.955 628.532 270.029 627.758 270.054 cv
627.758 272.849 li
628.332 272.774 629.081 272.749 629.879 272.749 cv
640.609 272.749 li
640.609 269.655 li
633.572 269.655 li
631.177 269.655 630.403 268.258 630.403 266.985 cv
630.403 266.661 630.453 266.386 630.528 266.112 cv
627.633 266.112 li
746.662 251.334 mo
736.206 251.334 732.97 256.064 732.97 261.591 cv
732.97 268.113 738.895 272.146 746.562 272.146 cv
753.483 272.146 759.408 268.561 759.408 260.296 cv
759.408 256.612 758.313 253.923 757.765 252.629 cv
752.886 252.927 li
753.732 254.073 754.877 255.865 754.877 259.649 cv
754.877 264.429 752.238 266.171 747.857 266.171 cv
747.857 251.334 li
746.662 251.334 li
621.894 260.672 mo
621.894 263.766 li
640.609 263.766 li
640.609 260.672 li
621.894 260.672 li
669.482 255.948 mo
669.482 260.569 li
673.887 260.569 li
673.887 255.948 li
669.482 255.948 li
677.389 256.02 mo
677.389 260.497 li
695.982 260.497 li
695.982 256.02 li
677.389 256.02 li
634.421 247.497 mo
629.18 247.497 627.557 249.867 627.557 252.637 cv
627.557 255.906 630.528 257.927 634.371 257.927 cv
637.839 257.927 640.809 256.131 640.809 251.988 cv
640.809 250.142 640.26 248.794 639.984 248.146 cv
637.539 248.295 li
637.964 248.869 638.538 249.768 638.538 251.664 cv
638.538 254.06 637.215 254.933 635.018 254.933 cv
635.018 247.497 li
634.421 247.497 li
677.858 239.16 mo
677.533 239.99 677.1 241.651 677.1 243.059 cv
677.1 249.305 681.396 252.049 686.704 252.049 cv
691.975 252.049 696.271 249.449 696.271 243.312 cv
696.271 241.506 695.91 239.954 695.513 238.907 cv
691.975 239.16 li
692.372 239.773 692.877 241.254 692.877 242.337 cv
692.877 245.767 690.206 247.427 686.74 247.427 cv
682.768 247.427 680.494 245.947 680.494 242.553 cv
680.494 241.326 680.999 240.207 681.396 239.412 cv
677.858 239.16 li
733.119 233.111 mo
733.07 233.46 732.97 233.759 732.97 234.157 cv
732.97 237.991 736.057 239.933 738.049 240.679 cv
738.049 240.779 li
736.505 240.779 734.912 240.928 733.368 240.978 cv
733.368 246.555 li
734.514 246.405 736.007 246.355 737.599 246.355 cv
759.01 246.355 li
759.01 240.182 li
744.969 240.182 li
740.189 240.182 738.646 237.393 738.646 234.854 cv
738.646 234.207 738.746 233.659 738.895 233.111 cv
733.119 233.111 li
637.19 240.235 mo
638.189 240.235 638.463 241.109 638.463 242.232 cv
638.463 243.679 637.814 244.952 637.615 245.451 cv
640.185 245.6 li
640.434 244.952 640.809 243.629 640.809 242.032 cv
640.809 239.237 639.386 237.241 637.016 237.241 cv
635.519 237.241 634.795 238.039 633.772 239.637 cv
632.799 241.159 li
632.225 242.057 631.85 242.606 631.152 242.606 cv
630.378 242.606 629.904 242.082 629.904 240.834 cv
629.904 239.711 630.179 238.888 630.478 238.114 cv
628.082 237.94 li
627.983 238.239 627.557 239.512 627.557 241.159 cv
627.557 243.879 629.43 245.6 631.202 245.6 cv
633.223 245.6 634.046 244.178 634.82 242.88 cv
635.568 241.608 li
636.217 240.485 636.69 240.235 637.19 240.235 cv
669.482 231.181 mo
669.482 235.802 li
673.887 235.802 li
673.887 231.181 li
669.482 231.181 li
677.389 231.253 mo
677.389 235.73 li
695.982 235.73 li
695.982 231.253 li
677.389 231.253 li
637.19 230.079 mo
638.189 230.079 638.463 230.953 638.463 232.076 cv
638.463 233.523 637.814 234.796 637.615 235.295 cv
640.185 235.444 li
640.434 234.796 640.809 233.473 640.809 231.876 cv
640.809 229.081 639.386 227.085 637.016 227.085 cv
635.519 227.085 634.795 227.884 633.772 229.481 cv
632.799 231.003 li
632.225 231.901 631.85 232.45 631.152 232.45 cv
630.378 232.45 629.904 231.926 629.904 230.678 cv
629.904 229.555 630.179 228.732 630.478 227.958 cv
628.082 227.784 li
627.983 228.083 627.557 229.356 627.557 231.003 cv
627.557 233.723 629.43 235.444 631.202 235.444 cv
633.223 235.444 634.046 234.022 634.82 232.724 cv
635.568 231.452 li
636.217 230.329 636.69 230.079 637.19 230.079 cv
686.667 210.927 mo
679.086 210.927 677.1 215.296 677.1 219.086 cv
677.1 222.877 679.086 227.282 686.667 227.282 cv
694.466 227.282 696.271 222.877 696.271 219.086 cv
696.271 215.296 694.466 210.927 686.667 210.927 cv
628.368 204.451 mo
624.939 204.451 622.861 206.399 622.861 210.14 cv
622.861 215.335 li
640.993 215.335 li
640.993 212.01 li
633.901 212.01 li
633.901 210.14 li
633.901 206.399 631.797 204.451 628.368 204.451 cv
691.036 200.349 mo
692.48 200.349 692.877 201.613 692.877 203.237 cv
692.877 205.331 691.939 207.173 691.65 207.895 cv
695.368 208.111 li
695.729 207.173 696.271 205.259 696.271 202.949 cv
696.271 198.905 694.213 196.017 690.783 196.017 cv
688.617 196.017 687.57 197.172 686.09 199.483 cv
684.682 201.685 li
683.851 202.985 683.31 203.779 682.299 203.779 cv
681.18 203.779 680.494 203.021 680.494 201.216 cv
680.494 199.591 680.891 198.4 681.324 197.28 cv
677.858 197.028 li
677.714 197.461 677.1 199.302 677.1 201.685 cv
677.1 205.62 679.808 208.111 682.371 208.111 cv
685.295 208.111 686.487 206.053 687.606 204.176 cv
688.689 202.335 li
689.628 200.71 690.314 200.349 691.036 200.349 cv
627.484 195.151 mo
627.458 195.333 627.407 195.489 627.407 195.696 cv
627.407 197.697 629.017 198.71 630.056 199.099 cv
630.056 199.151 li
629.251 199.151 628.42 199.229 627.614 199.255 cv
627.614 202.165 li
628.212 202.087 628.991 202.061 629.822 202.061 cv
640.993 202.061 li
640.993 198.84 li
633.667 198.84 li
631.173 198.84 630.368 197.385 630.368 196.06 cv
630.368 195.722 630.42 195.437 630.498 195.151 cv
627.484 195.151 li
634.55 182.786 mo
629.095 182.786 627.407 185.254 627.407 188.137 cv
627.407 191.54 630.498 193.644 634.498 193.644 cv
638.109 193.644 641.2 191.774 641.2 187.462 cv
641.2 185.54 640.629 184.137 640.343 183.461 cv
637.797 183.617 li
638.239 184.215 638.836 185.15 638.836 187.124 cv
638.836 189.618 637.46 190.527 635.174 190.527 cv
635.174 182.786 li
634.55 182.786 li
671.468 166.629 mo
671.107 167.567 670.421 169.661 670.421 172.225 cv
670.421 179.734 676.017 183.67 683.382 183.67 cv
690.747 183.67 696.343 179.734 696.343 172.08 cv
696.343 169.806 695.946 167.567 695.441 166.629 cv
691.216 166.881 li
691.975 167.928 692.516 169.409 692.516 171.647 cv
692.516 175.474 689.917 178.759 683.382 178.759 cv
676.847 178.759 674.248 175.474 674.248 171.647 cv
674.248 169.3 675.15 167.82 675.62 166.881 cv
671.468 166.629 li
621.51 169.304 mo
621.51 172.525 li
629.537 172.525 li
629.537 172.577 li
628.498 173.045 627.407 174.11 627.407 176.032 cv
627.407 178.915 629.952 180.656 634.316 180.656 cv
638.031 180.656 641.2 179.279 641.2 175.954 cv
641.2 173.876 640.057 172.915 638.914 172.395 cv
638.914 172.317 li
639.824 172.317 640.603 172.265 640.993 172.213 cv
640.993 169.2 li
640.499 169.278 639.668 169.304 638.707 169.304 cv
621.51 169.304 li
621.926 162.758 mo
621.926 166.083 li
625.095 166.083 li
625.095 162.758 li
621.926 162.758 li
627.615 162.81 mo
627.615 166.031 li
640.993 166.031 li
640.993 162.81 li
627.615 162.81 li
668.904 158.325 mo
668.904 162.802 li
695.982 162.802 li
695.982 158.325 li
668.904 158.325 li
627.952 150.679 mo
627.718 151.276 627.407 152.471 627.407 153.484 cv
627.407 157.978 630.498 159.953 634.316 159.953 cv
638.109 159.953 641.2 158.082 641.2 153.666 cv
641.2 152.367 640.941 151.25 640.655 150.497 cv
638.109 150.679 li
638.395 151.12 638.759 152.186 638.759 152.965 cv
638.759 155.433 636.836 156.628 634.342 156.628 cv
631.485 156.628 629.848 155.563 629.848 153.121 cv
629.848 152.237 630.212 151.432 630.498 150.861 cv
627.952 150.679 li
686.667 137.999 mo
679.086 137.999 677.1 142.367 677.1 146.158 cv
677.1 149.949 679.086 154.353 686.667 154.353 cv
694.466 154.353 696.271 149.949 696.271 146.158 cv
696.271 142.367 694.466 137.999 686.667 137.999 cv
627.952 139.613 mo
627.718 140.21 627.407 141.405 627.407 142.418 cv
627.407 146.912 630.498 148.887 634.316 148.887 cv
638.109 148.887 641.2 147.016 641.2 142.6 cv
641.2 141.301 640.941 140.184 640.655 139.431 cv
638.109 139.613 li
638.395 140.054 638.759 141.119 638.759 141.899 cv
638.759 144.367 636.836 145.562 634.342 145.562 cv
631.485 145.562 629.848 144.496 629.848 142.055 cv
629.848 141.171 630.212 140.366 630.498 139.795 cv
627.952 139.613 li
621.926 133.872 mo
621.926 137.197 li
625.095 137.197 li
625.095 133.872 li
621.926 133.872 li
627.615 133.924 mo
627.615 137.145 li
640.993 137.145 li
640.993 133.924 li
627.615 133.924 li
634.29 119.299 mo
628.835 119.299 627.407 122.442 627.407 125.17 cv
627.407 127.897 628.835 131.067 634.29 131.067 cv
639.901 131.067 641.2 127.897 641.2 125.17 cv
641.2 122.442 639.901 119.299 634.29 119.299 cv
622.393 122.027 mo
622.393 125.04 li
626.134 126.703 li
626.134 124.676 li
622.393 122.027 li
632.368 106.181 mo
629.667 106.181 627.407 107.09 627.407 110.129 cv
627.407 112.312 628.861 113.221 629.667 113.688 cv
629.667 113.74 li
628.991 113.74 628.29 113.818 627.614 113.844 cv
627.614 116.858 li
628.212 116.78 628.991 116.754 629.822 116.754 cv
640.993 116.754 li
640.993 113.532 li
633.199 113.532 li
631.485 113.532 630.056 112.935 630.056 111.246 cv
630.056 109.922 630.913 109.402 632.966 109.402 cv
640.993 109.402 li
640.993 106.181 li
632.368 106.181 li
626.383 78.5566 mo
622.311 78.5566 619.843 80.8699 619.843 85.3127 cv
619.843 91.4829 li
641.376 91.4829 li
641.376 87.5336 li
632.954 87.5336 li
632.954 85.3127 li
632.954 80.8699 630.455 78.5566 626.383 78.5566 cv
747.127 472.396 mo
742.978 472.396 739.949 471.235 739.949 468.413 cv
739.949 465.55 742.729 464.555 747.003 464.555 cv
751.94 464.555 754.43 465.342 754.43 468.33 cv
754.43 471.359 751.152 472.396 747.127 472.396 cv
688.085 466.532 mo
685.187 466.532 682.826 465.785 682.826 463.604 cv
682.826 461.453 684.619 460.885 688.175 460.885 cv
691.252 460.885 693.254 461.602 693.254 463.664 cv
693.254 465.696 691.073 466.532 688.085 466.532 cv
747.169 450.614 mo
743.6 450.614 739.825 449.825 739.825 446.506 cv
739.825 443.187 743.6 442.44 747.169 442.44 cv
750.737 442.44 754.554 443.187 754.554 446.506 cv
754.554 449.825 750.737 450.614 747.169 450.614 cv
805.755 437.479 mo
802.547 437.479 799.151 436.77 799.151 433.785 cv
799.151 430.8 802.547 430.129 805.755 430.129 cv
808.964 430.129 812.397 430.8 812.397 433.785 cv
812.397 436.77 808.964 437.479 805.755 437.479 cv
686.711 430.052 mo
684.679 430.052 682.617 429.245 682.617 427.303 cv
682.617 425.63 683.992 424.733 686.711 424.733 cv
686.711 430.052 li
691.103 415.62 mo
688.862 415.62 688.205 413.738 688.205 410.571 cv
688.205 410.242 li
689.071 410.242 li
691.82 410.242 693.463 411.049 693.463 413.26 cv
693.463 414.694 692.507 415.62 691.103 415.62 cv
687.876 350.635 mo
684.739 350.635 682.946 349.888 682.916 347.946 cv
682.886 346.183 684.619 344.958 687.846 344.958 cv
691.342 344.958 693.015 345.885 693.015 348.215 cv
693.015 349.47 691.491 350.635 687.876 350.635 cv
746.264 332.489 mo
741.434 332.489 737.501 331.244 737.501 327.61 cv
737.501 324.025 740.488 323.079 746.413 323.079 cv
751.541 323.079 754.877 324.274 754.877 327.709 cv
754.877 331.095 751.243 332.489 746.264 332.489 cv
633.073 315.943 mo
631.376 315.943 629.654 315.269 629.654 313.647 cv
629.654 312.25 630.802 311.501 633.073 311.501 cv
633.073 315.943 li
685.079 305.228 mo
682.624 305.228 680.133 304.254 680.133 301.907 cv
680.133 299.885 681.793 298.802 685.079 298.802 cv
685.079 305.228 li
633.073 282.681 mo
631.376 282.681 629.654 282.007 629.654 280.385 cv
629.654 278.988 630.802 278.239 633.073 278.239 cv
633.073 282.681 li
743.973 266.171 mo
740.588 266.171 737.152 264.827 737.152 261.591 cv
737.152 258.803 739.443 257.309 743.973 257.309 cv
743.973 266.171 li
633.073 254.933 mo
631.376 254.933 629.654 254.259 629.654 252.637 cv
629.654 251.24 630.802 250.491 633.073 250.491 cv
633.073 254.933 li
686.667 222.661 mo
683.563 222.661 680.277 221.975 680.277 219.086 cv
680.277 216.198 683.563 215.548 686.667 215.548 cv
689.772 215.548 693.094 216.198 693.094 219.086 cv
693.094 221.975 689.772 222.661 686.667 222.661 cv
631.355 212.01 mo
625.406 212.01 li
625.406 210.763 li
625.406 208.685 626.393 207.776 628.368 207.776 cv
630.342 207.776 631.355 208.685 631.355 210.763 cv
631.355 212.01 li
749.526 209.541 mo
733.973 209.541 li
733.973 207.947 li
733.973 202.609 737.606 200.2 743.278 200.2 cv
743.714 200.2 744.138 200.214 744.549 200.243 cv
746.251 203.31 747.915 206.418 749.526 209.541 cv
633.147 190.527 mo
631.381 190.527 629.589 189.826 629.589 188.137 cv
629.589 186.683 630.784 185.903 633.147 185.903 cv
633.147 190.527 li
634.187 177.435 mo
631.511 177.435 629.77 176.811 629.77 175.019 cv
629.77 173.252 631.667 172.525 634.264 172.525 cv
636.784 172.525 638.836 173.174 638.836 175.071 cv
638.836 176.941 637.278 177.435 634.187 177.435 cv
686.667 149.732 mo
683.563 149.732 680.277 149.046 680.277 146.158 cv
680.277 143.27 683.563 142.62 686.667 142.62 cv
689.772 142.62 693.094 143.27 693.094 146.158 cv
693.094 149.046 689.772 149.732 686.667 149.732 cv
634.29 127.742 mo
632.056 127.742 629.692 127.248 629.692 125.17 cv
629.692 123.092 632.056 122.624 634.29 122.624 cv
636.524 122.624 638.914 123.092 638.914 125.17 cv
638.914 127.248 636.524 127.742 634.29 127.742 cv
629.931 87.5336 mo
622.866 87.5336 li
622.866 86.0527 li
622.866 83.5847 624.039 82.5049 626.383 82.5049 cv
628.728 82.5049 629.931 83.5847 629.931 86.0527 cv
629.931 87.5336 li
.516777 .117586 .114351 0 cmyk
f
675.337 475.57 mo
640.6 475.57 li
640.645 475.184 640.669 474.781 640.669 474.358 cv
640.669 471.92 639.943 470.142 639.582 469.286 cv
636.353 469.483 li
636.913 470.24 637.671 471.427 637.671 473.93 cv
637.671 474.552 637.603 475.097 637.472 475.57 cv
633.026 475.57 li
633.026 468.429 li
632.236 468.429 li
625.318 468.429 623.177 471.559 623.177 475.214 cv
623.177 475.334 623.18 475.453 623.186 475.57 cv
475.258 475.57 li
441.572 444.196 396.168 424.968 346.212 424.968 cv
296.269 424.968 250.881 444.199 217.207 475.57 cv
0 475.57 li
0 424.317 li
30.2938 411.137 63.7811 403.824 99.0112 403.824 cv
99.0112 403.824 li
113.177 403.824 127.042 405.061 140.545 407.351 cv
149.797 376.795 164.37 348.519 183.209 323.566 cv
202.844 297.558 227.111 275.161 254.799 257.576 cv
297.333 230.562 347.95 214.893 402.281 214.893 cv
460.629 214.893 514.699 232.956 559.08 263.734 cv
583.642 280.767 605.236 301.694 622.943 325.607 cv
622.942 325.654 622.942 325.702 622.942 325.75 cv
622.942 328.438 624.317 330.831 626.969 331.193 cv
629.189 334.355 631.337 337.56 633.421 340.819 cv
626.109 340.819 li
625.219 340.819 624.33 340.753 623.44 340.687 cv
623.44 344.376 li
624.33 344.408 625.186 344.507 626.076 344.507 cv
626.076 344.64 li
624.593 345.496 623.177 346.649 623.177 349.12 cv
623.177 353.566 627.295 355.246 631.972 355.246 cv
636.861 355.246 639.067 353.435 639.929 351.535 cv
641.522 354.303 643.065 357.097 644.562 359.924 cv
644.566 359.932 644.57 359.941 644.574 359.948 cv
644.666 360.122 644.757 360.294 644.848 360.467 cv
663.082 395.117 673.931 434.154 675.337 475.57 cv
617.412 452.09 mo
617.412 456.307 li
640.405 456.307 li
640.405 444.514 li
637.045 444.514 li
637.045 452.09 li
617.412 452.09 li
632.236 428.77 mo
625.318 428.77 623.177 431.899 623.177 435.554 cv
623.177 439.87 627.097 442.539 632.17 442.539 cv
636.749 442.539 640.669 440.167 640.669 434.698 cv
640.669 432.26 639.943 430.481 639.582 429.626 cv
636.353 429.823 li
636.913 430.58 637.671 431.767 637.671 434.271 cv
637.671 437.433 635.924 438.586 633.026 438.586 cv
633.026 428.77 li
632.236 428.77 li
629.304 416.746 mo
629.93 416.746 li
629.93 417.57 li
629.93 422.741 631.083 426.496 635.694 426.496 cv
638.857 426.496 640.669 424.059 640.669 421.423 cv
640.669 418.985 639.483 417.701 638.099 416.68 cv
638.099 416.614 li
638.923 416.614 639.746 416.581 640.405 416.384 cv
640.405 412.694 li
639.746 412.793 638.626 412.925 637.407 412.925 cv
629.995 412.925 li
625.746 412.925 623.177 414.144 623.177 419.414 cv
623.177 422.017 623.902 423.631 624.429 424.783 cv
627.723 424.552 li
627.064 423.763 626.076 421.951 626.076 419.908 cv
626.076 417.57 627.624 416.746 629.304 416.746 cv
623.276 400.243 mo
623.243 400.473 623.177 400.67 623.177 400.935 cv
623.177 403.471 625.219 404.755 626.537 405.25 cv
626.537 405.316 li
625.516 405.316 624.462 405.415 623.44 405.448 cv
623.44 409.137 li
624.198 409.037 625.186 409.004 626.241 409.004 cv
640.405 409.004 li
640.405 404.919 li
631.116 404.919 li
627.953 404.919 626.932 403.075 626.932 401.396 cv
626.932 400.968 626.998 400.604 627.097 400.243 cv
623.276 400.243 li
629.469 384.134 mo
626.043 384.134 623.177 385.288 623.177 389.141 cv
623.177 391.909 625.022 393.062 626.043 393.655 cv
626.043 393.721 li
625.186 393.721 624.297 393.82 623.44 393.853 cv
623.44 397.674 li
624.198 397.574 625.186 397.542 626.241 397.542 cv
640.405 397.542 li
640.405 393.457 li
630.523 393.457 li
628.349 393.457 626.537 392.7 626.537 390.559 cv
626.537 388.879 627.624 388.22 630.226 388.22 cv
640.405 388.22 li
640.405 384.134 li
629.469 384.134 li
616.226 375.899 mo
616.226 380.115 li
620.245 380.115 li
620.245 375.899 li
616.226 375.899 li
623.44 375.965 mo
623.44 380.05 li
640.405 380.05 li
640.405 375.965 li
623.44 375.965 li
629.469 358.475 mo
626.043 358.475 623.177 359.628 623.177 363.481 cv
623.177 366.249 625.022 367.402 626.043 367.995 cv
626.043 368.06 li
625.186 368.06 624.297 368.159 623.44 368.192 cv
623.44 372.013 li
624.198 371.914 625.186 371.882 626.241 371.882 cv
640.405 371.882 li
640.405 367.797 li
630.523 367.797 li
628.349 367.797 626.537 367.039 626.537 364.898 cv
626.537 363.218 627.624 362.559 630.226 362.559 cv
640.405 362.559 li
640.405 358.475 li
629.469 358.475 li
630.457 475.57 mo
625.965 475.57 li
625.951 475.455 625.943 475.337 625.943 475.214 cv
625.943 473.37 627.459 472.382 630.457 472.382 cv
630.457 475.57 li
630.457 438.586 mo
628.217 438.586 625.943 437.696 625.943 435.554 cv
625.943 433.71 627.459 432.722 630.457 432.722 cv
630.457 438.586 li
635.299 422.675 mo
632.829 422.675 632.104 420.599 632.104 417.109 cv
632.104 416.746 li
633.059 416.746 li
636.09 416.746 637.902 417.636 637.902 420.073 cv
637.902 421.654 636.847 422.675 635.299 422.675 cv
631.742 351.03 mo
628.283 351.03 626.306 350.207 626.273 348.066 cv
626.241 346.121 628.151 344.771 631.708 344.771 cv
635.563 344.771 637.407 345.793 637.407 348.362 cv
637.407 349.746 635.727 351.03 631.742 351.03 cv
.575402 .156832 .142367 .00296025 cmyk
f
475.257 475.57 mo
217.207 475.57 li
250.881 444.199 296.269 424.969 346.212 424.969 cv
396.168 424.969 441.572 444.196 475.257 475.57 cv
.623041 .191196 .162661 .0101015 cmyk
f
grestore
.997 .814 .439 .544 cmyk
%ADOBeginSubsetFont: DCAAAA+FrutigerLTStd-BoldCn Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /DCAAAA+FrutigerLTStd-BoldCn def/FontInfo 7 dict dup begin/Notice (Copyright 1991, 2002 Adobe Systems Incorporated. All Rights Reserved. Frutiger is a trademark of Heidelberger Druckmaschinen AG, exclusively licensed through Linotype Library GmbH, and may be registered in certain jurisdictions.) def/Weight (Bold) def/ItalicAngle 0 def/FSType 4 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /iacute putdup 33 /space putdup 34 /aacute putdup 35 /uacute putdup 36 /ntilde putdup 44 /comma putdup 45 /hyphen putdup 46 /period putdup 49 /one putdup 58 /colon putdup 67 /C putdup 70 /F putdup 73 /I putdup 77 /M putdup 79 /O putdup 80 /P putdup 97 /a putdup 98 /b putdup 99 /c putdup 100 /d putdup 101 /e putdup 102 /f putdup 103 /g putdup 105 /i putdup 108 /l putdup 109 /m putdup 110 /n putdup 111 /o putdup 112 /p putdup 114 /r putdup 115 /s putdup 116 /t putdup 117 /u putdup 119 /w putdup 121 /y putdup 127 /oacute putdef/FontBBox {-112 -250 1000 940} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-10 -0 698 708 515 523 750 762] def/OtherBlues [278 282 392 396 -222 -216] def/FamilyBlues [-12 -0 698 710 510 522 750 762] def/FamilyOtherBlues [276 282 388 396 -222 -210] def/StdHW [91] def/StdVW [124] def/ForceBold true def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings37 dict dup begin/iacute <1C60D8A8C9B8666C9C44EA243C33A5AE16FC86B162998177F227CD192D1E77197508AFDDE62B7D261D69FC66496E3462C72B> |-/space <1C60D8A8C9B8666C32> |-/aacute <1C60D8A8C9B7A73DCD9958C6E64F63E6F3734415DFD0A675ECE62033B56A8969AAD0103EF04B38F17A05106E55091B25BC2A2548686956369B0A9BD5F45666E1502385F63826BF17D3992CA71E9999A1B1E9E0A0F72FFE7190A7351A695C4DB5C04B7016CD85B39D7A298FA81AD307862D0354546EB4E9F8D1C5980F19E933610950176F49580A0947D0B5125B0742D9CBC5DAC6DE37460B2052F18FECFCEAE82CB726368EAB7015910156D8F36B84A2D292F25DE0668C16BB485F67B7576AC98FD510A7E52F3627D2568F> |-/uacute <1C60D8A8C9B7B4A14B28FDF74BF35B5D4EC2FFC01AF494202A6946B8A9347D20680A812AB505F10EEED3B8C00E9B8BF3A72E6E7E90F48E98CAF92266274E1D5596D91A3D9FF1C375B0FD9A35613233C10469C65E1000D050013956C301ECD623C65FE37E9F55C35BFFC861955E52CF9596B0FE4C3EBA25B29B5B89CC451CFF4DE0236794149F41> |-/ntilde <1C60D8A8C9B7B4A1684D51772B34390584AE1ED765164D5A3DC65F2E74AF4E916D779E3747288FA36056F7DB26699AB63649644D652666551BFAE9C44602663A86B554789C12837EF83E3FEC0103F8832126FEB49993D45EF0829BFF6960295B76422A8F1064930DE8FA497F70F8244BB6E53A17DE618569D50C406C12A5F1BC095C7C4BE420A845B70587F98BB9DCADF9054248E6B5870461D531FAB9597C44243DD9E4613603F228E93C11F9AE119C7C2B1BF7C94B28FD119C8DABFE6B4D8EC587F465F033F5436A17BFEAD1C1CB137B876AA6D890914A699CA96F06D5BB7157794786536D4F56A6B1F1F6AB31604D53CA> |-/comma <1C60D8A8C9B8666CC7D2AC3BD7145E0EB8175B93D255A24C2FF01B4C78278E8694> |-/hyphen <1C60D8A8C9B831A9833F06E51826DA620C71C745FE519923DE91D4DC6C04> |-/period <1C60D8A8C9B8666CB700496C35CB30B6622CF9EBC7DE8BA69F12C6C744> |-/one <1C60D8A8C9B7B3D0B3A458FA7DCBAAB7EC0146FDE8039E161FF1AA5063C42D84ECCCBC791DD878279447122A> |-/colon <1C60D8A8C9B8666CB700496C1C01B1E011D4E7316CC6CF4DB94091ED59F89FBB3C73757FDBF29660E023E927BAF224> |-/C <1C60D8A8C9B7EF325D924639225120157F5DE598F31C38C16FD8CBE4F1A972F31C6EBA63927DCE141B786C0A9C0B7A4E82326CDAA6E00A416FD368BBE2E7D82B6B57F6A5F692F1D803BFD701A3BBF2B36AEBF3E9D4AB823A> |-/F <1C60D8A8C9B74CDDCE74E2570FBF2BEF25EE91914141EC7A0B111C826A01EDDA236288AA468F9106DEC0DAE1A05E7744866EB420> |-/I <1C60D8A8C9B854D0A3953AFD7AE964F1150A765BEA528F6F738DDD77761A93DE> |-/M <1C60D8A8C9B6A283DF229476C8A987545BD95C9094E122AFCD9F1E59B922D3354E10624EE985B15C209354EE912F1AF3E116E9DFD3ADF087C8370094962106A54D70473FB092A2320DDB7F15750870> |-/O <1C60D8A8C9B67DB5FE58507EE11B224ECB500A44071249F099EA977709BB847C80E10A955A2CDABD818A5088E9044FB1196147C4863CE5CABF64601230F885518536D467D48F367690576D5ACF10A4E811F9DBBF07D77B722D5CD9844EA43B> |-/P <1C60D8A8C9B7B4A1684D517845BBFF43490091FA51CC3408DC235C9ACB8F65840B25E7A04DF1915F5CDC95670FAAFA5E2C4165A5E521D2FE54EC5F7F9C7E0FA590FAE836796FE2B597984376283302D62D> |-/a <1C60D8A8C9B7A73DCD9958C6E64F63E6F37344453430B84B2285B3724C26339E03D20F8AEADBC5301900B3FAF3BACAE6772060546D40C933780E259448C5C7ADAFBE07F509662FBE27E948638225658C5FF5AED800289BAE894B25402122F94D2FAEA2CFED5A19A1B47E8D1EA2D413FD5CDC0679A46363C10C5A2EBA042E56BF7AB6653B37DC134D89BD30E7C52639172069ECCEAFB684899575CA2C9D3C19A7A56548CD62473769A962A132DA> |-/b <1C60D8A8C9B78256A6C77A6BB8E5D29A5B8CA246394C43B9A9C77FBD7D3089F0BE8D4DA8694BA15D94A6CB9BCD2D995E83FDEC9218723A33A99226F99738E8A8A1938BEC85E47A580DBCCF9089BC3459700D2AD98771034363A97527BDAADF6EAA6AA25E795DC231865BD3F55C886BDBAC6AEB7487F64334BC8CED7F7F1E4D5F4F9E6033E31566875D85120C5ABD8E6DEEB7CBF2C630D547D3FAB2066959CE> |-/c <1C60D8A8C9B71131A481F6E588C888FEA1C27497A2F00A45656F413A9A60D0F7866E75AE280CED52043E0467AB65D1A2B56ECFF32FEFB3632903DE33C9A38A3B2BE172CCC52D1FBAF156528B317CC4DFE1B31616B858331869473A6DC278F8C902EA77B49A72151781F756E18AB1> |-/d <1C60D8A8C9B78256A6C77A6BB8E5D29A5B8CA23610B630C37A2BCEFD526ECA358E0EFB6721264AE646DA35166955744385363A0DF5DF2CC823E8C9D8DA12992121E42C484AB5BF7E5766FF5E87065A514B5FF232B91DFF6CA6C71E1705C8C4AEBF04B342011A7CC229D5390ED71B36FCC3D4D05CF8E30741E95814CB7EC9A40D13A46A902DF9F53E34C99C6FDE8901B296E9C8B3ADD522060BAB7255B57707E7D6CB> |-/e <1C60D8A8C9B7A73DCDA0FFE47F799BE2FCD5385135B2A39640E80B4384B5D3F101399346CD862377548B955D577182EB9D6C631CDBA8DF2906C2C21EAE588AC2BC2A31460D0986D1703ABBEF4FB27773C656DCC15D6DD2F634A40DBFDCADD69E4E32> |-/f <1C60D8A8C9B81F2C6DADD030FA8740E6C9BD8B66C514A56FCA9F00CAC961EDB5F6EE82C71AAEAC402EE62B3DBB6A5743EE11B44A18E48A3198E3258625ACF178D5E88268EC24EDBE71097A0E9BCD3EDC93EB05CB6BE0E79BFF0594377DB70783B94F2B923E4978B7DABDD29F9CEB49B545BB8C6CBE2268FA8E260E2AC2BD6519> |-/g <1C60D8A8C9B78256DE3BB35EF11067AD7CBA6F44DF242933D9E67E234DEFE5B021B49438E1A272CD4DA0A7BC7EB3752844A2A76EB9A9588FC9F3EC65E3733036D4858E3A008D2561BBB6CF5EF1C3E44247DCC269733654B9B50659244C90FFE831DB18995CC89E5C9CFB71F662939313BC1914336F46B812688E86924C237A0D9D086A2E3DAC84F3178051C634112F5983D9FF1BB29CFA76C19A5EDC17DAECD288A114D173BDAEB56E66D4ACDE93F0F4F37E743E88A98E1D45FDCF48622467ED634C> |-/i <1C60D8A8C9B8666C9C44EA243C33A5AE3EBB57103DAA4A886BBA9B5720F1DB96561A166C9152BB2B80A1EF4CF8F0A7A78367> |-/l <1C60D8A8C9B8666C9C44EA25FB96E81282DEBD1383976DBC3D3406057142AA1F> |-/m <1C60D8A8C9B6FF86C239930DF1BF200BB36C06C322E584ADFE517C3A80AC987CDFEF9FF3B627FBF255228EC1BD5A87C93E9E5ED639E9A3C55D082623ABAA9709EC23D11CDE0290C12BF10BB20DA52052BAA1A9A4A760373DAF2F4CC9F406DF70A617E98F449DE6EA6A2A1B2A64F53E0B87126EDC3D107D4AD5484C73E0FC676012A1D4365999882363A17FB81F15E05984> |-/n <1C60D8A8C9B7B4A1684D51772B34393FBC8AA35A47209A006D77F2460AB97F56C4B591677484758E1522568CB3ADC595BA287B7BC0E527C6CE04976FB609A19AD2459C127DA64EF0ADEDC3810F63ED1F3D19057A1737FE596EC322D7F5A8CA10D043162D03086E> |-/o <1C60D8A8C9B78256A6C2731288984BE3F80BA7B8B184346D65447169325ECF7CDF6A519998975A827597B247DD3B603620EDC0D766EEEC063B4A69324EBDBD5959E4AE70ED8DE84F3858C2F33CE14825A4F351> |-/p <1C60D8A8C9B78256DE1E8AD3B4DCD195358FF45D5CB8F850349B0BE2040B31DFB8C241700A8458175D1B5B19B1B548B48E96A7260EC1B1176386F5CBAB0A1A2A58EE206253ECCA264E901C63B9221C4954FED1CD592AA94BD215103824ADAAB59C9DBFE9E9C8B91DF84B41C5428F0E8BCCAD3BD9116375B4B628AA2B024E21CF5EAE754B0E7D95CF3DC59B236CB96FFD3AF9DF36CFEA5F8E2A2E2A163751E9A18EC250AA01F5E9EFA649C723DAA8EFCC1DD0D49549FA75> |-/r <1C60D8A8C9B80A3FD544F7684E5D4154F741857BF9BEE22F663DE9EAF64E4E9DCBA9D38728A8D7F06EB2B64EAC90AA7BE1D21FD60D3FE8B65465CA350CB4447CB72A8658459521337A0D58D3FA595F696D4FD2B81D44499198C67C1084CCCCDE2E447D08ABC3FDA85357A7642DCFB3A45480AB9A64AEBF34ABECDAB60284FE43349E3E> |-/s <1C60D8A8C9B704CCCF95547B34CE058052A6B3005506FBA8CF605FEACBEBFA64C8253D991C8EC25D9BA4336F85BA4430CD70BF09530D6752C621B14B717DC3A2B3F065B5E689711BA1CC21CCA6173D80BFC9FF5941851232E25B7217DEB43852987D3CDC6C2C5CD55F80622A7F30D002AE4C1F08EBB6E262ABBB4BAF3775BA776199615D6F0219BB8F95C311F5368D0BF55A30A0867C60B1> |-/t <1C60D8A8C9B80A3FF6277AE320EF02833B1484835BE771CCA10A41D6D1E9BDF615E48D337E4A6E4A17427B882D3631CB50564816E6FDEDDF231D335034C59960CD5BEE6E777B957DA5730D7493> |-/u <1C60D8A8C9B7B4A14B28FDF74BF35B66175925E741C9DCC42B281834DF90C24BFA55DDA7EC58C51AA6643CCB643FD279B0D510BA878F9D5D86478653D6B36E1232CB6A9FAE41E906CD792DDCB970BCC91AC4D5EC9B8BCF6612B921FDC2BBFEC025368A12412A9C0F9434D680F45C> |-/w <1C60D8A8C9B6184AC728E9CB9A069F9F60CB9309DC2F5A0F0445A13442086DAB8ECC5ABF0573E4B6C2EC3A83A6243A329711C0597A5E101FA45D402D09E2B5CDD1522BA88DCC8C274FBA9ED4601E618748A5534BF5AB4D9AFD2668> |-/y <1C60D8A8C9B74CDD957967F3B2071796E09958A572FBFEBFAF7F0F225D9288640BC7E84E0585BFE69029D5316DE5D6DCE88DC3684549C4ACCDBD420CBDA831C67C75B065C3BF4A65CA52192C5B6A7BD4BB2E14> |-/oacute <1C60D8A8C9B78256A6C2731288984BAE82F640A724C26A398328AD5B557C788FDBBFF48A292D90F776932540064210254197B154A8663581E66520C7AD26790DA26501A845E87097EE6C064C6E20FD443913E76C6DEB9EE20BA98DC77D9EBC9544CB9A49668BB4> |-/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364CBBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917B17192> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/DKGIWT+FrutigerLTStd-BoldCn /DCAAAA+FrutigerLTStd-BoldCn findfont ct_VMDictPut/DKGIWT+FrutigerLTStd-BoldCn*1 [32{/.notdef}rp /iacute /space /aacute /uacute /ntilde 7{/.notdef}rp /comma /hyphen /period 2{/.notdef}rp /one 8{/.notdef}rp /colon 8{/.notdef}rp /C 2{/.notdef}rp /F 2{/.notdef}rp /I 3{/.notdef}rp /M /.notdef /O /P 16{/.notdef}rp /a /b /c /d /e /f /g /.notdef /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /.notdef /w /.notdef /y 5{/.notdef}rp /oacute 128{/.notdef}rp]DKGIWT+FrutigerLTStd-BoldCn nfDKGIWT+FrutigerLTStd-BoldCn*1 [15.15 0 0 -15.15 0 0 ]msf77.0714 769.099 mo(Preinscripci\177n:)[7.86281 5.18137 7.575 3.93892 7.86281 6.16602 6.45383 5.33287 3.93892 8.13559 6.45383 3.9389 8.13559 7.86281 0 ]xsh%ADOBeginSubsetFont: GCAAAA+FrutigerLTStd-Cn Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /GCAAAA+FrutigerLTStd-Cn def/FontInfo 7 dict dup begin/Notice (Copyright 1991, 2002 Adobe Systems Incorporated. All Rights Reserved. Frutiger is a trademark of Heidelberger Druckmaschinen AG, exclusively licensed through Linotype Library GmbH, and may be registered in certain jurisdictions.) def/Weight (Regular) def/ItalicAngle 0 def/FSType 4 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 33 /Euro putdup 34 /oacute putdup 40 /parenleft putdup 41 /parenright putdup 42 /asterisk putdup 44 /comma putdup 45 /hyphen putdup 46 /period putdup 47 /slash putdup 48 /zero putdup 49 /one putdup 50 /two putdup 53 /five putdup 54 /six putdup 55 /seven putdup 56 /eight putdup 57 /nine putdup 58 /colon putdup 64 /at putdup 66 /B putdup 73 /I putdup 76 /L putdup 79 /O putdup 80 /P putdup 97 /a putdup 98 /b putdup 99 /c putdup 100 /d putdup 101 /e putdup 102 /f putdup 105 /i putdup 106 /j putdup 108 /l putdup 109 /m putdup 110 /n putdup 111 /o putdup 112 /p putdup 114 /r putdup 115 /s putdup 117 /u putdup 121 /y putdef/FontBBox {-105 -250 1000 929} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-7 -0 698 705 510 517 750 762] def/OtherBlues [278 282 392 396 -222 -216] def/FamilyBlues [-12 -0 698 710 510 522 750 762] def/FamilyOtherBlues [276 282 388 396 -222 -210] def/StdHW [68] def/StdVW [84] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings43 dict dup begin/space <1C60D8A8C9B87A8F8B> |-/Euro <1C60D8A8C9B75BE56A18BA282F3DFA18C7682044CD52CD11576435B5460FF86EBEF20AC5761B0380FA6EDBB5B84B3A6E1B81FAB307FD50588C114BF4383662E3EBB642842B53AD98CD6745EAA0F03D5BDC3B59ABE6552FB4B73EFCC6CBD3AE013D657FA5FF008BD9794654779DE12D588D5E4BF6158DD8B47979E637278A87EB53A640A7B1289E514C7BA43C346F14292743> |-/oacute <1C60D8A8C9B759460743FF84DCB5F6D1F7F7142D4B6D9AA09191E548CACA9CF291C35E77446227BD34061F322FE5AA16D058F55EB3E23B10A1A359817F437E22CEE145BF1D122D6C28DBD5DAD01CF849A6E8E04B05D55FA3D24BCE9524E0A66BEFBD10C8C8C67D> |-/parenleft <1C60D8A8C9B854D0FA82148D606BB860C4F57E5ACB97DC08CAE92AD9DE8E08466D519793C92A4265D9E049490DBFB81A4DFF9025ED79C4639C50EB4765AF1DFDC403E02B580A596135EE85EA5DF0E144158615> |-/parenright <1C60D8A8C9B854D0FA82148D51879D243BD3567F878A4DF44210D27D6404540A7AF77865F025049C1B7E81CE83A6C9B62336D3E4FF585EC02EFBCE0B70CAB0D292> |-/asterisk <1C60D8A8C9B7A73DB70BE436CC3207686AF2B0AB461E73377CE808A11FE4A62F69DD4863D4CAD770C0C4F7F8196F9DE60573D16CBE3A483A89D3F4412FBFA074FEB04A6522C6FEADD714816A00> |-/comma <1C60D8A8C9B87A8F7ED762B833AF48AC0347F0F7EF085C2ACE0D1C709317D7> |-/hyphen <1C60D8A8C9B8425761E36286FBF3A2DD0967C1B59C71BA4CE9EB73CA8541> |-/period <1C60D8A8C9B87A8F0E7BDC166D2A2EE7F00903802B90A2697FED> |-/slash <1C60D8A8C9B869C10C79702113A5392D3818523A163DB9007B53AAF691B17E72> |-/zero <1C60D8A8C9B75BE56A12E51413C678014FCC62EE8BA829F0B82DD58CAC38D88F43FB755C3AA6D8FF0E8D45A35DE0047512EC3219B690515FA60A1EE94F209886A881250543966C57E9B79C3AA5810528FF0C3DD2C643FBA5> |-/one <1C60D8A8C9B75BE54E5BDF8324D09D08A7D7F31B8D1206D200669E85F5B88C9DD90C8C5507D3775F3EE6> |-/two <1C60D8A8C9B75BE5656E11B05678FE58CC2BAC0B7EF40979E9EFA19509472921CB88F29CAA704B66B95BF712D65A0D4073E0117CD258CC87321CC7011D513AC84D7F028E53F4F9FDD796BB21EF098DD646> |-/five <1C60D8A8C9B75BE56A12E515EADEBF1FE768774852177AF98B89B7C212FBEC388EBD0E6B2AD211A9C097D08A85C78E356843AC435AD533C38AC9B526D1429B3605A72296F6EAD80B4467C0950606DE4693A96C56C652357FC724A988F4EA43BA> |-/six <1C60D8A8C9B75BE56A12E515EADEBF1FEC1084AE9F02608305D36586EC0FE357535DCA2553CE2BA7510F89E5EE50E22D52A7119D95FB764EB084C622854B1072B98DF59CCAA65167A73247250D694430616DD3E7F7ADEF5AF168DC4CA308004082255013C81D65E3E1BFFFA4AE39769C6F23135864DB6748E7017C65701815787568B68A10DCBE63A91B1D08EC25CDF197D551CFDF06A13834362B02AA98C911F4> |-/seven <1C60D8A8C9B75BE54E5BDF8368ABCB122B253C289165871DEFD30724EE4323AC300C71B5FEFB17E5B7> |-/eight <1C60D8A8C9B75BE56A12E51413C6780F157F23E5EE58FACEC38723D3FE866473303CB2F456202AA94EF5F5040DC8E557ACAF442426BEDDEEF105136D6E3CE202DD21A09D04007E07EC580E719B9DED62FACE6A558690F7AAEF62EDD37143E513D3A59985676B32D70592E67B412AA912FD188D5A9F6644ECFECF0EFD31C705B17B24DB404EFA9DB4DB58213E71CC4C3E4DF2700594874BCFD823DE67C7BFADC16319C34F191BFC83CC3FE797F332313DBA6BB378C15FD3316D0EC279> |-/nine <1C60D8A8C9B75BE56A12E51A60180980CAE2D7B0985F3B56A5C767E226FB10FC8FBF2FC55A50938562436CC96D0EE70194C5F30A506E90F5BC5F05E684117F0A559999F0264694EFD4615299CEBE0CE066787D1C64C18F5C5D380F559CFF3C74670443BB9B54BAB217A67460A3A89EFC66FDC96B1E80C05E46C96BCD1494607E59D15C10F930E49BE6FD13EC54A9F79E5D628060171D3C3DE0BDF787F9B9B9C4> |-/colon <1C60D8A8C9B87A8F0E7BDC16466D5ADDE9B7786E43D133D9104FEB1DB2EF89CA462B4C404AC3923D20BEF46A> |-/at <1C60D8A8C9B6D5A0202D70D0ECF120267014233D9284780B3A608B19511E2C3C59AC5A5E8F5FEEF23F432CBE27440B542CD379365365DC9C309BB6D3E804A470D28F04344EAF2CD0690AA64EF56DB3164925D04BD6CA9435170EFA9F6F09D690E0AC7063986D2F22E9CD224B6C394C129EB7F96D278B796D50804BC620A41F97674584B353CBDEEF0CD42D339E9CB68B749E9BA4A00C0EB45B01D8DC7392F4CD2DCC9FADE7E7858625A266FF35160D108E2E5151D2E58709DCB14438F4CED2559186CB720A2F5AFF0F198E5A0CBCC4> |-/B <1C60D8A8C9B7B4A143B6A8B2701EAEAEB910CE50EC816D25C896A215B56FA59343A680C1580D775E1296A8E8735AB970053E87CED99487031EE7DD7CCB451D66950107A9B498A0B24BBA617F392192B02A3DAF422DC5019E57C18922A9D547E004BB00C3F900A4E6655102549E4DDA6036710E6C0C61D46CCA2E976BC68C85619023542A31EFFCD05304CB> |-/I <1C60D8A8C9B878E8B4ED0097223001F2264002D8B6492F0FCDF50CC7BF> |-/L <1C60D8A8C9B704CCC7DE5E4CA04AE5118D9E84B22EBA5F5E2B46C617905123B69781D9> |-/O <1C60D8A8C9B7D7E8A050B64C6E8A8930E9CBC90C728257410A3DCFB046E4D41D0E8F03637B58FEB57D6CD876FA59374C583B69A2489BFB74B7A72BD7C7BC531131F680A35BF5FF632A5AE10AFCD9B015D0FE88845E088C9B35FF59> |-/P <1C60D8A8C9B75A17982D11D3BD0EF4EDEB5EE1FA9D0370AF12525755EBE6A304ED0BC14286A8F891E8BF3ED87870F78117300AECEAE9CBBA9C7E1FBEBA422F2D5AF97C8BD76A17CD073E92C9D289BF> |-/a <1C60D8A8C9B74CDDEA5D3A1A2896F7BFE1F6945AEED9F725BD5DF815E5C6B6433DF6D2661765551755A2060D754AE411ADC4F005490620DD93B30CCEE7AECC1B23A4A2E8EFB34176A061A7E838D65A81862AED2E9E32A154D4C119C3E9E9161B543792565D7271455E6FD7262129BD7418D482C3CFCF5D509A090CCD80D8DE78E635BE362165B95840D0C37AEFBC1A318E69D2FF734F76473FA73A6D8A7AD597121066D45CE0ACB2DE5E11EC413615F39975E0E882132EDCA3C9D4F9EA37A2773E> |-/b <1C60D8A8C9B75A17BCAC2E522F6F086CB7386AC5B31522473DE3C10F4BE16B804E62A04703C02400655A4726015B1634EFD40D07264D3A05BA3EEDB2400B3EAA3D6C755BF0E098C776AC79234C318C981DC9F95FD36A4369FE28AD9B3FBD0F05E490DBEB2C530A3CBA0D177397AF49A74198E42EAA720203AF4C22DDE9FE94368E5BE87E508DFCAD69D37839EA79088B2D6F6C08DF> |-/c <1C60D8A8C9B7361F71E0E920743429FCAD2E4019F6427E114DA20F78B801D9A3BCB4B54820926701C0AADFC71FBF5C1D3930573592299E88475E19B444E776C99FA22221FE730523A069DD5AD0754E190792BA089CCE027A79286D2702E6CE> |-/d <1C60D8A8C9B75A17BCAC2E522F6F086CB7386AAA790B95A92112EC3736018BF085E464C020C5D143AF67559B318AFF21F63B4106053EBD074B034251E81591A72449B4D11B17F1876DC76908EC25FE00B5D647D01EE7A2B0ED6A6E6B6B2F4A0885BC39302EEE174E4FC98DA050DA8FE8EC9B477D15359CA58115E61F38003AAE7D> |-/e <1C60D8A8C9B77FE2BDA23BF9E0F79F9F0CD7A55E3C9FAC4562232A94D4C22A48B2962AB82B0E443B2A157FE4AAF7584C4B7C715E5B7A985A056C37597A493FF453556FF981338D2F173254F969F5B13D3A68D953725EAA4BE5AE689BA47AB3> |-/f <1C60D8A8C9B854D0A3953AFC282B7F9B0245F669B8764AB674A9627C8329723F86B688B056637D6C744678AB43D461E82378C2467613CE1F13C92B36E6503E0977759DEA3C098841CABB2E3732219E5271D2F8B0CF145C6407DB4B2C5FD817362A5E3A7C3DDFF410B992> |-/i <1C60D8A8C9B88C082599D5E95B5A5C1C06C2F40B4BE87E1A75F952FAAA5533143F32EC2FD18AF3E484F5DE19C9154E2CF195774A64C5AAF529E8FD1B> |-/j <1C60D8A8C9B88C087EC1107381F78A242538D8609D8AFFAB26578A8B0DEFDB54CBBF6BA56731865A49256E8E6F3ADDC53379E4B7BCA1C71EEBFBEAFCB9A3D040853ACBF352152A47B1C52218A48BAEB87A48D428BD1B117920> |-/l <1C60D8A8C9B88C082599D5E87882DEEA7BC8FB85F5656B2718AA473A2A> |-/m <1C60D8A8C9B6079F5D7DB662FB2D212A37A7402EE62B507C156D7FC20B5CED455E438CD5AF68AC1166B9F387EDBA4C3AD0156E55FCE9B0D1778652D8F7141F276D0DD707B910347A4A01E1015B0DB0253CBDA38171FE8FF79C2DD2934DA04EE526F927BFBFF08037AC79E580155194C7B18138B4E7A702FF8CD3814D02B1E21E1670> |-/n <1C60D8A8C9B759462356354CA3F88CAD7570A49423761F4FAEA4F73D019AF70C80A69A643FCC556BDE58EFE191214A1454C92CBFBA0E4D7260283F32F2AAAED095381C817C0ED55F9AF7F55B3A5A24886ADBE78764F9A4F9E1E695A8> |-/o <1C60D8A8C9B759460743FF84DCB5F68656F3E5189C1006A6F617B28461A59F2CFD6132237CC4160BD02BC0EF2B1E741F9E3B3DE9F4F635A01AA7EA4D196038929B2B1E00ED5848553CDD1E9D9676BBB403E87CBF> |-/p <1C60D8A8C9B75A17C35F273C3F159B7206AF6DA5EC639A061702E861F1480B623B9806E566495680B3008775E0B5D9D6E662C5B07D382811425EE7E6C511D5DB20D5FE2F399DD7948B154A386D5982880F7C561A57C72AB7C69656874ADA3E090F4A59669990B247B41FF390230D8514F3912C8B8688E50892EC10E8F8F49DE581> |-/r <1C60D8A8C9B8425736C8FDF012BC19D226EBCD11D010ADE749A1CAC205F1F21068EACABA50AFB553603D5D08D8990C550967A75FD8C38A429DE374532C37D2C8193F801AB602907E04FB015BD1127A6A6F3A9D42C0A3A2> |-/s <1C60D8A8C9B7299AC8BA751F40913218343C74525B3E1A20FC3DEC1C5A24DE924806A3C9F828FB7D01EE892AD44938A33C93C369B6269400844D1F5C98DAE757765EB449F6DA75CCAFDCC8801F0889B90E8F820F58A7FC82694D3EA8E1D20D54E19D3E0F3DA9E9F81E01B06B6DFCB771FDD4010F27A915877A436F7257D36ADBC7690B635A6A35A3E3A9DFBE34D2F4F541> |-/u <1C60D8A8C9B75946075F93B1C023512DCE5DBF162706C194BEC0B168A0148D0D5CC3A31E75C4A74768A480CB456BBDD0C8D3C75E311425B673F1DAF4FA76EDDC7CCEAD5FBAA35D97282CBE9BBC22139A668CAE3960C598178A0BA4F6A8F99E> |-/y <1C60D8A8C9B704CCB775788DD7C1C1E6CB09FAED9DC76EF8B528812CEA46F082523516516EAFEAB4482D213ABEECAB0072E24941A9A1D4089A6AAC8F4A429F3F890129284FC668A90A69A55E49213679D093A907A9C1D60DE604B1AF7A6E5215C4E76DFBC9BBE21D1EE0F230D310D71A0F03A46A6C1EF8D5A14920> |-/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364CBBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917B17192> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/DKGIWU+FrutigerLTStd-Cn /GCAAAA+FrutigerLTStd-Cn findfont ct_VMDictPut/DKGIWU+FrutigerLTStd-Cn*1 [32{/.notdef}rp /space /Euro /oacute 5{/.notdef}rp /parenleft /parenright /asterisk /.notdef /comma /hyphen /period /slash /zero /one /two 2{/.notdef}rp /five /six /seven /eight /nine /colon 5{/.notdef}rp /at /.notdef /B 6{/.notdef}rp /I 2{/.notdef}rp /L 2{/.notdef}rp /O /P 16{/.notdef}rp /a /b /c /d /e /f 2{/.notdef}rp /i /j /.notdef /l /m /n /o /p /.notdef /r /s /.notdef /u 3{/.notdef}rp /y 134{/.notdef}rp]DKGIWU+FrutigerLTStd-Cn nfDKGIWU+FrutigerLTStd-Cn*1 [15.15 0 0 -15.15 0 0 ]msf169.85 769.099 mo( 15/11/17 - 09/01/18)[3.63608 7.27194 7.27193 3.9239 7.27193 7.27193 3.9239 7.27193 7.27194 3.63608 4.48448 3.63609 7.27193 7.27193 3.92389 7.27194 7.27194 3.92389 7.27191 0 ]xshDKGIWT+FrutigerLTStd-BoldCn*1 [15.15 0 0 -15.15 0 0 ]msf77.0714 787.279 mo(Matr cula:)[12.3473 7.575 5.33288 5.33287 3.93892 6.45383 7.8628 3.93893 7.575 0 ]xshDKGIWU+FrutigerLTStd-Cn*1 [15.15 0 0 -15.15 0 0 ]msf141.368 787.279 mo( 20/11/17 - 11/01/18)[3.63608 7.27194 7.27193 3.9239 7.27193 7.27193 3.9239 7.27193 7.27194 3.63608 4.48448 3.63609 7.27193 7.27193 3.92389 7.27194 7.27194 3.92389 7.27193 0 ]xshDKGIWT+FrutigerLTStd-BoldCn*1 [15.15 0 0 -15.15 0 0 ]msf77.0714 805.459 mo(Cur)sh98.539 805.459 mo(so:)[6.16602 8.13559 0 ]xshDKGIWU+FrutigerLTStd-Cn*1 [15.15 0 0 -15.15 0 0 ]msf116.78 805.459 mo( 15/01/18 - 22/07/18)[3.63609 7.27193 7.27193 3.92389 7.27193 7.27194 3.92389 7.27194 7.27193 3.63609 4.48447 3.63609 7.27193 7.27194 3.92389 7.27194 7.27193 3.92389 7.27193 0 ]xshDKGIWT+FrutigerLTStd-BoldCn*1 [15.15 0 0 -15.15 0 0 ]msf77.0714 823.639 mo(Precio:!)[7.86281 5.18137 7.575 6.45383 3.93892 8.13559 3.37836 0 ]xshDKGIWU+FrutigerLTStd-Cn*1 [15.15 0 0 -15.15 0 0 ]msf123.536 823.639 mo(1600 )sh156.26 823.639 mo(!)shDKGIWU+FrutigerLTStd-Cn*1 [8.8324 0 0 -8.8324 0 0 ]msf163.531 822.594 mo( )shDKGIWU+FrutigerLTStd-Cn*1 [10.494 0 0 -10.494 0 0 ]msf164.945 819.645 mo(*)shDKGIWT+FrutigerLTStd-BoldCn*1 [13.7014 0 0 -13.7014 0 0 ]msf328.378 768.012 mo(Orientado!a!profesionales!y!titulados!en!)[8.87845 4.82294 3.56232 6.85068 7.11099 4.82297 6.85071 7.35767 7.3577 3.56229 6.85071 3.56229 7.35767 4.68597 7.35767 4.56247 6.85071 5.57645 3.56229 7.35767 7.11099 6.85071 3.56229 6.85068 5.57648 3.56226 6.34375 3.56226 4.82297 3.56229 4.82297 7.11099 3.56232 6.85065 7.35773 7.35767 5.57642 3.56232 6.85071 7.11096 0 ]xsh328.378 784.454 mo(Ing)sh346.656 784.454 mo(enier)sh375.854 784.454 mo( as)sh391.336 784.454 mo(,!Matem"ticas,!F sica!y!ciclos!)[3.05533 3.56232 11.1667 6.85071 4.82297 6.85071 10.6597 6.85071 4.82294 3.56232 5.83673 6.85068 5.06949 3.05536 3.56229 6.34372 3.56226 5.57648 3.56226 5.83673 6.85071 3.56226 6.34375 3.56226 5.83679 3.56226 5.83673 3.56232 7.35767 5.57642 0 ]xsh328.378 800.896 mo(de!grado!superior,!a!estudiantes!de!m"ster,!)[7.3577 6.85068 3.56229 7.3577 4.68594 6.85071 7.3577 7.35767 3.56229 5.57645 7.11099 7.35767 6.85071 4.82297 3.56229 7.3577 3.45282 3.05533 3.56229 6.85071 3.56229 6.85071 5.57642 4.823 7.11096 7.3577 3.56229 6.85071 7.11096 4.823 6.85068 5.57645 3.56226 7.35773 6.85071 3.56226 10.6597 6.85071 5.57642 4.82294 6.85071 3.45282 3.05536 0 ]xsh328.378 817.337 mo(y!est)sh355.534 817.337 mo(udiantes!de!#ltimo!a$o!de!grado)[7.11099 7.3577 3.56229 6.85068 7.11099 4.82297 6.85071 5.57642 3.56232 7.35767 6.85071 3.56229 7.11099 3.56229 4.82297 3.56229 10.6597 7.35767 3.56232 6.85068 7.11099 7.35767 3.56232 7.35767 6.85071 3.56229 7.3577 4.68597 6.85065 7.35773 0 ]xshDKGIWT+FrutigerLTStd-BoldCn*1 [13.3639 0 0 -13.3639 0 0 ]msf590.173 914.752 mo(Contacto:)[7.4303 7.17645 6.93585 4.70416 6.68195 5.69293 4.70416 7.17645 0 ]xshDKGIWU+FrutigerLTStd-Cn*1 [12 0 0 -12 0 0 ]msf590.173 929.752 mo(Luis de la Ossa \(luis)sh679.007 929.752 mo(.delaossa@uclm.es\))sh590.173 944.752 mo(Pablo Bermejo \(pablo.bermejo@uclm.es\))[5.11206 5.55597 5.77203 2.664 5.78394 2.88007 6.22797 5.328 3.55206 8.66394 5.328 2.66406 5.78394 2.88 3.33606 5.77197 5.55603 5.77197 2.66406 5.33752 2.88007 5.77203 5.328 3.55206 8.664 5.328 2.664 5.78394 9.60004 5.78394 4.66809 2.664 8.664 2.88007 5.328 4.43994 0 ]xshDKGIWU+FrutigerLTStd-Cn*1 [13.3639 0 0 -13.3639 0 0 ]msf590.173 970.971 mo(Informaci"n, inscripci"n y becas:)[3.23413 6.44135 3.71515 6.44135 3.95575 9.64874 6.18744 5.19867 2.9668 6.44135 6.44128 2.71295 3.2074 2.9668 6.44135 4.94458 5.19867 3.95575 2.9668 6.4281 5.19861 2.9668 6.44135 6.44135 3.2074 5.43909 3.2074 6.4281 5.93353 5.19867 6.18744 4.94458 0 ]xshDKGIWT+FrutigerLTStd-BoldCn*1 [17 0 0 -17 0 0 ]msf590.173 990.971 mo(www)sh626.774 990.971 mo(.ecd)sh656.065 990.971 mo(da-1.posgrado.uclm.es)[9.12903 8.5 5.35504 8.84009 4.41992 9.12903 9.12903 6.91901 9.12903 5.81238 8.5 9.12903 8.50006 4.41992 8.82294 7.24194 4.41986 13.226 4.41992 8.5 0 ]xshDKGIWT+FrutigerLTStd-BoldCn*1 [13.3639 0 0 -13.3639 0 0 ]msf77.7491 914.752 mo(Colaboran:)[7.43033 7.17645 3.47454 6.68195 7.17645 7.17645 4.56918 6.68195 6.93582 0 ]xsh511.54 982.382 mo
511.54 983.608 512.034 984.37 513.077 984.37 cv
513.384 984.37 513.733 984.297 514.079 984.175 cv
514.306 984.095 li
515.265 977.968 li
514.829 977.935 li
514.763 977.929 514.692 977.928 514.597 977.928 cv
512.675 977.928 511.54 979.74 511.54 982.382 cv
508.267 982.711 mo
508.267 978.843 510.653 976.052 513.817 976.052 cv
514.595 976.052 515.397 976.204 516.282 976.532 cv
516.388 976.572 li
518.749 976.104 li
517.116 986.473 li
514.015 986.473 li
514.188 985.425 li
513.45 985.848 li
512.349 986.48 511.856 986.638 511.228 986.638 cv
509.374 986.638 508.267 985.282 508.267 982.711 cv
492.267 974.108 mo
495.692 972.984 li
495.145 976.353 li
497.776 976.353 li
497.511 978.045 li
494.881 978.045 li
494.143 982.786 li
494.101 983.001 494.079 983.238 494.079 983.389 cv
494.079 984.183 494.567 984.555 495.409 984.555 cv
495.743 984.555 496.138 984.516 496.497 984.448 cv
496.237 986.013 li
494.997 986.471 494.243 986.638 493.479 986.638 cv
491.513 986.638 490.702 985.928 490.702 984.437 cv
490.702 984.137 490.742 983.633 490.823 983.194 cv
491.632 978.045 li
490.543 978.045 li
490.809 976.353 li
491.896 976.353 li
cp
502.456 986.638 mo
499.38 986.638 497.808 985.207 497.808 982.505 cv
497.808 978.607 500.331 976.03 504.161 976.03 cv
506.431 976.03 507.534 976.917 507.534 978.499 cv
507.534 980.802 505.681 982.098 501.86 982.098 cv
501.085 982.098 li
501.067 982.482 li
501.063 982.711 li
501.063 984.162 501.817 984.78 503.442 984.78 cv
504.341 984.78 504.798 984.745 506.196 984.499 cv
505.954 986.008 li
504.478 986.486 503.61 986.638 502.456 986.638 cv
484.085 986.638 mo
481.011 986.638 479.438 985.207 479.438 982.505 cv
479.438 978.607 481.961 976.03 485.79 976.03 cv
488.061 976.03 489.163 976.917 489.163 978.499 cv
489.163 980.802 487.309 982.098 483.489 982.098 cv
482.715 982.098 li
482.696 982.482 li
482.691 982.711 li
482.691 984.162 483.447 984.78 485.071 984.78 cv
485.97 984.78 486.427 984.745 487.826 984.499 cv
487.583 986.008 li
486.107 986.486 485.24 986.638 484.085 986.638 cv
485.133 977.476 mo
483.95 977.476 483.249 978.474 482.958 980.182 cv
482.876 980.664 li
483.366 980.652 li
485.232 980.602 486.238 979.951 486.238 978.52 cv
486.238 977.863 485.808 977.476 485.133 977.476 cv
467.994 982.792 mo
467.994 978.886 470.419 976.071 473.667 976.071 cv
474.369 976.071 474.997 976.187 476.151 976.542 cv
476.241 976.57 li
478.643 976.194 li
476.919 987.115 li
476.466 989.954 474.967 991.115 471.551 991.115 cv
471.06 991.115 469.977 990.947 468.998 990.776 cv
468.565 990.699 468.067 990.604 467.647 990.522 cv
469.719 989.057 li
470.061 989.084 470.387 989.094 470.75 989.094 cv
472.798 989.094 473.439 988.548 473.764 986.58 cv
473.919 985.487 li
473.224 985.85 li
471.936 986.521 471.442 986.699 470.894 986.699 cv
469.123 986.699 467.994 985.305 467.994 982.792 cv
471.268 982.423 mo
471.268 983.654 471.806 984.432 472.845 984.432 cv
473.155 984.432 473.527 984.358 473.913 984.216 cv
474.135 984.134 li
475.115 977.971 li
474.662 977.951 li
474.599 977.949 474.535 977.949 474.427 977.949 cv
472.447 977.949 471.268 979.776 471.268 982.423 cv
503.503 977.476 mo
502.321 977.476 501.62 978.474 501.329 980.182 cv
501.245 980.664 li
501.737 980.652 li
503.603 980.602 504.608 979.951 504.608 978.52 cv
504.608 977.863 504.179 977.476 503.503 977.476 cv
460.822 977.205 mo
461.522 976.866 li
462.89 976.205 463.474 976.03 464.165 976.03 cv
465.855 976.03 466.778 976.918 466.778 978.458 cv
466.778 978.962 466.738 979.466 466.658 980.009 cv
465.637 986.473 li
462.387 986.473 li
463.399 979.986 li
463.442 979.751 463.464 979.534 463.464 979.341 cv
463.464 978.586 462.974 978.216 462.173 978.216 cv
461.77 978.216 461.421 978.272 460.95 978.433 cv
460.719 978.511 li
459.454 986.473 li
456.205 986.473 li
457.628 977.449 li
460.968 976.355 li
cp
529.622 979.319 mo
528.501 986.473 li
525.251 986.473 li
526.284 979.983 li
526.304 979.753 526.325 979.551 526.325 979.341 cv
526.325 978.586 525.837 978.216 525.036 978.216 cv
524.634 978.216 524.284 978.272 523.813 978.433 cv
523.583 978.511 li
522.317 986.473 li
519.069 986.473 li
520.493 977.445 li
523.823 976.35 li
523.685 977.206 li
524.388 976.865 li
525.811 976.175 526.319 976.03 527.132 976.03 cv
528.304 976.03 528.862 976.262 529.304 976.833 cv
529.495 977.08 li
529.782 976.955 li
531.288 976.301 532.378 975.989 533.108 975.989 cv
534.905 975.989 535.825 976.861 535.825 978.439 cv
535.825 978.941 535.784 979.444 535.704 979.968 cv
534.663 986.473 li
531.415 986.473 li
532.444 979.986 li
532.489 979.751 532.511 979.514 532.511 979.341 cv
532.511 978.592 532.026 978.195 531.22 978.195 cv
530.813 978.195 530.448 978.271 529.952 978.445 cv
529.683 978.54 li
529.683 978.837 li
cp
454.116 986.473 mo
450.786 986.473 li
452.742 974.144 li
456.257 972.985 li
cp
.23 1 .69 .19 cmyk
f
170.988 956.863 mo
224.374 956.863 li
224.374 908.879 li
170.988 908.879 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 474.819 ]ct
[53.386 0 0 47.9838 170.988 -482.044 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 227 
/H 204 
/M[227 0 0 -204 0 204 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 227 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 227 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 227 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 227 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
N<&qYq#H!H]Dqp4lMpnchZ/6.huNcYjoGA^!!)is!X/`1c2`FrJcLB&q#LBpN<#pX!!2Bc!!2WjJcO$q
rrV<_rW3'"q?$X!i;eH0JcLB&JcLB&rW)`pN<$NirrU@DJcLB&JcLB&JcOp5qZ3GlV#^AorrhHaJcLB&
JcLB&JcOO*rW2iqr;j>,lN!j`rW<$%!XAl4q?-p'!s\u5rWN6&rW)s"qZ)3JJcLB&eGoRMr;ciur;Zm#
!Wi&r!!1(>JcP*:rrMcmrrMoq!Wi?&ZN-6jrW<$%$O6qC"U>89#6tA6!s]&;#mUV:!Wr?$rrW3'OT9t5
JcNmm!s&B%!r`3)"Te]*"Tnf)!!!&t!!<6%!Wr<&#6>#3!rr?%!oX-2!8.>R!WW8o!!!&t!!*0&_#T&e
-isGP!WiN1"U5;="pP>;!<<0&"p=u/!!36(!WrT0!X/c9#m^\?#6q4/JcLB&[K$F2!rr?'r<!$$mf3[r
#6b)1#6Fl*!<MfmJcO0u"p"c*!<<0&kPtVa"TAB$!S@C(!:^'f!XA]+!WW6&!<N0$mf<=f#64l3"pG;>
#/1(h!.k3L!<3)u!!!)u!#Z7[-9k=4D1IhGWiE,"Vk]K#@T,KE)[-3A"TSN1!!*3"!K@)n!!33&!W<!6
#n7n-5YP<pI#sY[R$<_jIUGo90HUf&!!<E*!<W0"nGn.@h>dT[#6Fc'!!3#u$j6k?'d>([4\SdO;cWfu
#>[N<,o.%'!rW*$#lk)3quP@KJcP$8%fuk=&g8eT/28t;1F*P<"0)@e!36,!!W)j=$PP=,GD_ojZ+%6W
ak,(ke(!4.bK.8nSV^Mo&dn[>!<<4T!5JRW!<<*,&0aqWEJ0XJUSXru`PfX._TBj+ZD3P6C-i[G$N:#+
!s.WdJcOa0!WrZ0qZ%$.$m7N"6VLEV;H$Rqr_s>/>[V&OA7&>8=Z?ru"o\K&!s6aJJcP9?!t6"_,5s,)
0/GIH3BBAq='SU#756;G$EF/o!!**'rW!K;2eA;gbM:OhbIXs^['I$O(rj\<`ld,la1]=BkNM^1fti_V
*<uQE!<JYiXoKaT.o1\p\]MUr[\fL^T:_dV[CEWO\BN($W2mkdeE>Z/Xa*MU#Q=])!<<+O!7h,M!Vuct
!seu-!$`ON<Gcb_:/=bZ5sIUu5X7=j4[MP4;GL%e>?bB@Ao)<^4:qDj!!;6^JcOd1+V?>9G#KqB0H_,E
'b_;t&J>fs*&KT&.PF:i<bQSp@OVc(!07*g!s&H,!!*-(!<N<&!"90,EMhRQg?./0^q[;UX!"RS_Tg6?
`n&kq^VeR`jRMO'mc;]SB.X)`"9\f-!s&G0!2TYt!<E6&r;[`>4C=8mcG\,NYcFaqQ'@N!S#*@#[]QjR
`PN(`XM3*-hU^E4bHl.^*;0C1!MBG>!!*6+q#E;S#R1M;!!!**#n%(?!!O)a7T`_m=\:tK8P;QF8OuBG
9MS>Y:fUS%<)m.!<**1/A7oXK0b=6`#mCM:#R:G5!WW5t!<3+X!7:cm";sTs4\R=B)^$=E*Zc=C,UFrj
.4dSI82)kh3'^85?>F7`*XLBuJcPTH*s;ZI"TeZ("t3H9_T(-Ma3N6%dDj>L]=thRU8Q)O[f3`TZaS*%
\&6hQlhfesh!Oh4s3llj$ig88#QOl+aT.G'%KZ\3"Wg!ZYI)6[Z+.O#/%r6qYbe:nOcG[9Z(dtfU7S*h
\>-7Ea4BP&_8FaViodpj.g5nQ"p=o,!NlF9!<3,q!&"BT#RV"N"98E-&gBtO9hRoC8lf:g5"A1=;GfqQ
7T)lJ7nH3@93,(f;+jY]<`]i9?=RY]Dg>8&$31&5#lju,p](9qSH-M,/-@%W-n68W,Wf9T'd"SF/LqbX
)DNKV*?Z@C+uhP./L`A::.RcJATrBVM(.imJcP!74ok]f!sA]/!"WS+`8B%eaj/5fo%h3r^:q(fYFqP`
`QPTm['HsC][""(e(<=JnE8iqn`0NHs3,d<!!!-(g&Qd+rrN&u3!0-h:kPmo`4<@i\]<LDXf&.rTr"-5
MiY6TSt)FDS=Z[kUT_AJ`TGq%bgG.cjmMZE?60(H!<U"9lN"^#rrW#s1]dXW!soDK%Kuh43Dj!a:Im`:
7o!;r69.A$7SZQB5snIB6UX=/7S-?S92A/O9N5%p>$__K?t=G,EE*bS!!**#!!35u!!!(h!65'n$n4A5
0Hq>Q+Y[%s(_7H&*@DpE'c/GK(`=2-)]pFd,:Y#f.nWE)935_,F1S>h-1(\a!:9bP!<<3)!!EN,!$QdJ
p$gngg<e?ug#TrZ]"PGU_60B0XLH0SXK\t:YHQ0a_pQu[jm;F%mJZ)1nGheRS4j:j#m:)+h#N31!<rZ*
!'(#Z'Pu.`kKq/i_8a7.bbCl/W19H\R>@,qV6QVYS"61@R^oH%]YM))f\>!/lH@`;pr`/Y49bch]E"r3
quS&F"p+c+#S@gW!"UYT;,0PE5;k_q;-[6e2Ea;k9LM'577\Fl5sIS!6q'I@92%`D7o</`<EEC,>@2B>
HsJ0)!<*'!"p+o/!iZ1-!&=d583eL>)\<o31J]tC%20Hl,oI=6)BU4?',20!)Ab.R,p"9S4$c>*8m+Y_
A<?Mn3rfD9!8.?A!s/N/!!#Znli6/3p@-V^ai;Nf`OWI_XgPF3U8O`SUTU`$_8Nt(`Q>^*cd(%ef@o*<
i8jS0rVHBjs5\kN!!!*'!<</j!.k4C!'^Mh!sAT(2j2h`f%B?OaMbTp[aVCPU7I[CS!8noNermdR[^F`
Vm*G6V5h/<^:_>&bKJ,Vjn&$2l1aMgBbJ_lQN.'g"U+f.%L3.;!=&T-/6lOY1cn,h$oB[i2Ejr9;a)ok
4?WR&,W.YI3BK`'7S6<J7nGm/6U4.48P)NH:JFei@;pI8;%!@,$46\:!<iV>!2TZ0"?]sQ&fNDH&.JmS
'fn!#'+#!X&cE1G$P3s]&0<&9,:"!O*?c17*>p+M.Olr$5<V\AC6-)m-C=eV!'L>_!!**'!!iQ-9Wn9a
s6ekGs3As2`74"e\[ArXYcFFcS=#\;WiW;<\urZZ\Z`ZkaOAJhgY1B?m.gVTrr36#s8R?Y!!!-'!<`FW
!9!oC!<WT-"$2\5i:Z!Tq>A"@[B[QtWhQ,\Um[R/Knb;:O-Z3%YGR_cWhc,_\[9,_`lQ0>cIqOWmJ-AJ
lf%AB&*!YC!!*-)!X8f3rWXGE#QOiV?XZi21c\iA0eb185u10M4ZPS`3AE6D1GUui3X\>E5"8%05tF4'
5sP<:'h1bc9M&>mASH75:(.+*#R1P>"U+tT!0[Bo"[Qrl3><6'57@o*$61uM-j1+m&If6L#m(G?%fQtX
)]TM2*Z,Y7(DIf*+sS9U-SID<3)X7,J'b>@X8oa12$4!_!<`B&#[c$[qX=I]k32jFccX2@eGmk=_mmq%
W1]HAQB[]/T;BH5TW"igUUn=_a3N?CgY:ZGlMLPZqu7*&s.MCP!!E<(!rrE(SH.(<:BCLr"TSN,9u6\s
iUuTeea`(<[]c^Hn@H'0Tspe]NIue7JqK)AP-L[<PE_8kUogr.\])Y2bg+i,n+$)Dp@e1Rg[g:S!!!*$
!<N6&!J1=@!%e6U$4@">!<N6)3aH#[4%_q)79NGO3]Jr\;+4/H5Y==#0e4k./i>F@2G$4nr]:rW83/jq
5=7\$5sdt07Rp3P>[_;eI<&pFrW!''!sJ`-jT'l4)%9,;/KH8h*%"6@(D72d)*f8i)AFD3$OI%:#6kPC
$4J'o%/peT%j)>r',M]0*$67L0.JP57TF#CQ._Nu!Q"j&!4i.h!X8W2!"NT"s8;Kas7P[EkN(14_na1H
h9<.%]tpA4P)tccOdqo6]sac=Z*:=<_Sa:7g=P!1"Pi;=q>L*g#d6>j!sA]2!<SYhe,W2H!!rW2;UPC5
m-si5f@\Kq]rnN=Y0+kuRujMIMi*"3Isc["LPr.*OI)K,Q_LUbY-uBh`5TgLm-F34nF?5FmdK`7ShL-G
"9J]+!W<"M!:p1f!X/`4"98K'%Qn?65q=Za6:=RF9LV$%2)dij76ELs7PZYG.P*201GC^U6T[M#6U=.%
4$,Vn6:!t,77Td9:/4ej@V0:qH"SB&!!<?/!s@N_L&_;dC0DoH%MC*9-9!n;*t\qj%3Qo;&IfX!#m^\=
"pYMC#Rh[i&/,ou'cR\r&JZB.*$-4N1+Y"84@`=`FF0gt;$"H4VuS+H!<WH-IH:FulJq3tpYk#hhVR2<
_S*[t[C``8^T!QaMhd%ALDuDHQBn5CV4=9sZFIWcajnqice7FFp@nI]q>U<l$NC(A49,Nc!sA],XoQ<=
+9;TK#&)BYk2=nQj6k@Bcc=)N]<A66WhQJ_Ju=]^K6[?9)LmNnJrGnTL5i=+UT(B'_83jr`6m2tjQl3u
%.<l^oCi(\nZjqN"T\N'!!/8`i;cgY"U,25!WW9j?YW:s/gMr&3'okl4$#5P/i#7>3^Pht4=r$-,Ub3!
/2K%83']_g4\nO(3''2k779X<9MA&P8P)NNA8Q4$B4#=c+92HF"U5,2pAfdFoDf7:>&c\F%1*FV'd+Or
(,cX.#RUtJ&/Pfu&I/LB!sAc6#7:eE%29Kd&Le\.%hKHu+<MaT1,CgK2`Nf`@$$=pFDJNn!S%1;!<*!3
"To#1<T!ZFki(I`io8bNhr<WJhUTHR]>;MFa/-D?Q]d,UJq8T8P*D2pR$s>+\\GM`^W=mMd*q(HnFcGH
qu6Qirs#PA!!W]3#/C5B!"K&9!(G<%jk/#0hq$B*dJhB/bJLE[Vm!MSY_o32Jq%o]Df0Q?I=H`pJqS\!
I\`s8VQ.#<]=bf$iSEDLj6c@)oD/(RrVuogSJ2&+"Teb%!6tR;!sSr:!!E9]BhqAg3%lg8/i,RH0f(U=
-R^W,4\/C98i/+J+X&-]/h8S01,:aL3&aW.1,h3V7RKX=:Jana:J=>O94qp?Ch@!]#Ae&c!!ru:#`8WA
!(I<85rg/)%1<RQ&/Yuh&.]-P"UGPP.Ou8X$3p_9!WrT2"pbMB#n.=R$n3S3%1a-s*?Zaf5X@Lq3&iiX
I;)r4BO#;a;s449!;upB!!!Ofg#;u"n,Mq5jPAkSkN:XRdDET'eC)I[XI5B9LOjjPIM7HkN/s$aNg5d&
`3m"``7*0$oCDk['(khiq>^Kfp%n@]qZ#A[!!!$&df?'A!!<&u(^kT4dduGTp>O3Fce$_#e]PkFY,S&/
^pYu(P^n=2F)G]-C2@j0G'\F`G^k'uXIl/\Z+dm&i8=1unaGJsk3Ma7lKIm4rqZE99E"nk!Or-B!'()_
#6k50!`X&:3]&p$69@._0I[tY)'0hD.4dt\7nuK1/h8=s-7^f*0J"k30/5(>2FLP(2)dZh)G!Y'<aB<K
>Ye-f86]7q<Dc7i>&\[P!!EH3SH.":%4lfl'bq]T-5RI0%L<7;!t,/5"pZA!+=J-:#R:82.0^(b#R(G>
#RL_G$lCf1$k3mr,<AFj>\7MH5!Cna7ncKM7lFCZP`l[W!.k4A!*KC(!<`B9H2m!us6]1QqV'ohj5K+\
gt'iiZG>)(Za#sYO,8I6EGTH(G_^p-OHG]lNgRYfY-uI+eFVbOl0S*Cp%%_GrVu?Tp%eC^s8UJ4!!E9&
!<<*%lMutG$j6h9!<E0/B):6Ip"_OXlKQI=e^`1"dE0;=XdZ9-W1TcAI!g$SAR/87:fqLIDg?_YIs$4<
S"$4_a2$]\^XLclo]?)7%J'>UjQGXglM'_[2#mgX!!39'!n%)7!6Y?C"U+Q"49l&s!rrf[<D5e`5tkfc
4#/'#(FLmf.k<D45"ICR-m9]_1-.HZ6UaC/4Z"f@,9e`n4&nj51,hB\9iE$.;cR(<;G^(^<**!u<`rR3
Ci*i'!!*'("TeZ*T)d@@8d/<S.m,(5Ud>h.#6Y,7%LEFI$4@Oo#m1>5!X8r@%M09f',(rb#6b22#7(kr
*tAVg)&G=s0L/*0CIUZS4\8XE:Jt1n@!Je_q>c*Ip&Ieh"9SZ+Gk1msjRi?,hZ)coh;dPOgY:?,ah4jr
Z)+OrP_XU9Io\Z`.4IH,H$+CfIXd'/W3)Yh^XLKMkjmQdmf2n?l0@I3rp&h;pAFprZml%X!<<3%!pK]J
!"T8<#6=g4ht,INkjcp?o[?ITc-t.caiME5[AKFpRZNl!Km7?JB1+9o*$$M7?XIAcC1qO,OHt`dYeR`U
e)/0ag[a:Mf\>$QpYX]Xjn8<@pA1L*!!3-#!WW8H!4W%.!r2gG#RCM5!^pL!77'."3_*=C4"Vs3.5!A.
.k*//7lhq@+rqXH1-d?3*#fkM*C)Y9,:"?Y00<'-4>euY5=ndS;c?Y2;G9h\;-R%"<E)t4B4u@2D&rZ\
#Qb(4!5ed[(2?Sm+s7j@-VGs*$OI(D$P!OM"pkYY%g2t:!W`?/'F"C7)&!Ja!s8T-#7i=5&.8m](El%;
3&jBX6S^S03BUMH84c6EBkM@QWaChfirDm["TSNog&L<si8i\InGh/$g=kE:f@SNr`O`7lUnOTRP([t'
Hr;aL*Z@LiC2S';H$XajU9^Gi^WjsBq>]^?mf3=cp@[JAs8VQXnGiOerr31`$NLA4"p+T$JcPcM=p5$/
!&VRcf@83ubfJc6`6l]Kbf7W?_76bHRB;I-OG\U2AS,I<,odU50Nh7T?tO"^Ao3?lMNk9R[^##gd`gJ:
o'Pi/ddHi-i83;Zo^VSGm;r[8!<E?)huKSRrW;lq(CLNL!%i"r9L1m&1-%m,5rgJI0/>46/M&=u/i?6X
-6aTT*?Zq!/0#TC'IZ:)/gV\c.ka"c;aEE'4[MhCBi7f*C0jd::(gQAAlMZ*=']!ADL,gs!"&i4!Q>&D
!$VP^AMYJM(Cq377N<0M#n.:P$OI%A#R_d_"9S`-!<NK>"oSE+!YbqG!s/N.+UAW6/eed+'cJ>nBfn@?
HrNI!68hYpBM(TW:K^qCNkn#W!7:d7!<W<%D?'(ciT0+qs8W&WgXY0Qp?q+pc,m].[(MH_OcP0<Ch.3e
/K>62:24BTCi"!-GE8PuW5%9^n+#u=lfdHtpA=jipAY*krsJ>srr:7o!!NH)"-<NH!*E4egs=0jeEZW!
ma'"ncKF?EeASr,X.l2^H%1?pF_4fU<D=MJ#mrLc:/P%q>ZkHXMN3h"cf3a:hqlu8e(a$[qtU!^m*YRu
oCMDGjneK@\fUnR!WW;o!07-X!XAl4"pkD46"NMa6pWmn5$qVd5W:5K3Ccq4,pOKU/369O-m^,[*$?[i
3#rbF&NWKH3]/QG2*P#S<_H(V7SHWW:dmf@7RpZ]?Y3YZHt`Lk$tX$MCM.a.*<63D!!:gRT)]iDEC;#m
(_e*$:GEk&#n@q05Tp:6!WrW;*X2cM"p4o-!X/u@r;\;O((Lc\#71bM/5\/G,UtH*5"7^a-7(,r83^$a
?(p:lFDl)]APIDrWcY`N]`8?A!'AF#lKIfslMgecmb6LQr;S%oaMbWn[CM3OL51+n?s@2U.i&I%/kAc7
>$G-3>%rnZR'"Nc&C]4dkOA-2mH!d(lhKrGs7#sd$hjMurVqNT!sJ`-!Mf_H!)kDVjjhl;c._mboA7L1
bk1Z%p$fr/ZDO+_UNLX!G%t;\9MeP-%g3+Y2Ea8r9M%fH<H3A;R^pMS_TL?bjkS\?hVI&Wip?Esnb2YL
qWmeNnDaUe"Tea[!;c`u!X/`1rWOq[#ll,W<C8l42)\<:90PBn00`WDDGhf)*$-Rl9/8(I.3]lX-9=U:
'+>L$2`*8g0Inb36siDF5X.M"7RTU+5!qV%6U=.6:fq4)9O2(;?r9p>A8tKM!!39+!s7ljN;s:d:.liN
+;#>B9/%#%'bCcp7SS7q"Tnf."VDsc"p>,/!WiK6'`7t0#:9]]#72&()A!W"*#g%F,9A!T,TnH[.6Kms
C-jjN<*rNn<.]28.*M\W!65(-!<<3&!<W?&?Ms6[md8s!s684if\-<)iS)?8s45-%YGIntR=]s=F)#)l
=?@N9#7(YL)'1(N,pk$&EfQ9U^rt$MiZI[[p?qM?mdTi4ki;X3o(_hJp@n=Ts8VAX!<<9(!s51sh#Iia
!<>UQg>:W=bMDmCrPqM$pX.'ed."oXWLT'-SqLimD.6[D:-pEE$j-P6$PO<p)]BY:/R!@FNj#t(^!Pd!
l.k7ThVdJJg!]KNiT]Cbm-X0*q=`!d!<`B'!!!%T!<)t0!XAr;#6b>5!&8%W3B&iQ2,H%e3'&u`<\QU+
@9Ois*#^7d<Co>73AE!:3&iB+&.&gY&f)?()&=)..T/>^0/YOB2`<E>00MH\5!VG'85<2Y6UjL377g-L
@qhHD!<<0(#QsAmOT5jsFYXgN((h92&.oQi&KhiE%M^'k8HT%r!<irf*YAnm#mCPB#m0`!,6Au!#m^qJ
%1j0d$4n:$*Zu[U.5*SY2^pF3.5*YD7q@#A8]h%?!&4KT!WWE,!#)I6nbVJ9kP"r3hVm)Fs6S:_dJ`UQ
]XFi3R^8ZBI!fmB;+`u!(D$cS('tKe)&sY7)'V%YN/j[F_opB`oCh\Arp:6bnEoW+s7YpQo_\7Vq"4@\
rrl4!!s&K)[/eAM1'7UY$'Fc9lIFS8kO?a?cc+6*h8Hq;kM<8>U6UOeSqh,lBjFY&3%Z'\$N^;/$4d^^
rXoh\-WbG;OK,Ur]ZoX)i8*/Eh;8k'hqlrXl.k=[n*'?0kj%s2k<,"0lMtT""pkS>#Qk&2>ZsBM0fV-R
4=rHO3]^:t/2p(.9-"oj)^maQ<_#A>3A)a2-6Es6#RV%R'Gq])',)97;)TpX1+k@?2)-F.4?>J`4?c,'
934bS77Tj:7S6BQ??(BG!!!--"TeZ(JcP`L'K]JC'Ftup*#T+s().QE'+#0nD)D4n$ipJA4tmog'+G-K
"9J)o,QSqp"pbPA$k<j^$4Ipn)&jV?-SI5O4")X60eG7D5"AVS_$/ZqT`?,7!!WE*!&(h]jS/63insLm
iSWA@nGh=udJs79rU!/6b."RLB1P0E/hA=p)%m;_!<<3*#7(YG#RUt`B7,H&\%9/ogu7GblKdj)n*KH,
mdpJMmI93/o(;tVqYBRSGlRpK!<E0%b5f*R2ZWm]!$e*/eEPoEbK/hud*B_OiV(L;^[^gJm+opqU7-p8
2_Z^++W;./$O?n<!<NB,!X&]/"ssWm;eU3-V5:*"ajJ`!f\5-9iS<8Bh!"LjgYU<:iT'Ilm-WQY?i'g(
"9Gb-fDl!T#6bJ6!)=V@=$.rY0L%rk/hAV43(.(-/hTh47Qr[c0Kr6:4t7d!)&X81(D7/a!s/T0#n@IY
%Lia_7k#i>1G:FB4"qs12E!KQ2E*``6UbEU8J"E]8k;KH7n6EaK1#\A#R:Qt!:'V,4B<@/#S.mu,n11h
&/$Be%1<M"Kdn)X&.0's3tDGpli7J0"U#&<#mh1Z%L3@V(B#$^*?ca]<&63]-8dM53ANE\A)J-n!0.$e
!<<0$"9OPMmd^5<%d)a;qqg/fj3?-Sma08Srr4P<e\%`>LJ^&a-QjED'G(]V!WW3$!s/N,"Tnr1'OcB;
Q`R6l][l&ul07O$rpL]hlgj0;s5r\=n*KW=qZ$H_s5#s?!<N?(h#O>Q,QRlK#'f(cjmq$Pbgl(,c-XnK
_XZNt^$>7Xn_:pYO*P\*.No3='+kT[#R1D7!WrH)rW+JK!!<<79P%miR['><`6ZZYf@o$:hr3AFim[Sm
e(`j<g>V5]o'tf1`\%,h!<E>@!6"p?"U>87rW"BG>"1.i*\TlV7kQ;C2E3m14"2[D@n9<R0eG:K;)]mH
*ZGn/'+to_"9&91!WrQ3$47%>$pl^!0f:a42F'Pg0/>OG2`EWQ3'0AiARJ)$91_WE84Q9F;f-Os!!W`:
!N,qN!$<Xl/eA9l%3[_b$jd7S%iB:+#7)G[/1h\I#7M:o#Qa5k+;"n`#n%(K'c[tt&/Z0!(`!o)*$cS/
;(XI\1+b4;1,K(p8>:Qf!;Z[J!<N9%$^]c?n*oW7j442$dGNa8nc/X9d+6@^^UUG:Nd?P+5q3Z]#RUY;
"9\c(!$D=E!<E9+":,Q'JU30EXLcWsakbk8kj@d(mHj<,mHFQIrsS2dq#($hrVtqG!!DWhPQ1ge!Xsb3
roa[Ek0Lj8k/>clbSB.1ot8#Y]"4r8Q\KcsEaL@:%g2k7rW!'%!<<-$q>_H8"q!"q@rdEkTsV)3aii&^
h;-fBh;R)Df^n_6oEt3Cjm)4$o^MCj/,]GJ!S.8:!6>-n"U>54!!$;E6n]8^+?E/'81,K&0h,PZ3@uKt
*[WE[(`"2\9f=C=((h/g&I\sKqZ%-."pkV>!X9l50JYOK7oN+b76s!o2Z>QO1c%$J3^d"[?Y4"Q8OZ'<
77pU(I51j2#6L\$h#JNYMCfAA!!X5f?8Dch":["`<tP`A!WiN0!W`<'(EEYD!$_LW#RLnO*\o)_*>]D(
'bqDs',MB&-;e5Q@r"Fb.k<8&0i%kMS-+HFr;[E2!<N6ohVRYkkjRTih>dN8qYgF2h9XWtahtg'Z(?u$
NcI6-'*naF!!NH+!rW*K!s8T+"9el6$mKA=Ng>fg]?S=JfAl#[m-<j"mH4$"jo>ANq>]aQpA4^drs&.R
"9ef,!q$&T!#,M8517d=m+paOb/WZ>f(&P/p@ZQ=]Y_Cn[&BdiML&lY>q$Qtq>^Qu!<W#r&HrFX;/:?+
G]fafY/J6)eCrXUfG!/njjDQFoA8X&fB)5\m.L#Edq\g]!!1OK[/_QZ#mLD1,A^jN/JJ^;5>u9-4?,Jp
?sZ5Y/KP`B+=S<F&0+,00Hh/0%g34J$3^S3!<)s3"9f);!X&T;2*sVq4?ZeM8jPNsr\X[6rA59L5=ngY
:fLt!779R69keL&>m1Q>"Tu77b5`XdHXe$+!s&QE33Zj2)&ao":*L/T!WW3&"TeZ(!>uaVkl:\jrY>kR
&N;ou*#0,#'GM8s',)&m)BCCu:-M3R1G1.-.l;X,jYW>)l2V.l"99t0r9s+@m,@sD!UT.OruLRecILCi
bf7H/[AodTGE6r4,Rk._!Y#>:!rr<%r;c`r&H`=N*(3k$77C:[aO],(k3;.0l4<4JmIBQ0lKI:.q<RbK
o(2h["FpIT"pP&.M?!VWrW!!#!$<Z9mbQjYhU1odlH.3:nFb\b]u7h&]=+l?Tpq'lC3Wr6(_$]M!!NH)
!r;op!>,A<$PtWf4#8ZVPHi$Id+@"*rn/(Chr*VRh:^?(mc`<el/1Ilp[duf!!2-\UAuD<$P*[H)dc9$
1bg^=8Rl7qQZ?h;5rgA;*>fS+$l0]\&c_n63^tD/!"&i4%Kcb4!!36(rW)is/cl:f%PL+14Zu)A:bsXV
1,UsM3B/lQ1+ak25"SLP<D#\G92f,$@<5-C"qVOObQ,-Q)-B!A'bM#f03rDdoo3uO,o-^f!W`<%!!*0"
!!3ZI!UKgb!$qaW#mU\C8h:GY%1j3g)&X5*'G:l^'d#%a;G8es,W/(m>A0KJX8piP/HZ"RG5q%&lJUk*
s7Y1Hs5Mnme^VmteBQ+Q]sb2CR>>gGLd3=$$ks`n#Rgb0!<*!3!!*96'dG=g1cIIebfePqjm)+0l36M?
m-a$&'(P&En,MhHp[n.Ys6Td5,6.lNPlU@T/HPqQ@e\d@g!87Ep#a0^o?5;$_o'10`4`^fXJDMUMgT)a
C+C)1#R_=O!X/W#!<*!3!!*61&K;lC-n-QsZaIZse_AgWfbN?!hVcu?iQom+mbHjdj6$%-h"J5sp&L0S
%0QqE#lm;+7R9:%1eq<g8lB/:<(Au,/L_eZ(DRPm&J"d?$irLk.2rQt$PEgN$3Br&rW+YP!<iiA)C-jd
1+HL-4=r*=1Gq0Q3&NKH0J5:N85<,e7mo[79jLk)C2XU_$P3Bs!2]`2'mM;V+W1q@9fFtBF?Lue%giOE
!Wi9#!!2ut";30c!!)6`!!3'#+9=DX'+,'W&el3$(DRSq&.B@%.PsXl/h/2'4A\sUJ8W+%a8dsr!!3<)
!*8RSmc3?os7b=,f(]4!g=Y-8eBuXc_n<F]WhGc7EIk;u0.BJ9K2!!d"p+N"$3:/-!!EB.'c\#-,pOp_
aMurjj65[jkNV6rlg"$&p&G'bs69%Ip$M\Ws7QDh#64n*!8RW*7GchWdE^J>kfV2gkkE6Aa2uQD^V[Rg
X/;JUOGJ0kCR%.&(-,rB3Xc,nrVup!quA#D!<<*%!W`]B&J5]u>d(?Nc-t@ug=Y-5gYCQDeE-Aqj7Ls]
kmHS.me-8:pPoCW!K@*W!$;@Q"TU5i<C&cC7oDZ65!VV:0.\h1.3ffH'+tcd%0?D-%5)9W+Wqmf9J6ka
$NgJ,!&4KT!!!''%2U!#(a'b_>"(4t0etRC1c7-H0/GOJ79j4s=[YG66:47O=BKEF!!*0'nc4mS&I3SR
,o\Wl3$o@Z)_sD]#n77E#6Y)/pAbI(;%!@(!=^1UkPu_<4WFq<%hTHh',2,n%MBTq/koJ89-tf$-RL`O
9id*5dfA\6b5a:!!!*3&"IoG]s7Y7Ho\\K`h"h!)hqQo=e'ZL__Rd+VW1B63F`4=8=AisJE+CC2$3L#'
%06G/!<WB/&.T3`(FX8-ai)`dj6#M&k61)8kNq@/rrqo`nb2GArr30!mQ^aT!N#kU!%\5)o]>`.a7&3:
bg4DrpWV",b/_H:^q$_MUn!^/LO*K9P%[$==^#*,*!lcI!!!&t!#,G6!!*-%!XK)A$k4(WYcP[ce(3+K
fFQ`kfA>$JnaZ8EiT0(_hr"e6pA4.00)u(TMZ=k#!X&f0!*X)68jQ3F5WC_a4$udc+tk>g*Z>\)&If3X
qu@0F=]7=B0I/S=)\`kg!r;m0!<<*#!WruI&e5Hb'KK;a1+P*V1`/#'0KD6jB5(ja6p*=m5t+shBOP[#
!!!&g!1*["2Le1N,qqA*'bhH"-S5H)$O6e9!<</p!!iT`-j^.b!t5\'!!`rp)@Zu`&eb-V'bV&f)&bMa
IpH&&*Yp%J.n!]XCjuK5!4W"a!<iQ*!-\DBo`+[Ds5i7uhqI`&f\>9;f$i!g`k]*eWhYoDMKruIH$<O`
5t5uh)\E;R!;lgP!<<*%!rrH,.sd;.?)H;th;%)OjQ>Udk32'ljl?C7hWX=lmd]f@oCMhSs8Ue$!!<85
!6tQu?L[[QoBFQneC;jjaQE6=bg+AP`590qYc"%YOG/73CLC4VA4f$N5@?A[#6=f*!W2p4!<<*$!WW<*
+_,_07ukKnb0/;`e^PSheCN=,f@/.@kK;?0g>M#Kk2PIjlh0qk*WQ6BT)e9Z)$^NR!!#B&AkQPu6=;Z(
0K2'T;&C)i)]':h&HiXV&I\g?!"/lS0dcr$$U?Hc'asg;0ED.R!Wi?."rg?@7jgr-5;FfD1G_'O2`*9C
1-Ij)84Q6@4ZGA^5sIY):gRaK&HMh3LB%AjKP;&\D'U3$'+GBa'ceb*!sA]-!<N-!!!2lq!Wr`3rVus3
"ml:9+Yt#>+Z:)G$4ROY(`*l!&If9k*C;S1/h.kY(`XhG,r%etG\lF@V#V\?!<N<=X8i4VqX3ACmH!3_
eGK9qgtp`7dEftS^UUGET9p1QM0s5N=B&$a9Ls8*+VP(]q#L<n%gWDCQ)DR.dFlUth;[APjSn-YjPf1\
iW&c2k2GXuna,uFo(D_VoD`k3!<W<)"4.%^!&FWU%?g>Vcg]rAp>OWLcbf/D`6?NM`l#U)[]ZO!PDk6H
H>d=r:eO/A8O-ZJ'ab!B!!2rsrrN*"0*heQJ!$n,\](u%c-jqdda6=ee^;mpch6YJda-Y1j4rb\io]Cs
k4r9_!<N6'!jr$_!#Z(K!rrg8Dd#Ru4#C(m-Sd_E77edD)As5"rXf8D&.o<Uq#C^(!!!Hm3#i_D"8Mrp
!>c"C0iM4^:K0e?0J+q73'02^2D[$E4$XT_7n,s84ZPG\4[;1t8mG\D4okZc!!<:k!:^%"3LNtp/0,<e
%L<R]'IkU:rW<3'!<N-!!!2Zk!>5_,!%/%%2FT#P,Rb+i$kO-k(`!bs%MK^$5;XZ6+rqX?(`sqG-T>.;
PnEckOoQ!p"9AL'm/QD4n(ut%jQ>MJh9Z,seDf<;f$Vgd`P8pcVk9?>MLfb[?rfoi:.]Y5+;>%]q#L<n
/IE)0Od<c/d*gIugYLfKgtL`IjPf4]iW&Q0kNM='mI9cDp\"=Ws8T_K!!!3%!TX6^!%@pL!'f'1g=G?3
chGuCd`];plGM#pbK.T:]XFu@SWf"fJ9l6J?WU#i$:7<K@RCh;!WW3$qZ-Qq/cl@k?%%7&]Xbepai_iQ
e&f\WdF?Roda.LGcICD"io/eTl/q-mn+laV%KHJ3rW1+@a8dCl$ip>aAnt1068pGl-R^i84&&'m+W;42
%h90`%hK<_#6OZ##6>?&4W>4I"8Mrq!<iN1"[>C>-r<`54>AHB0fM-T4$#>Y1,h9Y:.7T@6TmIg4$5ep
6:am_AS2ST!!N9%XoR>Z('e_s4!Z0f$7Q2c&fD?@-OBqY!s/K(r;Zfuo)Je+%.4*9&f;<50.%DC$OmOY
(D[`%'b_,n)&tXh,q1)])]&f#*[E$Z2+)/'</^hU!&4TV0])iriqW9Cs7GF1hV$]ahUL<8gXag!aMY^"
Y,J(`PDk0=CL(OtB1Z9V;^W4`p&HiK!s8cTN0C-O_T^Qdhqm5Enc/X`jP]%[iSO8"hVdP[lgaH3mdfr:
q=FXdF8u:C!!MuqR/e!'!$B8Pf?ipSmIfYoccsJNoZG(nbfUjD_n`ghXJVPRNJ2k/F_t\j>@gr%9P?R+
%0ZA)1'%FY#U+MIPGt^p_T^?MbK8`:p?C#Nd+-Lek2je3e^rO6hUpT?iSNt`o_;\l!!3-&gApO>b5_bS
$31uUD,3Lt72T,W-Rpu>7p.u2/0Q&P'b_)g%M03]#RCS1!!jYh&gg=1*t\bO!"&`.!sT9)1G:UA1Dhbm
.QTXS6;pfO5s.4g2`a8n5sde$4Zbn-5RTqJ9iYe@63$ue!!B5$iW'a&L,pG/0eGd&#RD"_-:f!a#m:A4
!<N-!!!2fo"Te`*"<e'=!$E-d#Rh%K$O-kO(DnJ]4>%`o(`*l$-S$5[+!;RE+sA09,:P'+9lbk#M?!k`
!s!!6roreJs!HX[mJm"^s4?&^gY16-ccF#;[]c[*S!8neHYd>PRZ;3"HVPk""nhp-!<WE/.Yj7m_St!X
g>L]Ao_e_/jPAtXhXCL'jl>Ohm-*m*n+ZA<oD\Zk#lju/!V6;]!#Ye;;"*i'g\^^>pWh(Bq!.A=`llTK
ai;66(V-lRVOs09L4FSmDIHamIs+sq@lY>7"SMgN!<N<0-$4a0YHbd_b0\5Rj7W'=o(CJTeC)Rup<V48
e_/a-g"P6Fhq7#Ym$IqV!<WAT!4W"R#mUGgF&b[q<aoN4/hf%\8lAJD.jl_i*Z,P$%h9-X!rrE,qu@-V
9i!f4:bijs"98K)q#E/N!WiZE5qX]G0Jb=0/iu6a@V&qX?9LG41c@Ho5!M7q5!M>$6:4.1:0(e:>Qk*.
!s-(8ci=jhT1^XY6Y'1H$Om_13C5k@#R1M:!s&Go!!WWP,Rk8-#4;I#'aFsP#n77I$l'[/<F?_CBh]Qb
(_RH&3#it[*?QCI-RC)h/N6LAHoml!mJm[u!?/KJmdBE5nDi*Xg\q-rmb-LQf\"d&c,[`:\?N*6Ssbe#
KlN9:C1;'m9edLo!rrAu!;ljC"tth,\AZbDgY^]Qs7=soe^sj$g"kfOiW&Z5j58_Qki(gnlhg\`?N:+d
!!`Q*&t\IDgY+.CimYchaS,?#p"[U7bf@cC_7d=aY,J"`QAU<DH$3V@E(!2r:,jI1$Ng)'quJAW-?bBE
Ye%Znd)b)<il8dN_tWfCb15%hp$'oPbKS>]ajetpnFZJGo(biW!U0T\!$;OL$"RL;5WqM,8Oc-6=']EL
6n]K$0.eXl(DIJm$P<:;!<iT)!"C_^<CfeR0H:H&!WiN1q#LBp)\*uW3AW<F2DQsB79rAO7n5sT;aE>s
1H/Q)48qGS6:O@46:FX[?uU439)o"<!5/@K:1l=,*@iru+X7sk8R>^O$j6\A$4$Y5r;Zfuq#CU+-kd43
'F"%-quA/]%LWRP&.T-[.SDE=,:"@/4WP1H&JRe^)''\:+=A?^,Ubc^@\T9g'X7Ym!&O]V9(r2Mm-s5q
hqZuKs4?8jg"Y?=f\+j'bf@W9\?W6:TUM+)Kmo\C9hIl=1+!_B!<</s!<*$;!!<Z`OJKS5eD9$<hs^U'
dbER&s8(L0k2Qm+s8Ua1jllC8kiqO!rr3)rs8SA`!<<7k!;6CJ!<>.=lIaeHg<Im`aO9Usc-FDQbg+8M
`PK0qZ`^7#SX5=iIscHULL2Yh1+a^f&.&C7!!33%!;upP!Xp?"Of>q.b0J8VhY,1,aN1p_m)[W-e'%FT
`Qli\k3ULEg!fW^pX\U&HiX6L"9&:`!"TD:+D"_O6p<b!77Td99L97\7m/LF)D*Hf)Aa)#%gWF>!"oD9
!<<Ep9ggoo.j,T8!W`?)"oA9W!sA],!YceM4#A<80J4q76Wl]?779@97mK$b0f2g$6q0[86Us^=77Um%
@t&B?B`J/8"Tm`bWrNt;F'(@K+<;II-6jlu*@W?P$NpP=#mUJ3oDeq1*X)TL"9Roi.39$."pbYG$P=aQ
*uZ@H(HXAl'akN`3A_j+-mgB"/1W/"=cQtI\"-73!6>./":MX;o]c8:nE]E#i;MopfA5<AfA>9;f$`$k
b/:m&Z`U'sR?E5gSQR`t+W2%.%0lt:"9JT(!!*'"!<W?'!Y.AcZ,ma0g#1iLj4aP5h:pcEs74b"hW<DA
qu6U0q=X@Zp>GuNm-"6Fp]"+k!sA]+!<*#*!9*u4#c@Ref^@;JgY1*$n^tq"aNMlJbf@lE_83[lZ*17&
Q&pu[Jp)j-:ba%-&I\sK!rN$#!WiK+rW",C"9niOKUoWjc-t"bd)bnRbK7rSp>a*?d+$+Of%B-TlfSf:
n`.dZmb-(Sp#c9E!!<7b!$qUF!Yc#.=A)h'6S9N/2E+)l5Wq+`/g_YV$k!R^*Zu=#!"("arW!K1/5A&M
)\`hr&.]3R!Wi?*r;\_X&/5EN!#."f67NTL!>-A(5Yt<92)I7!6p3=H002jYIW/dc/Oa>J93,%a7nR/a
B.O#e%1N4;!<`W)!13a$(.:;_@O)Ef#SRk%,9.I5%grOD!Wi9$!WiE(rVup#qu?g',mj_=!%S(-(C's@
!!391*&]\f&J,XQ.MiX!%2:GMdY_Wf%P)3S/4`2_.lgHhIg4O*lN#'-!]'3<rr4\6o]GT#g]-?keDAj5
h;6rAeBlUbb.ta&Za$L(S<\r(P"I8E&d\aH"Tn`)!<<-$rW!B.!sJc.";3_f]><"MhC%@CgY(omk1\VI
s7=e'gu?Z/m-=-*iU#Fts4RGPjR)O<qYu*H!!N9$rW05'jT%(ak4&0>pX/*QhU'C=dEBAJ`6-9IaN)-2
^U:PSY,n=cP`LZRG`[ME,o7!q"U,#1!!!&u!!!)u!$haS#U>&'Yf"T,dEfhOf_*b8aisA:_:?`U]"?,.
g==O,am&7&_X-^<g>V_jphp-4"-3F+#Tcf2?"@b</h&G42cN124?GAQ.j5`E'GD?2-63Bm%iu2Z!"9)h
7k5o#$3LG8"p>#,!!*<,rW"k]%ho?N!>[%d:cBmF*%!-k7RpoR4$,W876j'q4$QQ+SRPDV,<\b&8Q/S[
8kWPcE^Tm/$O6k6!r2hc!#7jR<GHh(%LEX[&j%?[()@Dg#R(;3rW*'("TnZ'!!<&u!t#tM!U9Y8!B2M=
#m1;8#S&+1<Zr1n)JCZ?*tfD-0D"pM3u8/>4%1Mb74^2Q<'?NaeH!&Y.uXH&s60C>nET&re,S=\s8V69
iRul7gt1$"`Q,d+]XG&EU77@JKKgao#6"W,!!**#!WsDF!WW3%!sJr6$4A"?X5:D-d+I(*g!e1Fs3o`S
q>V6$s7P19l0.O2kN;g@l1"ZOs5G%!!Wr<#!!0t;dJte;qsaC2lH\>Ad+,r*bK9GJd`B_Q`59U5^ppVT
Y,SCqS!K+lJ=1:2*")rL!<iH(!<<-%rW!H1!<<*$":5JP0U9bW[(XHX`WWuap%6!Aai<oEp%7hGo_%,4
iQ1!4f@]B9d.6SThX0n0e/JAf!i#b_!%q)P6YBG'4tnWH3&kA56=F@b1,'jm)C6d[0.SOt+;Y=j!!!$2
6prCJ&-W%6!W)jS%h&L>":,SN"98E4*FWYU7RB=%5!_q7A7[nf5#,NsB520hBNAeI6oH,I7n6-@@7a*d
;,dm2CBjhE#Qt2/!<SJc"sm+rA4TfA(_@,g(D0[h+&Z>[%LiOC!X/c4$3pe=!s/9!!Z2aUkQ!)#C*ao@
)AX/1.j8/*()e#M<*X'hIT^;WC/,lf"rJjF/1=:R1,qWfCj>.DV#Uo<\c;Nsg@ORum,$sUr;R>nf\YB;
f\4a"bK.oE\@T5Z$*U4sQ*5^'+UeGN!'gVg!!!$&!W`B+"pY;C.m@I!ec4:DcIgk(g=5Efs3p/`hX9q"
n+,o2f]N4pjQYt&qX!2?s5rnFs7-+W!!<9#!!!&N!5JRb$).7fji$'.i7cB+_Y*Klo^USQbfIiC`kK*p
['m-4W2HAZP`(-^CG?Y2qu?j$!WW3$rW)lu!!G%e,rAD>`:V!V]>Vb0`kU-qo"ikrbM;"-gY^f:_pe8*
eD&[9lIO/Gp=&!^o]c!-!!BV/gAic5A5krl;cZ(92)[HT?VXa6@luM",p+0W.P3>+0J=pq"pP&-!u"-l
.O#E.p])KK$j?Y9#RptA&f`f'Dg#Da:.dl>78?Wj:-:^&5smq1<`:#49hS;r68]uJ7n6$;8m=k[93G>;
+TM]N"TeZ)!h]Pd!$=p'.mGsd*Y9"u(_TY*794(A%L`LD!s]&;$4$tE"p4Z%!ZW$ZlMrO<$R'Yn:,"4I
*uuOV3d`q'*>T\C,r&"]2DlsFA0MZl))!]o,</+D2`X<-Y6"P$OoQ#%s7l-HnbDP:lK@-[o)JRoc2[dp
g#(QAeBm^_s!>t(]sk/?S$do7)@ZiQ"U,/>$j[+D!s8T/#RE+uMk?ub_pJGXqYqi>l.XtIhr*;Di7cuF
i8<Dkq;UW$jo>/Ps8VEPlMpPWV$$i#r;Zfukl@gc.SBC%kg\PRi7Z]0d)b5=mC;fV_T0j?bJ:dHo^),?
m^oU%V4Ea(U2D\"$4-\6"9\o7#mLJ5rW"kZ"9g&MG)M`o[))Ofp\4IUp%J.Mf#c+Wc-OPRcH")Rd*Bl/
ld4>7d.6A^p@[(mfCeD-Op(m-!7LoJ!qu[`2J,??:/k.P1-7c[3C%+H4'kH80.@nl1,V@%@U`tQ0ED=Y
!Xp,C6nKDm$jHh7!X8u;$4R7H"Tnl-'K8KX8k`2gDM9ccChm]p>[9le2`<KM1bppN69-eR0fiW02D@0W
@mrjl<C]ML>u"j3!!<B.!WW3%ZN0"c+:<$;+?)n`)A*l1',2]u3"nt<&.AdG#Rq7h7tbJc;@EC&!s0Y`
"7?.6$QCH8-8S,Jife\-Iq;,E2'NYG%hT?_&/cN(%h&p_:+R%h%2^-k.PF:T.k3,F6>AE?!#u"?!.Fn;
q<J"Tkiq?qk1\b\hU)<&g"YH;hU(<[s"W]L_RQqPTX0>;+V"\`#RM1a)%@&^"Tnl6"!_fXV4aWl^V&A%
p$28Ns7u9Ig"YHFro"=Ei83GTiT/bns5E&$jSf)coC)#/s8ViA)?U$7!1a*.!<E11q;gnoo]Ol\f@/6j
cJ?XSp%-2Ec,@b+]$L!=p%@t?euc-QTpC\0D_Mt6!=&l:&JYob#m1;1!!NBA>`4]%Of5Oec0sfJl1k,C
imc&ld+-Okd*U+be(<'tb4>>ReC)b<nFQ;4hV$HKp@#d4g&UF=ec>XMq>a&OCI(<`>uNX73C>S_5!_Lt
>uW^9.NU9%5%7u)=Cc20!=],9'I6CA.39-5$3U>7%M9*\%gE+=!!!3Z845Nu0fqa(Ea`'L*EZ*(5W:JQ
0InV&/hSn1,T@XH1.kS-2``s#@U`dF70lFZ;,_*2!!WV.!9O8('6GNK3a>2i%2^<%'H8;?'M(:t$jQkD
%ieVX6U4qa)uTa>!<XSb!q-+:$69rp%13[b7&"Hm9Lh#h,SUau%13CJ$k*XR"p>&5%Pg0_'GhQL$>NU?
/1N)"4@)\MOT5Ic!<<c7^Ams,s%MVDmc`ThiSNAGec5[&h:pu:j8\SmcGdTns2;ph]<e?IY#Qhj/50i.
KSYA/6PU+7#m*hOR?skZ]["mOaSGkbf\,*<hr*JPi8*>jiZ%"?ioK(YgZ\\%hs0:al07R$n+Zk^rr<!s
!!MooT`?,8!<<V(o]u8*o[VpZf?D^kbfS&EnasiDaNqHBn_>k/\?W*loX)',W1]3MR6qu-+?3A5CMmln
.L$1]"TUStK8,\cX1lBb[HR7s`lcNPci)66cI(+ge(<4%f@AEofCmhAg<e:"e_/[5kjnB9oBn^@"5*[l
!<33%!r`0[!<E00>ZF*qDdu-a.Q9XJ1c@EY4A]!61*n%q6YAe?0.oIu<>-/]'H8Pt=tU[('.Gq/7nZ]X
1_i(X!!3-L3]\Q4/M&"o3^6VT9L1Hh-n6Ym+W_OC+XeZ[$4.%L+u2De5W:S[2*!ic6:47SB1Gg20`VBk
!7Loj5!^Pfc=%t+$Pjfp&J>is(-+Dd%L!"C,%rA3$4%A]62gif!<NHQ3!T?^#6PDN)^$IP"8i-7":l"F
!s]&5#87kH@jrE/%0m.D"pG,5!sAf5#6t/.'`nRL+@I=c'bh8t*?c^V12CGQ5BI+'!;$82!<E9&!'ToO
p&G'fjn%m$iof@[hVH`Zs4Z;bhp^umc-b%e`;]GJb/D''XgcW%5uMriR$3DcOIL&5'Fk9SH'=Ji\\6#5
e_/(3s5)Gaio8hPiSi_Oj5f+Uk2kOYi8`eSs6nh-kih0mkj7X0s8N3"p]"lj!"Ar0!WW3Qg[=.toB=Ze
=Q.fVf[J0jbJEK;`lcHJ]\)Y\^;7Ick2it]ZE0dfTXnYi5$iD`Hua7MI8(7\#m(<;H\%BYWjK^^a0jRg
aiM]SdE^+ddF-Cle'?:kf@/-se^;V7hTc&N$e<bXgY1obo^D&=:[.qa!!EE-!WiB$!@7^G.q;(7<GGMu
-71Z:/ho1B4$5u31GC-t0h55,.kN8;A4ma\:E15p/kBSB-nR\Z91(s2:1R*?$O6_<7mo$X,:=u_.Q9C`
B1Y6A0.%ke+WMI@+!W0^+:SSb(FqL3><au%2E!KV4@);&@9H#fCch\!!n%(b!&Xgn2Bt;59HFNI'cd\n
&/5or/iX=M"U#5a72-"6#T%G?!<N<'!s]oO(BOaQ,9[j:'d?'_qu?g:(^L6R"9f#3#8%P,KddfK$jZb8
#6Y/3"U5/9#6"W<!t#ec73W<V'GM9#)^?X]<(/2fHOdC_hZ-mc!s!BAr;ZfWl0S$.lK.3dhr3AFn,M2"
iS</Ls4l5SeEHqSaMZ!6_7-`-p!]t;R@0V;Sro(i7Ni?P&p1IZ\AuqIhV[/Eg].</hrESShqm5KhV[8L
j5/\R%,ombe(+KihW3h^kNi-7#PRrXqu?]+&Xi^r!)Nh%!*o$YoCC)Ph<<bNe(N$kd)sGaoubM)aMcHq
a2Pg0f(6>]Z*^a9Tq'E[^m0q6LPq+LH?<mS'EnI=<LoDO[_0Q&bf\&IoCBrGdEL/?clg`]cd:"dcHt%e
aLK%#p#OEHe^`1&hV?rNl.>7jo:QKj!1a)l"9er1rW!T6!!$)<7oEJe;`Z*B0g?s:1H.='4$Qh#0-qPm
7VFn2(*>k]7k#f5,V:i<@"ro*3%ZBu+Y,<680Sc^',"5J2BX:r/gi;-2*>>K1G("&+s7gD+X/Bg1,^g4
.4d>>8P*;N-nR,-1H7BX5t+723_Wsn$31.h!3Q;P,^M"#5W:nH#R(b\#R_1X'bqlT$Od4A%OPj*"T\ZK
Jfk:%"U#&<'jBXR$82hn!s/Q/#o"?[r;\\q3Xc)o#R^hF%M9IY4:_f)"pP55!sJi6$kF!\"pbPI'dY/'
*!Qc\%hTTq+!`El-5e@G:WEIZ!(d:o!.Y%Gs81sCm.9T0j6#C\hr3MYs4cAfjP&8dnC6"@qu=sueCr9u
daIOKaJ5<"Xf\b-V4!QC,o6st<OofXaj\Yohqd/C.f]P,hW*MQhqm5Ih;dhfkht=Qg>CoXiW&0&k2kgl
lKRNto)J.Qr;"MUXT7Ma0`qOYBC>!SlH[f4khk7Ef@/*md*:/6air#W`5;*$_SjL^o"3;caM#C(_VNAC
N/EYpRkL1kIX*je$31&bT<#*%^V.e5a2c-hnBK2)d*p@ecHshbgt^N,cH4,Nc.L22g=6_beC`I,f@\d8
n_EBql*M(l!!<?-"TnZ'!!5ss!+Bh9:e"D_2]ESe59MI11H.?V==u$F*&9im59LOS7;PUS1c$d?4AB1M
EC(il*#BJ8/N?-8*#]M(5[d#*-n[/+1H.BX;d_C5-6ac\rZr^<.k`hA2`Nl_7SQra>r<QN/M8e83'9Gn
9LCO#>Ak5V!r)bb!#RSO.lAkC58OJ*%iki\%1j3h)E/$/"9]2L*FL&m!<O]p-P?q#$4R_#@.eRV!s8H&
!s/]:)#O@H#Y5d8"pt\F%h]Wm2J*L.#6bA3"WmpT#n@ag',;9#-8J4Y:_X$=$OdU\(*"JH2^T.]>A`'o
lN#K9rrN&u%KZ_4(p3i6s7YgClgO!)ro=[Hgt0sCs4Q5bh:0dNs3olMo_SS3p"o!6`50=.a2>g3[B5]d
.2E=0,'i+bdFI7;kMG:Vli6ATg#1fGrn\%=c)?/*6\X[Zli6>NrtODPiT'(alK7F#lMpMVs82gq!!!&%
!:9ad!W<"0&!Q\PoB4fVg#:K?e^W*nc,IBPoZ,5#ahPCWo"E2TipcO+naH#;jic6JYcb7;\%&lQV3u]f
(CC6P'O8SW\A-22e'-:bg@F%8a3)fRc-+>CO_7QSER3"ep!rX,p<M15d*rKTf[JR0fC\%nmd'O8qu?]t
TE+unr;Zs*"98^<+CR]87S-'74?#)Q0/"n/3^QJG3%ZdA2E4QC1H70UARk[N:K9qT9k6j@$P*XM#T><i
><+Vi)B9AS@m`:00-VVa+XAI>2_d0A$n!MR*%XKJ4;BhL)_53#?<peu.kie92E!KW6Ub-S?;O3q)#sgL
#PS4i!#nO0.Q/q5.3TcJ'bLla$O[Xg1eSJi$kX$^2d-b%'+?.#<fCp@DEfs(2IIa4qu?j##UD>5quASe
>8\%\$O$b="pG<,(C^r`!<rf7":,e_%KHqm!t.h-;+sP!$4RRZ'GV<&-7D;J82rP2!S@Ci!!!&u!!NE+
"9:+0rr;ud0C%f_mHrl^lLt8Is8UR!f[\O>s8UI"dGF9On`oN-f>tYQs2`L1bg=VT_RR"99JeF@'+Z+-
gr.Xpio9%Xhq[Dpn(m![iSEAHj+9ZG(^"7-hX1'ch<aghjP]+\k32'okN)O>rrr)qD#aP:^]<'grrN*!
;BEXJp%7(th:L9,hqubsg#qkZoCKf:`k]@Bn+=30]?8mUh:1*-_mHAVn?]^<]u%Y![]?3K2'3;:#npRY
X1Q9lbKnM[b1?1>`lQ3LbKS/U+)j%T&dhO\dGO)saku7&eBQ@geCN7(eBmORna,<0>l4R%!N6"o!!*-%
rW!3+$3U>FEF2F9r^LHf6p!4^3ANTZ;H.7=5rCJ_4?d4\2EWoY3'U&*7n>m.2*Xi",8V%+%LX.-<+%pN
-Q*F!4_.&G0J=Rn+s8$V=Z8&n/-maX.j>'+'bgWt:(/:<>=CA14Y8BH2)R9O4@)D1AI)mB6t[eG"V:s(
!!mgG1cR$</1;hi)&*c#%2gBU7V6-M&.]Ql+*:6g'b;#r*Af2q//o94(d&Q:r;d*&!=:DA#6Fc''bFOi
'atHR"pG,4#Y,[?&IAID$O?t7!#c"r!=(PN,SV::$P!g_',23%+XT?\@6#fN"7#rf!"f54!WZL*s6]jO
l079imcWHkrr3*"s68hFrs7T8f&595g""ISe]lCcd,tB-cpl@0eBuLRcF7I[4Z[&4Yf+W+j5fCakMPOs
s5i4ri8<AGhWeh\)&WoHe`6T-dbj!ChrNbUjlbdklK@Hos7u]js.98k!Rh%c!'`j3o@`ihf%/6rhUp'%
kiq[$k/tj6mIBZ1mdn`C_p-6?a25O,]=P\je+C;`\[]Dj^qHqaRnc+%0i<.cZ*Z9qd*U:kf$Dt2o?be(
bL"DRbLott$k<e#^t8,I]ZeaOc.((cdaZe#g""^'nE9?*o8EMH!!0\3i;d0e"p+c\G\0NO84lKB5<^n^
=D;Gc@re02F),N'AS,.+0In=h(*tUc0.\_30g/Gs4utea.k2u';e\QJ*u6Lu;GKM:1c@BU4?Q#$A32Cf
*$@!o2DPU>&0D>o56VuQ8l%T(1HI0E1c7'H2E3lg6r?Ta7TW1^":kd0!;HOl#fgd87kHDK,TS!@&kf4)
KPcbEpR@\(I$B4L'atBP!s/T5#n%"F$k++;',D2o%gWCF$8kir"9AK-)([3R%hTHl(E45=04Ph,"U"u=
&J>]Q!#ZXS$8O1O%1j9a%hTEd',;<(-7(o:7PIR[rW&;c'`eC<!-A2?oDe%Ms8V3Cjm)mGqW,g$fBW,.
rt=t]g#1`Ag=tN@g#(E9da[X`d/MN`e^i6t`RX%CNJ`Rf\%TB$eE#WLf?2(MgAg3cjPo(QgY;(N'-%f#
.)b-@s45obhqd;QioT:cl0@O!kj@^9qY7c1!!23^Y5g+Un+>T,e*-AmdFHb!n(?mNYe&!,md0B3n`%a3
cHOAObg+AMbJVE;`81+!rk1\7`5KL%`mT]jH$57EWi<eOeBlL[\$E6Yn]o)#cd'VOa4kVA$O@:cYLi7:
_8t-ObL+ebe'ln#h:UE4g"#TWmA^Nl!!!&F!6tQu":5226Zlm7<D?@m9L:p%4E#IH<a0:-KlLjABk0[p
1bKpg&-Wn!,UXlf.kWkY3W;,W3%cF$-pq?=69m\*<)?%Q5Wh,#84H-F/lZRS.MNC>3BB,U*WR3,('cf&
*F)<!/MT=D0etO@1c.!N5X7b/?q3sk!!Ef<YlNkc//>En4\.@t8N@t8'HE"Z<(&oXp>M%*O)\DX(CplW
!s/H)#6Y57#RCbV1_K^$,8(=d"9ooO.2EU0*\f/c*uc+8/LDM\-p3>4#Qb#1'GV8o!rN$)%KH]).hi@$
(D./g%hK9b',)?/+=Sj31I3a[!!**%"9=;YoBuMUC#eX]mbm!^i84LafAGN>g"bB8gYLfGh:gc?gt^iE
eb&migYC]Ah:gQ/bKIu=]tLt]Yb[>-?V;k"7nl,h=M*YLhr3GGg$,sm&f)6"SaGV?ldk4js52boj6,Xk
kiqF&nFZJOmF<'J!1X$,D=-98o\o92mIJZ]p>4*@da$&._8aaF_o>j$a2Z3EdF$7_cH")Mcd'GjpV"Vi
bf\/QbJh3,[&C"*W19KDI;DkN+!ER+/K$sSe]uRgb/_NQTc++@&.jWUg%Et9f]DbMc-Xkhf\5$0g>LuI
i9K1<(]==6!T=%E!7:d(":"u.8TIp3C27QfA55?Q?9^A)2EXH376WLd6p<Oc.j>rG$4%4a)B0V<,qD,`
5T^RV*ZG"k'dc"6:/Fe`:esYD-klge!u<%$$85=.4pqN:2`EWO2?F^B*!%]3*a_l%/j<E'1GCR:/h\t@
4[;8,9LhcX!rr]6XoRYc,9F*e6>sYs9oh:T+AX0p&/,p-9->&_'-J,)%gW:@!W`<'"TAK@"U,2S8f@g6
!sA]-!W`K>+X\ck.4HYc%g;e1%0?M0"tgns!!O#J&J>NM!"9)9"]7Vr%3\7_&.K0Z$k*RW)''qI3&`QO
5a26O!<iI]rtYJ/s8V]Is8V<Ps5)r(kMGV+eDT9@rnLW4inrPNi8*2GgYC]EhU:updbE[9hqHoDhqcPj
YcO=VI:H&+-l`s.&N2p2+r#7Yh;@/JgY1i=2%LN<&rQ29s8Ug@s8V08ioB4cl/q@(l0[m5rUAntoDkQb
*Wc=\l0%?dn)2CYo[i$pcIgq)bhVm,cd0eUai_iT<mJk8d*Bk\aNDfScG/B3^<4gJcH4;Wda>\-S<ntY
Bi@DN-QX*-$Rd_S(CO^"daQIcaMufE-j'ee$?>4Tp@HAap$pGOcdC=qg"5$?fA>':mc)bBr;Zfuh>k7i
3s5cl!(^s4=*&.T8Pr8K5[H/t/M8\>;`HT^.m#UB/Lhqc(D.2m*??(>*[NF&@Rq19&02T-*[<O,6O-.R
5s-qL(^'[9#oP';)[eMl%gF'R1F+S9$5+X'!%T9:;Hl"8:hW?U1,:I90JYUM5!M\58534t!!ihG!7_&Y
*4fHRc&Y4A5WU#4:Cd=3%3ISC&-iIV&If*S"U"r,!ZM7E!sA`1$6iIq!WW9)!sA`1&f;H+*Yf7o!s/5u
$j$G0!"1+T!!EiD%L`=Qqu@T<#R*1j&/@*R.1Zq#$k<dZ(`j_B1,UjL:SIj\!!<B)$FB^2&``-Fo`*n1
s7kgDm,A!EgZ7Psis=c,i8NVOhVHuchBq(7f'!(ug>(Z?p@+AU;E6!B(`=84*ZlCI*?-"<)Aa>4(_`.q
g\ot9iT+,M(D79fkh=klrsdlNs4uhtj65grlfd^("mk@Ns7o-L!"8o/#Fb8@mI\]ThrF>;c-PkDf%Ss+
n+=WJfDa0#e'ZFdc-=GTaihlObf\2Ke*PW,b0@lfhg\Hk.ioNA&eYlo'c%Z&'bClc%h/pS%"d6\cHOJU
dF1Me%M9"9fZ;2.nFt2XmE3o*dFR%/h:LH>e'.LXnN?aM!!2TiX8jIJ#Rpe8?ug:)CK"#%93">IA2Ytc
,UGWJ0eFFf+X&'W,q(8B.fq1L.2!mO-7q)BAm-#S,W8+e-k6[m"o\K`!='#H',M;p*>fS0,qC8G2CT+L
-Rg,R1E6Z>%g+7=0gTAZ:dA)d5;=oK1c7*I3Bof&8lfP+,6.rRe,[>c'h+P6QYS]C2)mlF,(146#RCVS
/.E!c"U,)8"pYA>rWrN/rWNZ;&0mQ<!rrN:00BF2!;6C!$jcq9"pY85&-;_0)?gfa*G'LL*Cs9O%hK9b
'GM9!+=/`n5Aj^-[K,4c:]pb,]DqZsr9Wq7s8V31s8V'@ki)F=fA>BHjl#.[i83;GgY1E;gtpoDh:C<[
qpjTTl/SXN'ce#*)&XA8+X&*T,p"?Z'cdo()ANa&j5Bpn$/a\)BFY^f&Ph$sgY(]gn^HOujQ#@]kih9r
k4J'(nGiOa=.93e!$hRF#bgnPhWWSJddZnV_"70Ae(2k1nA38keCDpne'6(Zb/hU%aSsCXc,@Zhk/,<V
dE%29$kEUN&ebon(DR`'(D@Su$k`sY$3UTBg!n<kbg+Vg<sK*H$89QD`mFD=_9MZ!dF-@lf%Sg,jke;8
m/$6C!!!'#!!/Si('FjL!!$G<>ZY'(9hSAe7mgoi4?,5S&k5S\3AE$))]g4O.4m5-1GUX<r[0i\2a_7c
/L`nbB3R(j%M9T`"UYk[*$?=I*?lsL)%n&E.LIOY&eHE<)\"D?"Vq@J-Ta7Q<*qRH<bF`S2?#EA2)mW^
5>"OX>#d3U#7'DlY5fh<D-Tk93]JcZ74B9o58Y.M%k9LV'b1QS"9eu6#7:nK%LrmUrWWK5&KdBJ"ptSQ
7:nObl2V+n&HW"<"p4l7!rW*;!YuCh5u8C66>%DP&eP`h'GhT2+tYO*7o]f9!6tQI!<W?7`;T^&n+#T@
o%D^rs4QGmhZ*W*i8*;LjPo(Thqd,Chr*>GhVd>IgXuK)s6T3D/0eRh)B^%>+=&9\,U+BS*\oVn%hf[(
)AN]>dcKBAh;7#QM@^O;(+dAch:CB@i7e5!gYq;Uk2u'tk4S`R!qQA!XoReg!!2ut@goR7mdKf'i7%>W
`5M<;_p6QLnEmp2aNVrWd*0b[b0%fKc-"/Pc-OVV`9l[Ug>.2p%mVTR%Lj-g(`*r)(_m`!,U!d1',(fZ
"YI[GcH48RcJ!=I%i5TcYL^q6bL=eUoaootbgY"he_T$2k3h^.jSVsT!!!%i!!<E3$3D%E?YNYF>tdg[
AkP`k?"lhp5Wr%D845[#r\4@,r\.D/1bga:,Tn3W1-AEI8k3,e(E?71+=SiX)^$CP+<MRA(*bIE!!!KQ
+q+c4*ZH^^*t9kZ!YY_F))X<574TN<87Y(I4?,5X3''8g6=",47q+@V"U+u)!1X$,7rV@&;`6E^@Q,\f
<bE^"*Z.(,,U+-?%1WFK%M&II'FkZa%LE:A"U5GO6b#*-=YBaT&-MP)rrMoq#Rgk=$O?k9%1<"5)%7/n
+:&/_-=/#3(`!f"(E4J=-Vmo\0OkLG!:'X4!&"ET!#sPip](9`o&p&QjnJfThrj1Zs8U^2jl,"Yl0%<m
j5f.Th;-lCi8WVLf]E,4)t$]0+@]!D*$Q:E,9e?X,Tn!>,s!Lm,o%7I+=JAKj58VHhVRRh()7Gs,I-Oj
gYh8Pdf93uhrj(_kih?ts8VfmlMkFr!:Kmf!W2q0'ZTe/natbueFW=Zk4.i[daH8+nA*>tcH4Sfe(<'r
dE]qXb/qlSdEp+VdIm)'hECoM.P_PF',MQ*(D[f)(D@?#-QX$K((_>t)RJ&@aND`PgP-4K'ab;=gW[ab
g!7D,lGh!Ve^Dptf@npQn_`ijqcNds!!/Si"pPD?!!-P=F\u:L8Ou<_=\_q3>=UnB4\o*I69@+b3]T/Z
1GUX:/MJq2+W27B002U<AmSal!$"'c+<i6N*?cUM+<;:1#o#'.!!36B/fFa?*[!3k+VQRq#8.+H'.G^q
5U%+!5?gT>4#o2X3]T>g<b+lu7VFg_"U+u&!1s62>%g?#=#2Q[B1OjOK2X*<*Z-q)+<MI7&f;H$()IMn
%LWUQ%LE:@"9f2J.;Elu>m(--!s\>s!!;rr#R1G8%LWFA&/>$B)$LWc*!HHQ)+Q:p(Ddc")&OA;5@-6,
.WQ!O!5/@7!s'8+rVlukq!\"Ws!.3tm-jT0s8Ud%d+mBSO,&LUVo.EXinNDLio8qTg=k$3n!<qm"<C8s
*#q$_*>o\7.PX(bAV%29bErtV.7QY,khOkFh;@8)-kR.1(Q@qAg#(cJh<=n%g"tcOk3(t&s53,AjSrl,
!8IPS!W<!R!>4&[o(;V6lJ(RdkO@NXf\blEp[Q8=^<+9RGB%VQP-N<id`Bb]dF$IiaN23Bj+/!F'`pWO
)ZCZm()%N.-o"(hD4A;QMA-O@1,kl^ai)6Cc61T4)@7)f"F9+SajSYcb1H@9`6$EUeCE+6o#B/Kf)&VK
!!!%u!;->4":,;7!b>P;?!Koj8PEW)C/dMd4?#)n@R3%*4&e-e*?#k@.5!&&1FO+R'Gi/P3BT/_1&q[k
&1nh*#9"En&J>`k'd"eaF`CVL!!aT"()nMM4?"c-0iA\t$4R1V/0uta&0X%o>XU\;3B0&`5=J0N91V`D
Ai9Vm"Tjti$#Ns;:eEGu0KZ<HZ%Yal,T[j;12n6I#SoE0"o\N7!sT,?$kERF!WiH/%29Qi+q"8K!!W&r
"p+o<E-XhbrW!9.!!*?3'bL]R%k[\Z)$(0M$j$J6'c9Fe'c7]%(`a\N1b("4,\@GN!3cG'!W2pF!Wa26
s8)cqmHX-&qZ$3Jn*Af\cbK%5Ed3G;@ONNQ/N6[fbN@R9$KC%&iSNAFg>:qRrZ+6B7l_8"+!3!k<-XP+
_9^m8s7)p*#:O/U`Sf\-g#1fJfJj?W'bYBLh;7&Khr*Mog=4jGs7>+0s6o.9qs+2jd/_8grrN&u5SEDX
kO.ildaun1mGcFJfZD"IZ0?R?Ap98/*#BG9/P1<*g!%mpdEp:`aNVlNb]a[6'c&k`&/#Wk+=TZhI?uam
]up!,k)gA])bu="eBl.ObgY+^-O(1m%9qc=d`g"Zc-Pmq]uK%&jN>sDhp0^<h>(.N!!!&3!9O8k!W`9$
!XK/;"(,;7?!C<-<)?=b7RBOD>?j`j?rB3D4CC#Z(EFD-*A9iR4"hEe)_*d,1*e2/1]nR6'.Fe!!YZ+U
$l1'4-RU2i?uT=D!!!Zj7Ro*I4?kJ$%Qk@4&.8Rm)`Rft0/YC/1gsWa5Wqb,6:=a<7R]a.;DA.Q!hKDe
!#]EI:L.-p5X[Rq4YIm,7ncH"+DiM>#S9?1qu@9/#9PZ:%0H\8#nn!`"U,_Nr;Zg"q#C^'!sAc2#]%Oe
,5qQL$5suq!u2[^!!3r6!"oMR!!!E?$O.2R81PW$0IS%i48pN0.ih%a!!&Pi!!2ut'ES:RpAaaas6Jn5
kN_?sldr,&LO3!&O)mER6"+78(Dmr#(GC-Pl.Y"Ri8NPJh;%#QNuKG`)EK`$0LT,mP,lXVk2kRXj8]/"
,7.D\l.F\Jg">6Aio!B=(D@6\i8<MLh;72Lp<_Ubrr3;hiW&0-lhK]?@cRNt!<3)u!%efJqV:E,e'QOj
eCE+#_ioUiD,Pae/3,X_9F2%4%h9F/EOFKEda?FgaiM]S7a92!%i5io1G9dp01BDsQ*\HYe'H1fnaNq)
#XG*;aNMuL_T^N]cSc%A%LbnXe'lFYaO/2h[E%2!o_-k\p=e!FkhGc4r;Zfuc2c;n!<N<$!)!S+#6S7=
=^GlH<E2je76a%*927o'&Pc4U,8ia<&Ki>>$NU;X9h7)Y*#gRn4"hHs4uNTj)\jA)"V2V%3BKDi3%lKl
)+\:N<WF`P-t$%K/e'p/0)u/5(C:W\!%^;6!&d)$+Z*P6;FXSn@7EUe5!qV&3_M.,!WoV,jT$0-<Dm+=
9gM-+/gh_`+!N!K"99Yj!Wi?4'`%e>"Xbr8!sA`9()@;\"re!L!!!'!!#u"B%M06h&e,$I""]M'2ZNg\
7S,0>!>QO^!!!Z0!!icK!!!TM&d8gX?V34.3F>]7+[R7q+XS*g#Fb\n!Vue+)t*b)o)Jags6&q;mJ2#W
1+XY!%QR9;-4afb*$HIN+WM+4@aF<%j5T"Rhr!8VKcLjP(-SJ5bLte+eC)L]d*Bqbd,=NYU:JhSs4H/b
f\GHDhW\ke(E!f@_rBP)e(37'rr3H&jQ-@7i;`i;kl(/RAbQ2"!<*#u!#cL,q!?o1p=8ichq?fNAKN*=
+smgJ2'*YA:0BFb'GVK')\s;f^=h)bccsYZeB?E\&dfKi1R#/PajJ8M_7-ha]",Pme`teJUqlcsbg=YQ
a3E#[fN8Fk&Ig+me^;4F^W+(Wo_%Itde;hIp@unZnEU$Vr;Zfui;i0Dec5^P!WE'o#7:M:@:ND<?#"Cl
91D0073r3\)ZU*G2+f#.#us51+s@p?#ljrB7Q;b?/2]78,V),7$5Y'%*)p-E2_m-C0J5%30/51"-T4(>
7T<_F?mZX&2`E2i%m)EI'GUoi7huLu7R&[rDJ`oR3]g507Tih\5=@\;0`V7VXoRYc%:rmF7TjW[AMGb[
+"@Bi!!*--rVus<#l+H/!?`0a"ptqR$3gbY#lFZ./jDE1&.T-W$2t8G$Od%@)&rl%3EgS1!s0)J#64fD
#Q+Q/*WlE]+;kY1Q$ZmJ/Jf9c0d]4S+rr!S9*h!errMus![.(6!WMfks"Wp3md9t%/2K1;0.Rhl.OQ6+
=WS_2,9J$Q)'=:ckN(X\hqm5JjJG^5*>10-g<\<urld.>bg+JWcd0naf\#'%nGhn.i7crEi7dXJ%i5uo
._4`tdb*g\s6Td\gY:`_p#,KBiTU:@!+YX$V?$SrrW!rRiq_s&o]u&>gZ./Hmq<de-7:5b%2p$#&MQEa
(021h()Rr%(M_7IdEp.`cI("bO>nR"$7V4\]>he&]t:eb]=GD_a2Q$@b0RTXn)Va?`l?9Nc/3(>&J#<k
Vq]G,^=)97b44`<ajB>8biJH>dI[,0=T&4"!T!go!<33$!':Dn":AUJ=&iaEBjjS%5<;7m(bRK])Bg:`
.No]j9,o&s+WVLF%0.kH1+Fh20eb(06;0*l,7tPa:d[D\&.B0k*@3$_/Lg`&&108'5X\lq#8T*O,R=oB
2['s4%2___*(Nas79l*q9Kb6p77Tg;?UHnJ7q4=T"U2^BeGp.s@8K[,U46E%/0Z#_%0-D1r;ZfurVus&
%ep#5"XFWc$4m[V#n.q""p4c(*@EW`!W`9%!<NE.#RCY8!!*67,T&"Z"9AT7%L)q8!ZV[I!#Qpc"!T<N
.ol4r3uAPH.krA):*:E*/6`FU!;QWp!W<";"9BFps8Vodq;hSUmdouGNAN[U1GC:31+=dq,ZYm,+X/6Y
+sS9M>hS/rio/hScM764CL.r+Gh1-_`5op:bK7fHc-=GXc.:@sg"QK+f&,9<iSWGSU)t$b',d8!mf3=a
ir/o0g=tNBs5r/2r<;KIqZ$CoR/m3erW!9;`VJudi98GXn_P>Jj6h7?+sJHc+X%sF*"a#P()n//)Aj/$
'bX*We'@s>8(#*>loe68&Kk](]=PA[['I9N[C<c]_8F+2_o^'Co_cbQaiVfQbh%ag$kNs_K\#,Qn)_gW
o>Senc-Gq/b3/3Bc0Y2s:Ak.m!V$/o!<33$!!WZ>"pSgX=T22>:L[!^5rV+u,s"19)BCRl.3o]G3=#s%
)C6ph.i&*u(IgA:/1rV301TY/@9F?L+Z1>_rYmm:*Yo4r$jmOY(+2%08P*5Z*$d!d+r)"V6O4DC$4]BT
.UH[^5$i(s5Vb2V9L_E@7mT'u92I&;"U3BU_>k<dCe[>c75\7-+se'P(]a[>!<<*#!W;uu$2+?3,Sgap
$k3aT2LG]Q'EA+7&-;q3!<N<&!<)ut!=oAH,Uk0`,Qe2U$O$S6(`3)M(`!Mf;-uF)??RY8%M9F4-R(B"
+VZ(Q6j:"!joGD^r;^+,!><HQs7uEVm/R+NoC;aF1HdZR.4Zbn+=&*V=#23E*[2mS-ljKVWTrF&iS`_@
rS0Ob3>*$Dfu_=Pahka*]tqb1ai`/dgs3U8\GuTYi7m#Dhr3V$-4h+2&f?`-s8VB:e_BfHgYLcEs6K%O
md&p(p$bhJ!<3&u!WE(B$aKNpkiUUNp%6quiq.sN,pOle-la0@(_drX.O6#M(`3l#&/6+If?Majd*]Pt
b:aka$kcdb\$rTNYc=e*Y-kaL]ZA:?^8dTro]=$9aN2QMdF"L+#S@[ZGjtJ"dD<Z9ik`[Zcd).7g@jCR
biA!P7K<Di!!!%m!<33$!#5_L"or:M<`2dj:M3Ti5r_,!+Zqk53t<#L-5[O3%keFq!"9hs1,0d[!'EY(
/M8_40Mc1#.Q7t?(blXM+t+][+;b_'%h0p=/iZ*d6:Y!]0)d=H+WDRb8.-(I$4&aW<+&?a1f[OA4>AWO
:e+#]5!Cna5#!:&"U4&hY5f/;DG*Dc4$$q9+!hdK)ZTsA!Vl]q#5/$$&LItq$k3aO$UA)#!!E3##Rpb;
"9nu2!s/?#&dA[N'H/#.*_*OE#7(S=!sKG]qu@QG*]HqM)@no&*#B%q'fdcr8K]#e(a;-GaT0cirrN*!
9*#+q"M+R4q>9jRs8VKZnGKg\4#oTBI"mukXesGEdaG^S3$'^u.OQ?!]B\83iS!2ic;PZ-+X9t,begs)
^YJGVk1$uHO`FD]+!;@6%Pa:&f%Sp>h;?r26P(%O%sJ!@dF?e#iU>:Nh;I2irs.WEk3:poj?'LEli7(g
!Wi6"@\NMflKR?bp%@/'j796+-mq#_E-6f&QAiHM_T/Zn/.s$=(`<u:UY3i:dE0f1]gW_S'H9HI]!%s/
WlX5ce%hiMG[<`i'b:ZU,(.AGa2lTKcH3aZ#S7^X@JSlp]u%h6&Db.Dbg=]+nak5XdaZ\(f/*@*!!/_m
rri<$!X/u:G5u/k>#J9q:1[?i69%.o(bmfj-o""d>?P3ABi.Sq0bP$G-SQ\P#Y73:1,(CBBNZYt+sII,
1`S>/2a0l1;GBYB3(>M9!sAZ*#nU!;1bKmp.P<SP'GV5`"Y`e)4$5,A8kV?,0ebCWAPkKF2)R'L;&93;
#PnFj!#\Lf:e+#B3aOuq-Q+!@!!33&":,_n3]9'$"FDsX+:7iD#p1<$%h9!`BKu^u!"KA;$O[FY.m?HZ
,7k;&#PnE,.7FaS"9o,>&LdPW(C2`(',1cV.l8%T%1Nk*FZUBP&eb`q4PKl%!7h/M!WE'_!W`<%XT/=u
q>]p`s6fFIp<-#e1eG%#bQ%#1lMpnEmHN2[1*n=q-Rg0umFp^af(/jhA0EEO.S$tm`51:/rs[VcSWQo8
,ngk'().]9'M,4[eDBE\qtp=l#ojisA`MFie^rF6m*XYFgY(ujkhb@_lf8$,3i`8L!!33'!W<"0P4A89
m.fQ5p#4upmCk_2,sJ<L^AQ12e+ECciS2Cr-5[X=)&O$0g;VRl`o?X);]Qkt*B9h*Za.dKna=;\Jp'F3
)\*>d%LEUQ23Gtqb1,J=mINsP',:sRe]>A<_oC$U]ZL]-b/W9)f?Mdpf[9QJ1Aq1Q!MBDn"pFo*"U>>=
!+Bqj>#eO3:0^R_5rq1l(b7-[7o*&uNcSWGB1#!T:Hf@#,:F`S!]We31GLLI@oOld,UaQE5VFoI7U0kJ
DI?F=-6E]t!!WrG*""9&6nfr:2ag)3*"`tl$7@k^3AMlu6qKR$0eY:J7R/aa0f1Rd;A]B@#PS4j!$"Fu
<DQ7p4]4Km,on-D!!**%*ATO!nBG?eA0`K'.P_Y5!!s)i&ePW^,[E>4qu@-?$47(c?(6Fc6nKVcp](X(
4Wt4;#oG$?6im5d(BbQZ&IemF,;0iH%1<Xk0-Cf:%hfF=5hH(S!<3)t!!WT,PlLd]o)AY!rUoRPp>fLC
4Z^1=mJlkYruLjsk3V'm]1X:p-7^W%\EDl,g%,1"LE7oq.l3$V(Qb/D=>;0>)_"?1(*FeE)&jY7*@#">
rr2p?rVunj&/,d5A'39JcHjbtn&`u0g">$4h<!YXk3;p%*khX0!!33'!W<!fGj"nlk3V?uoBY<%maXoX
-o%dYht6%%mI05if%na+Uc987)]T\>T@)'1akuL.FWDVH*$fQ^I#)l5-6!I+(c!*?'Gq\d&dSs])bRO+
o();nmdT.q#n7Lh9XqmL\\,](h6t&<aiDKBb1+ngdb4EA*rQ'=!N6"o!!*9,rW$p=#R^W4D.$FDAn5CK
7R9:(8168S(.:V]B1Q*:@m2Rt1HA'$#RMe'-Q`Xg6o6PJ5Yas-!$*R=,"P'R3BAB!&eGm*4X_<l(_dZ'
+<).93`8IL=&;CX>Y#SC#V7bu0KCTl"[>I=1G:F:4$#;P,R>tT0M,+E!"&sr!!t6h?WB^nZ`QVM(*t4O
/-H"V!#[:=G;MUEHQ`k+',E;Jq>^dG,S:Fk,<[Raqu?m?(C1K]"8i-!#5/$'$ns4i2*!BD`?"pX(]ap^
$kW^F!$*U(%1EXS'bqAi"q(hM/33"rYQ4\(r;[$(!s"G_s82cp*;]<sp%IW^4[M-/nG`IAhX0jrnE]W&
mcT?E-7g8d0dDnKj5AbdptM,\/1iM.=BIC3)\X)/(F:%Z0HM>XrZ*I1(E+l5dJre2g=Y0[W>$0`0PTOq
bKA&OkO?X@c-Y"mhV[>RjlGq+aqE)%aT)AD!Wi6"5BQ/an+ZPNlgF#ulg<M'+snn0j7Dl^aOoA!hV.#9
gsBmU,9dsE'm\BYd`g\1a+PW]+!)Lm7P#f!$kEs^(GcXM+qbP('GM2p%hp-ZZh*/9`PfgpQ44B:*)P"u
[C*QWdbVCF]=u5&bg"Pcda6qB]+k2D!!0\3jo>Dd"T8</#m^N1DHp:KAnbdP8H(qM9/ALm)*C;YAjAUO
4u4`:0/Q$n-3,/:-Rf6[8iA@V6;'g,!$*[H-nlYB!!<<5'c//90J"Ln().Q**uYn;3EflM4@;Cu=A'GI
$o&\b:,Y'[$NWO_4>eT=0/u!M-ljll0Ki)0!"&t&!;HO>/A,7j?"\,[6T$5=-o;53!rrl^12e*O.j,E4
#S.In3s5N`!WE'0%knY,$mmkY$ig8.!<<?*p](<r!VZR#$pRi1*Zl@>73VX1(]b.(&.\sF!$Eg,%L37J
&etu`"Ub_M+Xm<iSH/ZjrW!Z6!s8O7o)Jaas6f:@nal/6l[VAk4Y`&fp&F%<lKRg!nETT'lfi+&/2/V*
:X\4hebo-u_ETP'0et@4-U0pL.4HVf'HJ8;rZ*O/(E*ts%M!pKg"+R$f''ag(EOD[m,u4&a2$4)cG&`H
s3f`[hrX%`kP:>Cj8cUgrrW)u/5FUdp$)8.h:q#Shq[$p+X8Fak2l3Yf%&@.d,*F8cIUEH)]p(:)*GRW
ho/(Kh9<)`,97mL*[)4I/fGKD)]98.+qt\)()IZ#&If9Z?-pR-]>MP@X:u-Z"YJKYXKT"6^@f(:i:cr\
bKeJdeC)t:K*;,Q!!1@FdfBCNrW#Rn$3gJgNGW!'AlM`,91VE<<)?%V,rJ(Z?pd1<2E*6@.PEYG7Ni9f
0e=(X:H10\8kq`B"rK!Q2'Nn\2`N9;/0l/A#R2Fn(D@61%M]W_"9:5J0JPmZ4$$:^)]U:X>sU:o&-k1'
5r(H(<Al`h-lXZi0LI\t":>C=!9F29$L37R<+nfm5WCVK-q>E^!s&c[.nq00'bhJn%13UY+t!El!!*'"
!A,$##W4Ra)up!<!WE'"!sJ#l#RVsg$l^-#)DD$h#6J-R$O$M1&J%bX$5u;h%h]<V":>PI.1;=>!!7<D
8F6BVq>^KjnaPZ4o')&s6ooYaqu>R?mI'6!lg!p&lM$Vl0JP(,1TKm2f^A@efig!`1b^O:,=Poe+t"TV
*?#qK,U4EE',VH#'F/=7iS<2Dg\92I'H\;:^uiPO^:VYifYd^gs4l8]hV[JRip_3n!!2lqScB]1!'/9f
p[7bHl/:CEhr!:6.P</`l14Pjf\PCde'-CqhU^??IiB=K*ZuhthquE%fuV0+*$?^\-6jZp9d:Z")AsA-
(_[/Z$4ROY"q1qG<RoL@b0A)t`uPU'%hYnsZ`gC+[d_5<nFQ=sa3)]Qe]lJ"B%m=O!7V!G!X/`5#6OrU
R;#f(?rBs'<`Dmj<)#8</j2]h<^Stg0geAp1b:(45rTN81F3hX<BD?L=B[pT(Eb:U+s]5Y,<H\Y*?>t3
%M16N2CJn>(*aJ?+TN<B,9JBc.Qpu`)'LLO?oSeu)\a3%;*[]C>;@ib0eOe&4&\'<#7h'B!9aD/"8'95
:f]tU8kVH74@^Os"Tf8k+Z^_c";)k(+;5.i'-dqd!<N0"#r*D)"A;Z3*<6*<!<WB'!Y+Pt#QYqM":,;>
+@uD1!_4%,rW30&BepP62(M<1$k!OQ#R;2:%$^er!<N6$(UO)?Dtrknli7"^pT?eN5A/dMs5rV:mH<Wl
kj.U#o?0lZ0J>%,M"Tokl2TAoRk-?Q1,(C6)c964$Q:$8:*i4s;2:a_@07fC77l(ciSNMGs7.ra()I:(
c+L["[C#?$s3\^`jO2i?hrEkamTTYk!VQMc!"KX6meZbSmGm0So@VRBSGk,J=4$O4d+%%0e'Q?>e_8g2
i3YWb*[)jMFQV-#cgo*)LEIop/LMY\%llEG":u7h4<6+02f+D]<<X6r2`ek#dE^(\qW/h6'b:Oa_QTo6
SXnF$otRX"eA9>QcHjqhh+6/u_#QY#"U>;;!!!LLDeN9\:/P%pD/aN<?o:>/0h=Z67mA:Y6q9d,0.f(G
:+@eI-6+'q66\6bB.Geq&fqi)+uVV;+AGE?(EOJ<3"lrQ1JC#6-NYDF+ULCZ+Xefg6<kfN%N5L*/-Hb5
+V@%Q?p-><2)$U4/g;l7=XX7T%0XKIe,V1;Z#NiI5t"IBER3=q6j*\s#V%2e-m&^2,q(2W%1Esp.0KVO
!<<*;-O(/GD?pj_r;[!%!<<*-#lFZ7#QOi+"s=R="98E)!<=&B"U5&7#9mLP!#>kI!!*0(!@3e)((;c.
$OR1J"q)\S"JPnf!!NE(!=#@prr3)qp%[nPs'P.r4[`E!s8V6Ho'bi*j6#^ql0mS<.lK18-[b=EiRn1d
e@J+"2)[3E2'+bZ!!!EF,XXnDQE']Zs*P4r5>XSfhW!DKeGoPD)&F)!B#qNk[BcsOnER]us5_P`h;JLt
hXK\mOoPgi#E[U6qY9IClIKY8o(Vn867FZ]_tEiPe`5N8d*:"nhUgN-:)YB*,oUISf?(krcGlh>+"Aih
+<V1>49,?b&finhAUBL$r;CLC(,8$-\B`RKc,KVC2A?r=$!=d=UnF3CX5;I+V"<*Lc-4S_bMCZ%lN"'f
.fokZ#6k50")EI'=^k-(<`j-P?=e(F4Z=f^8QSMO.QKme83/O]3'U1n-W)NE)]h:4,rnb40/,g:'G_N1
0fUI?;$mF:$kOR!,>)3M>$`QV'.>:64s_@#.jdPs2%9g+"<f9!&L&J701\Je0haMZ.k)qm.n3_Y!!`i6
e,[;b0j*=\>$XEc;,!C*=I5$X!sJiU0gRE;$Q16=.2NU/(*PO@!!**#!#6jd'eb[Y$lT0G!<*!#!!3Z/
!#GV9!!=<*E(j:8!!!''!#>_B"pkGT]a"E8'`nU?!<WE)#VRM4$8`G(#mUb@#V8l\!8mh\"TeZ(IHpe2
;t]bFs7G[3ie0Wl8$2Lbj6H1$l/q3pmH`osp5CX[2)[!jqZ$Tbm/PtqSSCGC1GUXF6uYn!AWEUp`5Ta9
_8t2q*Z?@m7'5V/g=kB?s)Ai!*Z#bnZa6g5W2m"tWj&r,g!AI2hVR&f]+UP4qZ(a?!<<+3b5(f,p?:Sf
n`&0HeS$Qn2k04/c.(\)da-FogY's#k'8'p-nHH1me6/-bNmNqK2+*E+s%aP/lt)!<.1".[^*3DZFnA=
)%RT>0UpbBaN2WTqHO^R'bj*2UmmR/P*VB"S"])e]Z\[Mbf]=I%/p5.!!!%k!#Pb@#6tM:!!#lcDdR0c
<EWOC;GU/+@lm"f,tq'D;+il68PDT>3&s2g8j=CD,p4Ke:f1D!P@@!_?:?"P+Y"?L,W[>*.3U2j.k!GD
0G,NQ!"g+u(cs,g.k<)$?TA)s(^q'%!>-A!',hf3.PF7N/hJ+\+YRD1"98T1"Qocf!$`c_O_&-,:KLJI
6om>V3!BQh,!f?k0c;,d0e":`)''eX'*/"4"98Zo/O:@Tnt@Hu4VIhr!!*'"!Y,;9"9Jc2#6b\U#lk)1
rW!9,!"]D>#mgkF<t5'-"9SW)!<i?%$O$ei'+,'L!sK'r3l_6G!!WH,!WW4.li$i-p\j(Ns7Y[BMF:-.
SEU"6lL!fsjlYgkl0@F(Uc1%f4#U=Bru1FnlMpk@[?>fRFGcK\UnaoiZF%0O\@]2ga=GfB/L)<%9;(J'
gYL`:iH>t[+!*hJY,\:mUo1&l^r,uqcJ7=2hsCB(!s,P)kQ#/q!<<*obP(`,p?D+np\!V'iGC8*2Mp)X
cd^Xrcd'ndeCE-tj,YN5/28J?q![b-b00GC`0YFH;cR[aLl77XRA-IVWM?>bZb4DL*XiN-15ji0aN2WG
dU`t,&J@!gT9kUsO:RV@S#idX^:VV;c-G#.GQO33"9J`1"pB,M!'lln@V':U>$5ZP:K(q;3^G/d<GGH.
5"8+97mfR,5sn1.+<VpV0JdBM@q_:$DejcMAl23"5=7t*2_ZKn&-W+S0JY9p,rZJa+ugf+0Hho".jRG4
!#H^m%O;,k)BK4o&0<Sc7QN4N(CqNGA4$=u"U+u(!1Ns*&+uE.ATh$X8p=Z-6[Ls"#6Q)=Jiu%7-SHr$
-mKlW+sJcV!!!$$!XNCc=*OB4T7iV`66I*c',V`'%1!%:!<<*$#mpq<"UtA1$3L>=%g3.H#m;FVqu?j%
!!**%rW!?.$4S^&$O-\7";dmNg&UF=ci=7N!<<*<d/O%E&c(bckl:8=s->rD7>Bh%rS?f:rtG"dlLDVZ
1G_9P,b!0*[Ft0;s8)]o"7XjV[Jm-6Y-"h5\%KJl`m!,M4t%Qn3^]%pi8<8@f&)T.-6sm!Tr=`XS=lIK
pAb0VaNrVsgu\S(=9&E'!9sPs!<<*5^#&>TnaY>qf_=R`p3\GK1iUe4m)[cIo^q_Co]"?Oi2JOX-o2tb
Lr$BiaO86-md]c0mbbaWSWT"sS!f\:Uo:As[)'tf.0g)$/:?:"c,[cBc$U*4#n&2DR$!5ZNK'(b$eXgs
[D'f/cIMF?62^f`!Ls,p!X&Q,!<<*2>]k=3@VAkI>?,60;/ou"4Y904DHp"4<b>uVA6MGj6q'Ef+!E0i
&2H48>\o7aAm]7pCh$=>7634W-6X<I*?>bC0I78X6R"!,4=N'B+tG;r+Z^tO/M8Fd-k6.f&c_n?3GN"i
1+a^h&0abM/cZ+[o`1N_)M$A6B:N4*>Xr6g5Ft%@#6Z#ON*S7u7q-%M3e'LM,pk,Z!WW3&!<<H=*^+N+
olXtsX++hM1)pf3#6Y)/!<N<&"pkD5"rRFA!!33/'*S[N#QkhFqu?^#q>^pCe;GLY#mCD4"tidXf)WMb
rrN*!!<T8"rt4]!s6JhIrT=-_:J=&rec5[Aq>V8tkjctl4=)<j)kQ?Nai<oObfRrP`6Q4]\?N-=XKJe3
Z+.BX_nsF@d`=s#+>#O,n`&?Ygt:>N-715m/XrW1S!]b5[/^0ub0%u\h;S5,cT2%,^&ZX_;#upEk4d'_
pYFEko%3W$3AiHt_=m-Po]Yc7oC_,5g",)l3%>gd#o&BS`OE>9qRsGJ]rS]ITpV15QC+24SYDs\Z*C[T
`4%Q1%2pF1kL7No`lH'>M&Hg1%3::jNJ<%CL84P9jg_e3a3N0"kI;o=!<*"s!;6Em!riB$!,H4gCi55G
AmA>K<)%7C3BJfYAS5aYCLgseAmo7_8O>j9,U4'C*""Yi:0Lq4CI^ic;bfP*1bU=.-R9cU+=8B>-S6VX
,=X(+,qU>p0cql"/gN;&#V._^$n)Sq$OHe5**#Zt1GC4&*?#,979CT2"pC%g#>r^dNUXT#=W9ei8N)?$
#R:GF??E;EG,U13B2uBc0-Vni!Wi6"'+H';5XoR7+s/!e-l3'q#R(A7"9&?."9\].#Qt/2*Wu?@#R:tG
#Rq+D&-Vn2!!N0!"p-M5,7Fn`rWE96-p6_oVuR#+!<@')rVZNl(\[XbIXQWif`17's6Jn6k1SGfs6B=.
7nm&G2Ea7!p>G>hh#H!beB-+_a2Ga,\[JiQ\@&l[^;S7Fg>BtR(aUU]@H?;)g"4g'_DN;W,s[KbS!B8*
QJBoY\A628gsk`]iMQtbciCr`5Qq/g=j?R*p\=IFhX(%'maP`T@U[CQbKB/(f@e]n`UEEOke8Z5/h&5&
PO$ENaj'_+f#>/6]t1JMXJVbdUSBQ;Uo:N(]#DtF]1!>R*>MH'd*KVH_niN+%LWh"HB<o5J;&Ts^knql
\&6A+hW)nC"9&<#!P&3e!*]U-!(<)f@r>puC3!ih86'M+?sHHHD4Ho%;*[</7SIQ/5"&'k4XML;+Z;\^
69@b?+Wi$k4<FP2%LWOF#7_[l+s[.60ejk$7P"u\(*j_H)(IBo-S-nN&/uH*%2&dI"Tn`/4#@Nj+XS]m
.5!89:&k\-rVus""eYkh!&PD\N,a\sR_d4F:H)4$-SR+pIu3plC-Ea^*@*.mB-/TP!X\r/!s&fZ0I@Mb
6j*Ys&JYBC!"/i0!sAT,$Om4E+9qcE#QY56#Rq+F#mg2($l0<Q!s8]5$O7+O)'o+[PlMF!!!#Ris8;ic
q#CBjqtC!>=@!""C!Q_X>2JB6n+ZG2mJlSIgc&eM4$5X!r8d;'k5Nrmg<R<u]#__']"5G`]=Pbpb/q`B
\tO77*ZHOT@-Qb.gXas*b<6[r=+[!7Q]mSsQLVhi\\lV;f@f]JoQgKCirH:`/HPnP2s^82n`/s1r9j%?
n\ILE:/\[gn_(n.khkU`b1lODkJ8<68M)ACORg^bi6KjFak=nMVMD7^YHFk(Vl-JkXKoIK[BcisAi1;;
+:h<)e]PkH_ni`8&Kj8NMiNO@I"?t.Y*Grl]>)A-jN6Xqr;Zj"!R(Pe!':5^!%E;6@p`PLB51CA79!hR
/P&?OE,9c';+*N58l&;r4@)pd8jt6k+Z;_Z3B'E#,p>$@8L=lT!s8H%#m:YM*[)[h91LTb,q(&T#o"R"
.i9Tj0In_1!!!W].gc7V"U>#;7PPht(EXqT0K^mQ2?46nrVus"#I=Ej!&OerQZd%NB6A)d5VGf;#6PYT
H,#`r8NSCC-8dSEB,r9X!##qG!s&fZ.N/sK3!BKs0d$Vo!"&`.!s98`*s_uQ!rW*)!=Ju5&.AjO$iU,,
":"`'!WXeYrW*6*"UYYZ#q-4F!!*-%r;^f)li6k^s7lNes8V`kN`&8/L?H_Zs5N\Gp?Lr,s6p!(6n!dq
4$]\>n*ST`ptj&X>=13/c,%65_o'L4^UL(pAP,!0&goe;65C_fki1OVf@&$`Q_:[fVOs9>NfoNpjfPVp
`R<o$jo=`*1BIX\pAgfcrrN&u(5'd/p@\.Fp?qVIkj`[T0eRFt](kd@<orT/e^i4Bi:3]q'lHMl17.^k
gV1nka0L7[.N`uCW2Q\tXg,"*SrIee1++.U*%3[!%glh$e'5tM^:^S$OI;AtOc"^:H[UXqR@:+b_qE)Z
o\Rk@rW!!#!Wh0YlN#629E>+p!WZDjC0YUg?WU'!:ebS$2_-.IBiJnf;*[?085`8o3CZUh*GJ&*,;_JL
5t#'h9ftO&0H`SS69[Ff2)dKV3Ar?>-6*!c)F+m73tiqg,8DRd2(U78(E5e0+T;?S"qCVR:+-ki$l('C
5@,s%#6PPIrVus"#I"3i!(&U:L1m3)B3Rhd1-Tt4#Qk)MGVsl*3?o^k/3c0s)CH^1!(.A%!=Bkq,9Ks#
/e\g)!rru](_dPj$k3^Z%h&UG!rW*3":>>5!!EN/"r%RR#Rg_7)A`JP!!33Y"UP20!!*?7*_QqWNW9(\
!!3.=lMUZqqt^3jqu<0g>>p.@h>dNAnFl_Kk4Sc?pom7/@=^F,XSMAUeD^&IK2+Nl1kNff`Q,a(X-S?O
;`lTV.3'0F/3Pa((67hAgY1?0d`K>F\>Z6pR?EYoP,.*?YIW!Ws68;<pqddJ#kJ%d!#\n]rVu`dp[mnD
p@%^/6pa%Mg<B6Wg>M/\)rB!)mb6lh/.P<b.lNsii8;5ihRRJb+=&%GY5YL`W1]9&BN%)L+;>V,&eZ!.
+qFs'iRGrf_nNpoYdpHiP`CQOI!pL)c^UN)_"%$IanY2+%KHS2!!32V!4r4j!WrK(8""((De!B^<DZRh
AQCiY4&BZf>B3M'5!MS3:h;d[9I^iRAMk\n5!D8'>@CGX+#Z/166oT.:esPM5Vjo.&.9-g*=E5q2b5_=
'/M*S,rdh;.P`7k3%PdC!##J=!$b5f)&=)E><4oO5s52L&dnU<!<EAA!7Ci_(\WQ.O`5;H:dR3.E\@e0
#pagR=d2#I+XA]r6\la<+p%`[3<K<n+sA6X9P$!_!<E6&(,dZn.39KE$O-Y,!!`T,!!!?6!sJrC&dnsQ
"9T,=q>^R!1BmaY"qaiQ(e>qdT)e6Y!YrWMr;S_PrV#^[csp3\B%[.Ps8VQbq"X1Ts7+ER;GJTK9MiOu
o^(r3s3k(96U3>+RYYo`6oQ_M/Li@N.OH5T,:Y#\)._I[jPJVAe'Q@_]sk/DT9tk/Q^4uJVmbmfg>pfL
m01[/!!3<*NrT@nWS@=EqXlf8kiq$_s2\/'3^^CEg@b*pmd98mn*f,:82E"<8N/r8lK$UNhY+]L-n-`!
</Z!28N/.D*Zc="*\AKJ%M]s%&eRs[dFHO``501&\u;EqQAUBHKSPAYka/'qlGLo_f\sM/!!<?)r;Zfu
nGo?b+V&gIC2I]f@Us.Z;d!'Y;cHS&81JCX6UEk!4]?-#D+-6A4WdEM*E5Wg69[D=>rP,C4rGG)0I\1e
*?H=I+!N-`.4QSb,:+EN%21u\,U,$'2CfC]+;>4p&eGBK!#$DJ+sT3>6UsI*1i4lG!!*3+!WpjO^&U-D
g3nTr>\nP/?Ue'X$kEd[;BH9r81,](+rs%3<b;pI"oo>?!AQSL,Tdn28I5M&"TST8#R(;2rW)Kh$QBQ\
"V21V#QXu/!Vl^(!^6\g)_<$X*#o]1#-n6`!!<6%OQucD:]:.iq#BZ(>?P7Gs763il1=B9o'l)I\RAuM
-9Fh'fC\\&mbe',E'6NU4@r483&!*@1,:R;1bC4/-RCMs-la@*\)ZE.gtgQ1ccsD=]bmuJR?s5-S!LA[
Wn7:4b2V@Djh`5B!!E=l!;$7NGK]jZq"aUNkO7[3k@m=I5,.W+q=iS+ip#Xab2AdV76MG82+YXGj4i;2
nC1Jd.4m8@5rgVF,lJi?*[2aK+<)7D*#o_54e9mEf?DIW_7[IeUT'iHKn=o1MMS&)RDe^EZd-kKf!?@t
!X&E%!WW6%P5kbjSSr:Z<rQP2>Ye?u4^UlY86f7WBkU%+5XIt;MJcrh7n+XR/gOLg2b$;%A6VJ`844jL
)&*Vt)]^4P,U4Za-7C,^-QEj,$6i&11++>#2`<9))BU"5$Om^Y!<<*D>U;4"3B0>h4>^ab!!*!%!!;9_
WrOP+pPaQV>A.nn>XD"S&.oB]4ujNtBJ1q_-o"!Va%ZsR$ig>3"$\IV$S!_JO&?\p"9ei.!W2rt!WN0"
!W;uu!W<!.![&d"#R(VK&./F=!s8T#!"/m.":m%"%j)`1&mW?Ta8c;F!&<j:s#U/ZrVrHk>ZR-ip#lAL
mI0?!`.gDs/LMVo84JU1mec;>fDk?+5<UVX?\(O'3BK,V1Gq!C0.\b!-7`+_=c^,ThqR)Ck2>%GdE]qJ
]$01#c(UQ"VQ9asnArT's8C^PErZ1B!<TD(i;d1.gu%nuqYBsUlh9uNP=nG2GPC:Ilg!Kjh9`<@/JB0D
&KitjFlV9CeD/%=b^1cb*@FWr0.&%q,U"?W-6jWU*toV^1Iuefe]GkVak"h\_S<anVP^lMfXHfmOHg<D
q=<IOYfQM.c1bWH!!<&urrJJerW%!G!$-9-D/<m'CLLCN9NFSA8Ocir>&S@f=]JR.@6kSA+s.jU1+#=i
6TRk=6tV0R/j:sB6=r,10f:^?.k<(n+<)=2$n)W&3(d4M7m&=R0JkX>+X\Z]-SRVB+:nbX,\CRP.k*5W
6T@Y+!!!-*#6b2)!1*["T$r@_DN&[O<_#5D)%.&d1MU'B[g$SI:JjkY(&S%F!<iQ?;C3896Qfe'/HQ"T
!YIKsr;ultqu@N9!!!KQ838+7#mq+P%giCC"Tnr<)\E/N!"/m=KHg^+%RVTX.Mp\:lN#*."9J`1U[%jY
!;?<i3O)t$>'[ZmZ/EI0Xf.D3;)0^U.md!/8u_OVrTin.na4n/.N]ZSIqLPu2`WlT1+jt)-7_&UUnb7,
f%ouule1@YiS<&4cG[ZgrVmS3Q_U@Ps8UEcd-:Smd/H91!<N<*WrV5]@K?Ulb4tc-e*lksnG3*^;c#he
VQ$!.XJ_GMIV(_f+=&'_3^5ZgkMts[g<8X%^-EJH&fY7P+X\Qb.4?Gd+!)CC-UE`NS]/e7p"7:6da?1U
^V6tWh":71oTOlhPEG1h#eRFUf(R_3pG2OErrJAbEsDpNA=IOTCk$50@8]j*9fGd>:g77=EF`6N:I@Do
(F:FT3^>VL;--+G9iFMPPA<'(*ul,<>Ve;p1,(+$+;>Fs%hg0d8k;`L9kI![0.ek71+jas.lUI1?stJu
%KI_bAiD:l106Cm6mD[5"pYG<!qlV_!#J6#N/*&FUM+1)4AR:3(_IlQ6rAV43\(sn(DHrO!!*''#mgY^
;CEA>67"GYBF+P:!]q;$r<!!"qZ%H8/0>of.Qh8s((CW]%h/jK"U>ht3`Ar\rW!<.WkT&M#S9!3&1R_1
!4W"3":>-BlMCN0rr<#EBk(@bK61=RHZ*Y,<`2do:eFG]:e4m5nFunQjm:q*s+;1)*Z,SaGX">Q3]8W?
/hTOqEKRR,s4lc/rr44qkhY1Qf[7d`n,NFIn,KM\TW#X*s2`R=iTSeN]+Y/G!<</7!7Cj*!WZ-Aq"XUJ
o_In@s8Tu@:e"T*?:AjD>ZFKd4Zkkj4?c%p3(U@6kj@9UgX5cdBbLmg&N!_j.hjH\,:=ou7pC5*mI83H
jn.p2`7`BSd*0PG\@:8co$?.\Q%k3^Xlo5]]>`%I`6k[uq#LEqVuZ5cCC(IN6C`18DJ!a"CKFG<<]NrO
=&DFK=@t\70e"h84$c5$8j=m[>Z4!N:JsYIAoC0H'cI`UD*'^1.O5iB%h&pi00iHT?;<sX>%q#"1+b17
0.\A$4^:N76"M\l(CrK:AMGec,UtH32$"$erW`K1"Tj_b";:I#KT.FkP&>G>6VfiS)&"5A(CMo;%h&^H
"pbMC$OdOQ"9q1_-l>'/.N`2o)uTa@#VZA`!WiE#!%@pS'J6"e0dnP>S3n#'$OmOR#m:PV8gP&pFpJ-L
!"QD\$47"B#n%a^joD4X"Tnf/!2&QOrtG<h>uP!8L0J_1='Sp2=&r=#:f/H9:Kt1"p\=d^p%nCFiP]4m
6UDnq?8FuJCPJFle`Z>fkh>G's!76`kl9r'iT&YBcIr6W]sFs1i24'Hs6df)lc7W5hq$=2!!EE'!mq"^
!':8_LWfVlq"sdGlLt2LI7lam88(4g90Ya15s@=i4[MP'4A)+(kNMEujm)6ed^2n-2),n49IDhk?$7f[
XNK)KhUTKpiUl^!\^fusb0e\[`4O(`c`3\0h9D(VdJ)G!p=?Uhbg+;O0)#>G!P8?d!($ts!rur(F_kVu
DJW`h=CP,t8Q]&<:LI*i7RTX98l&)I6Tm.R>$ali5t4C45!;5,,8qgT'0/&g*$-Oc5"e[=8,c'm9P%X<
76XFV6od(Y/hSh;=?n/I)]M(3.5X1W6T\O<-QX6R2Fd`K$OZk>!!Jelnc0V&pRHkRArqOU?rM+o&e,Nj
7h6m^$kEgW%1E[E%7^d1"Z]pN-m(*!-QsKS-j'GN!WWN8!!**'$PF[@,VCi)-Sr5/6Rrp0T-b9b%gr^P
'0mQ@!WjVl"Ul=p-4r`j"Tnl2&LR8QOoPXd!s&C6lMLS]qYpM$SR>f*/5],V?XI#A>$4s0<)Zdp;240&
q>:3gq"ag[jmg!/<`V+eK63-R_q*f.mHj'!j5\tqs6\Fojo>25jPAVDc0YJF^;.8YkKWc$m)-I8l,h]6
h;"k9!sJf+!os?^!#GY9;9SY1q>9jOjRE$>N(uu.*]Z#O77I2B%6ls94[hq/5B5'-lg=1,lfma+le(F#
A4As::2jWgRC(,egZRGEeBlL]nFP8Ga3j/:bL+SXa1C$sXK8S%q:3(?p"cjNp=6Xnair(s&,-&(!R:\d
!(@/!!<>?RFDl#&DKfSs?"I2-;c>>B6sNVb8Ol?F:/XYL5rC2\@9,of6UjO25<V/(;E-'W(H+]@6:t'N
9hIl63]oMk$:8<.6p<q-@n/[Ar[f$A5uBKg,9BoT4\&g70/6]r,TR^I5!8lO$OZk>!!KJ*hZ+B&p9]m8
A<3="@:FI?&f2#Y$O7Xb')iCA%fHhi%gW=T>td1++Y5;l+Wqag/I_ge!"'SP(*G1c1bp^#)&aD8*aqA^
(*4p!1Dpo8rX'#X3t);r"$n7K1/APi#RO!C"9S`0)\S)0rW!-(!WrQ*R-OPJ@K$5UC0lL$>Z+@&?XR,D
>$>'0<E=LXq"OF[q>:0ep\FRTn`]5pdE_dljltmgkNV-ilL!j"l0R3^jQPj[s8Ud/hr*/6lMobV_T2]V
m`E)T`lJ,=g"5$8br5V*!s&Gq!13a$!WrFSbPq8&qs<nFnG:"'8n^pg3B0o*84l?@6U="*84R<cio]7i
lg=6-kj.Tuk1SP4]=@b6e_8[.gu$l>h;6i9f@\-`c-k.]p@62IcI'_Heaq%eYdX8thR9Db['T;I`l-*G
^F[n8lN#*.8-T;#!ruf$FDkc+GAq;&BkogrBi.Sf3'onq4?Yko6p!"N4'>oi9h@cB7mfU05X.Y1<FT]I
C26X<69R:b2)6U51,_-T4?b)W5sIS?AOAL2.OQrAAj@pj,?IW)2'<ba/P\8U)\abm%g!"B#6t//X8q2Z
'h%hhVn.)DLid-QC_%%>(_[/[%M''K$q1U7$O-bG3+5E?2_$=.-RL,a+tGNC>@g*>F?;6&*#KA(&IJsZ
'Gqf+)''hA)G>8r'ak<P$S5R(#6P)e1a3A2!<i`_"Vh:E!XL$,!!rW.!<rO$lMpnYqu7H0QthP"D/<ru
?tEhV?XI5ND2Z@-p%JCb7/d,[p%@tMlL"H5h:Vc-hX0UikNqKsmc`p%lKRR#kjdrqpAa1/in`>=ec5Qd
`l[#]^q.M2cHlOKgXk6BSdPZ(!<M]jS,aE/!<iHhb3SlSq==4Ro(VU(;fc5F;,U+\:esh[8ju<H?$*1-
i8j@rnal;9jlbglh;7SQaMRT>bMV()fA><8i7Zc<f%&=)dbi[$kNU@8d`fkO_"@'#[CFDmXf&S@]Y!^Y
ai;WYM?hQ0\,[fV"T\`+1S&c3Ir9:EC1:je:H2NM7mT:"1c$pC0K1sJ2F^qY<W5T!9LqZA77Ka86V16_
@5q5$<(')83&ruY2DR$E3'9Ag4ZYYb5Y,BT4"hs.1IkbA/0H,g/1`+h)]pCr2(TUY/iitE#R(=B!6tQX
#PZ3;hiFF`GAD,?-4D[K((q,erWtCe#7:hG$Q;9=8iAOd2_cm5.k`P.-8A4u=ZCUq+t"?H(`=/)&ePco
)]]q?(E=841nZ64(^pTP%O4h/#6P&8#mUS7!<NEN&IAL?%1ep.mJmIm!<W<&!.!l(rt>>2s5`8<io&>6
daHh,kk"NIq>UC#qu?9cr:fdOmdL&Q1\^2$o(2A7jlP^fj65gooBkl6ki^\"o\89\g!\.Fs3Am5b0A)S
bg4l8p!D4BkI26-$&S]f!<E6%!<?QO"S_olnbE+V8+H9@p?U/Tld!hl]YD8$d*pq2ki1sunEf`2n*fJt
iSWScq<.>9o&eNVhr*DBcd:4icdg_$inN2Gf%.k2ilBEmahP=Wp&2K3]XYYg^rGX#\\cPCV\J1lU]:Dr
!r`0>:7HBDDf'*!Bk^sl@;'IjBPD!c?s[,F@:Eh^@g64:9M\JT;Z90N9iFna9kJ$PDd-gD5s@Ot4$H&$
6UF+(5Wh"\-m^6'7;#CY-lsKh9O2*]-la3R.4H&@(+V<t-PI+0!!akTp](9qec<8],9QW_O-GiAB5)'g
K55kMDf:,7>Z"*b9ibY<HZ*+T2D[9F48q#I5"7n%3IYPQTMT#N+s/$Q*%DsR-6scX+!DUA&.&UJ)^9Gh
(C('G%jkFZ$O-V4"U524!<NZH$O-Y6!Nc@V!!iZ-"98H&,5(I"rrD6\rrW)trVZ[!r;ZB^s82fq0E1_G
rV>pOl1b5/p%@8)lLjQ8n)rj#p%7b=iofUmlgsQ.kL]b-f@f$6hu!H;`=pYHda-%`c0#'+kL8,@k@Xbr
#6C+jp&GF$!<W<&!#aqIlhp\S=RbnYfBDi%hV%_pqY0[Uq=!e,ipGpso'u;<o'u#%iS*Yn`TcR/ce%72
hqHN+fAkiIf?Vjsg"PQFf[Ib1jMo9daj02Ff<W3._7mLt^Y/>Te\/uJgKO:NOoQ!o!<W<&!#Bd=CN!a!
Ch%9dCLq6dC3"*5HtQf"@q&nU?=dGC;Fa8Y9M7rM85<,]:JYCi<)uR^6pX"&6:""19M8#L7706u0.\7p
6V(oe4t@p*3)X3N.OlS]+<VpE*&gMD/h84u!WWNM"o&&t!pK]^!$eB,`0+k[G\(]2CN*CdR=3N:EbKQ2
C2.HpEEl.&0J#@G3B0,[2*XW!4%*0t9N!>i-7'`[,p4Hc3&`]H,pOHI%1NOK,:.+i(^U?L'gu1I"pY53
!WrQ+"VW-k$4$eB^Au=T#m(),!<N6$2tQJ8rrDumrsSc)rUp!`s8DlqrVHNk)Z'I3rVZ]op%dABs7Z0R
n*ouCpZgf=s8DT]rr2uZ$LI-Ek3(mXeGoR>rVmVrd+6gue^rX*c1pGSe_&U3h/<8q"fD@\!!!'!!$2.@
!%Z[Jo'Z;IpZLi0mIfo>q=="CnE9*+o^_SGo)8%YmdgAI2"pS+mE55#lg<`iiT97df?WmWmGm-mp%$G_
h:^E4eA/fYo\oN=p%6kO`l,^0_T]p4o@sYl^;\.9b?P#I!fR-W!$MCG"9JQHLllUkE-?ABDJWrt?!qGT
>AIMJ<`2pn:K(%`r_Z$Z;cH^i9h\2S7p]Rj4uP\p5!D;(;d3I'92o&.C.q,`3AN3J;GUq786K%i9/e7E
/1i@m%gib#3&WN8*%auE!!W_u!0[Bo!T`^ZY`,'@NJiC4DdQphAd_t=@p)Z"8O,O.5X,095XS%89KP9s
4$P)j;CNb+,q'o[-7q>b>XLJC;J:G3/L22F$lCcQ\5k=N6SL,."p>5=#Qk,/!>64]$j-S=2@Iq5lN#!+
#6=l+"9>.[rV-<sqtT[Es8Vfirr2utrVn,>s82cjoDS^dp\NG=s7u?^qXjCQp$),KkL\,?ht6s5iTBG0
l070Tq<\([)"-G=fA#'5f\>'3ebR;2l.akOasmAl!s5;!huI$d!057_o(MhOp\".Kp%@e>i7@;ikjJ0=
p%%hNp@e"JnFGu0oCVM<m_nYkn*99)jlGXdf&H5J`4aC;iU>@BeD&^3d(JSbiqN*>hUBWdb/hT@a2c<B
m^TdXaToi:[N>JL!<S,YrW$U6"p+c)?_2L^F`_SDFED5/AQW)>=DD\T=]\U%;cd+'=&N$r<)HOf9i"P]
8lSq^6psL44?Yu"<GPK%6;LBRBhCo^3]8]O:K!Eh?Xm%o1GC't-n-Vf(DnSf4ubGO.lC'5!!NT1mJrLP
$pj[=Umma4R$j:cDef8R!_fSF93,4p8jc*@9M.oJ8OuEB7m/q!6pi@r7kQ;A/h7tb,q;QA4<kh&1I-dN
.3TTE&/6]bo!qS!3uAM<"9\o6#Qt21#:C8t'F>$Y.aA%%!!iT,!s&B%T]u=Frr`&rs82`os82cp%K#qs
s7Z<ao@O$<p@S"moCMhWpY>fAh"L@,kPtS;kMkC[nG3(`)r09#gtgcBhV?o@g"P-2p[QAls5qtb3!09j
!k/0Y!!!'!!)*Cp!!!(Zb1uR^q!7VGlM(,Lp\FIEj7i!8p%J+PmHsTAp%@_;mI]`4m,uC`mHs*&jPoOp
kfEDVa62I8eFiLUe'?4di9U$hoZ>5m`6$6Hc-FVUaN)9?`TlTrg@Nk6_C5Hc!h02U!,)H;"9SW(CS#lp
FEVSBF_ko'AS>Ue?u9R_>$+j2=B/@'?!(3/<`W3p:fC7e@8TWf7Rop97RKRR<),tR8Od&r7n6!54#fZ@
DI>dq2)I$>.N0$G+t"]`,X4go6<lK7:_<[3%L2uc!*oS*ptDg=T"L/P[=i()Dej9)`G]3i;bC%j:f(;#
<`r6r;bK>B91LX@7QNC]0J=h(-m2kg0JkF9.8a7q.jZ2R)(K.?<$*%j%h/jO!s/T."pG,4+u:Yo9,AL%
huKJOrW*3)!!#R]lgk#S!;63g!9X+W!;ccpqu7`-q"ORVp"TNHo(;VLp\=U\f)Pd<m-=')s8V$Eo)8Ld
)!o`,hr*;Di8NJHgY1B6ci<t!kl:/@L'%>X!!C@D^]4?8quAYV!!"t-b0oqVp[[A=l1auJo(CDqp%%hO
q"+7Kn+,r6p%\7@m-O-)lH8nnjll$okj%O#_XI.Fg=k07fCSXYgYq\rp\+.Iftb_TccXDVdE]hSa2Q$1
q=Dh]oA\PDr;ZfuY5m2T.0BYU"98EVNL5WIFEVG0D.m`uCh7?gCMmK_=BAR0=BKBSB5D3a<)ZTl;CG:G
=&)I\8k29;77(*g;b'5F7:o[l8OuBM<`rR=9KkNt1b^=+*#0Y0,pal`,#q?86:sL>2#m^c$3udqm/Toc
kk42BS""tJJ[ou>Hu4"1Z]A^)=AMn(=BL`SV1WGf91qZD8P([@;*R6'3&2p2.NM>s67jN8-uDL%0JPFG
3^QVe2&@#C&.JjL"9J`*"UP;63B]DI/L3Ieo)O^L#m154!)WCSq=aj_rrDWers%iis5rS0i;W`mq=sdW
r8@)Elh0Z8p\=RZptbuMp$hD*r;Ru;n`/K]s7G"%inW>GiS`PIgtgiAgu/+Yd/ENS"9J`3"p3T\XT/A'
!W)j,!WY@9bM:\@kj\9<lhL2QpCQ6Io_%qPo@rs2eCE-qoAo]um-<s!nBTq`h!3eTkj.O!lcA_kjl#"=
p%A%Pna,5^bfKJ;aNi5WbKeM_cMblkaNi3*`PD',=oA=$!Wg.<`;i4+"U,/8"TUK8Rt-99D/X3-Bl%?s
Bl.<qAn#:V@9mei>?b*-?#+.U<``:&;c[a6;H-Ib7RKU69k%a(5X.D>@:(9d:e*i:5=]*P4ZG8M/LVbc
*@N<_*Z,_=5Wq5&;_8"P$P3jPVZ>BM<X@^YguFmAWI'N+H#.nRJSMT5C2.-i>`k.H;as)`^MHqJ<_ZRU
9SZ#-83]'d-S$o(@:Lo7+rO6V:J3i+-64'Q;)/q&&desM"U,#6#6b54!sTqc!u3gg#)3-R!<*!*!rrRq
lMpPWqY9md!:'L^8cIlPs6K.ClJV^Bo_A4Srp8MAm.9W4p\=IVo]6&PoC256n*B/tiSreTiSFP(gYq/E
jPJeQg"bH;gtLW@g!&1K[NtnV"p4tr!0@0i",>"df(ReKqY8h<rVK:bpY#!3o_81MdIm1bh;Hu2nb2,2
lfdrpbj!pGh;%/Wk31mQo]Y>nhqQu@e'ZFccHsnZo\dj;d)XY\d*]qVb/DBEd*U%PcL[bKqZ$Tsec>"9
`rJL/"pYA=":/A*I>E/uJ8K1JC2%EsDI[HsAn,F]?Z0[d?X$W8Ci*9W=]JO&;J&p0<DuX^6psO;?"?Af
4?Ghq6UX:.+[.tO7:\hM3ArHB.O?Dj/h\[p$k!Xe-U:^0$igVE%1E<6!8@KU5PN"UVqp3bN73#pH?Y3Z
Xa5#(DeiR7F^8BW:Ipq)<*36u=%56Y8l85L4>8360J6;&/0Q&S,UFZ\+WhX?*$ei@(`!bl%1!.B#R_"G
!s&E(!sTcI.tRco!!6iulMLS]r;?Qprql]qkPY>flMpnXqtopOr71i6q#;',m.9`:n*TE(lK[Qpk2P7t
r6j9crr3YqfA5$1hqlu?g",<cTF:u-!s8Si!0I6k:WglFo(MSJnCmF-qt9_Vmcj9>p\FO3nb;YKp=\p0
kjIm!hXJGUb4P/ko_/+Rp@I\*jPo4Wh:^B4g""U&d`_.K^W51'n*erLbeqBAb/V`ObMVZH$NL5+!!!&J
!42_-!WiN("Y0WS8=l>tDfB]:EdDP?C27ZtCM.BoCMmO"D.mKn=DMJM=]n^'=&<.d@q?0X?X?c6>\?o(
697%e4?c+24sE$H3'h%D2E3`c?!T3;0f(X>*XiDe)(K)o!!NiB$jQb4!k86N!(7RspW/V^XHoa9VN?=Y
L3C7UH?"@f>b?IfCiiIDBi\D@91W&<@.S,Q@9-#c5=fTX/LVPT*$$+F+!2L?'bqd>/.WC+)^KNM&IJsW
%grL@!<N<0YUl"=iW'&jUZh:ArrDBarri9"nb;YSrrD$Trrr2mn+l86qYr,>hWFIunaPr5lKd]tk2ka^
s8V'Bs6o[]qUF<Wf\5!9hq?]Yi'm\P!XA]+rW%NMr;^.0MojHBp?VJIl0Ij.q"XU+pA"CLp>=uYp%J((
iV3'?p\!h:i9\Y1oCMYJp\4CCb1,S3j5AbLg"P*1f%&?qp%$G]o\f!"m_[2k`5fdBd*'Z*e2RF0!!3-#
!<M9^T`>,q!W`3'(^'gHD4Z`3GA_SCCM7O&DJjB]F`M)(DI5qCLMCF5=)Mh_@piD><`E.jRr`=WAR8YL
91MH<3&`fX4?bnj3ArTK5%7t^4A.[r>s9ns2Dd'3)&=);4&mL*#S%LQ"98E'b5ejK0O";:Z)P=%O1i$%
WJQIjp7%@iEJ@q<kB1Z\7`9[cB4>"@;+am`p7#l0>#.de3@>gq-Q![<)]^"@*#K>"&fP+m(E>%G*KVBO
%h]B]"TAK*"s$&4VZ>*E$3:2/!.*npq#C?gqu6fsp&G'`q#:?`qYqr@nDjQKi8X(lmd'B7m.9uAn*K?'
lKmm)md/Zes8VZCh:DVug>1?hj7<6MjQlB-%fc_:$]b;Q!!rZ+@EQdGo%r!krq]7]o^(,dnBgauo^hAB
p\=@<p%\=Vq"FLQi6h>kaj&Jpgt:NEg#VGYiSN8>g"bH@iSV`'oD%=cbJWo4aiq]MiUQTgg?"5*!!<*!
rrMioMZ="a!X&]4!<?&i<h4kaH%U0RBl7a'CPR"FLN%BVEbfK.CKaeGAR](]BO+V><bcVT;+EuA7nZKC
3]AuU2`WfV3%lm4/3>pd<B`B(3FbH7.5!P@9ia8B:,r:S"r8*ar;Zg$h>j/J*$k=Ri3:biVLNoMKnb9A
d<k)OSX#VLH\-<F:h)@sA70M%>#.s`FI5?R.jl_q2)ls'(`4&*)&=#*%h/jS'c8Vd+qkb+B.FQ!$PXU5
3>X&-%_)MP!!WT3!"l*mlhUP`rpoX[n,31co_ne+qsEk<mIg8Mlg!$Vr:9:Iq=sOQna6#:rpKmTlQGN[
m-<s$iSE)Dgt:95s6/=omJZPNs5E@V56(li$3p[.!7q3-"98mlb0&`(i:$++p\!t6iq2+$oChkOiUlp>
q<d"qg>M;amG-C3ak>J(ip#^djP\eThu;R7hu;FKhqd8GcH=)Pb/_NAp!_1.h<`tYn]KR[0ED.UquH`u
MZEAL2?XEs!![//QZdRsF_bl6CMR["F^o0$DJa5uAo):!<E)su;c$@h;cm+*HsBWC77KgB9h%3$rAGfV
2)?d1*@O*12)dNT4@!@G2&e>@5=S^H<E9e6#n7mm#lO`'#OqeP!!lNup!_.0Z)sNENe<(:J>I(2ItiE'
A9)sACf!Vq8Oc0?7RU$99\EQ<2(L@84#nc3'`Jmf()7Pt$jd(D)\Wbs'b_?%<\"aa'.G+U5:T5\aoL`-
^]4T@!WrH'B("sXrrDW[ru(h9p@J=Ap&F=Kp[@kJp$qM=n*fZ0lKmj%#Nt72kNUmPmf*5!m+L4pkgJ;e
gZY:K!!3-%!!*.o!8@KU!<E6%!)LtblgO9/o(;PIpA"C0nb;nWq"jg]q"OUZq"=@QoCVA1ps/-cf&5`K
ki:g`hV@#Gh:p`?g=Y$,fA>E3_VY"Xp"mg5o$G"fo?Q?W(B=I9!!3-#!JLOI!*]O."Tn`tPali5Ci+01
DJsK3G)UH^CMI[%CMITrBkM!`>$4m+;,1@c95%='9L_B<6Ua@04$,Ja3&``P1,C9Z*]HYlAS4gu/gEMD
6:FU.69b\[!rrH*!s@cfN;s;$n+Y#>]sjf2UR4E=LR@@rP(A%1JpMNYCM[a"@pW;8:.INE-Teh-6TQeI
/1E(s-6+!E)Aj8+'+b`]!!X,a:M"&p(CLB`*?-1\'daU6!3H5$!WE-'!!JMMmJ$V\qXjdor;Zcpr:U'g
p"q;"p@%YDp\"4Ln*KN3mHa''lfdQnkN1gYm/R+_kMFt`s4,fThVQ%.!!NJ-!6>0=!C6\fIEKn+k3)=-
m.g2Hmb6q"q"aa^qYBs^q"OOOoC28>l14H2d-'KFj59(_k2>+Lhr!8Eg"G*1f$`.(fur.E&Fo)<bf\l7
^;\"7d^D%6!WnPcirB&[rWG.["_XEkE,]]9Dea0-EG9rLEGfW1Ch[[#C1Umb>?Y63<DHIf7m^ii:eO8F
6UF416p!Ik3]T1u2ARhD*&^Z%=\1V.0/-6a5<hD"5mmZ%"SVnJ!;HOP9)8"gc,QZT[Z$uDIbhi'MMR"=
GB@qHBkM'c?<gB(6:X0p+L+a+3%ZO--S$Yo*#on9)&F(f'G:`Q"VF"/;)]=%$P4d#)AsP>(t\hR!!NK*
:!r2$q#:?nrr;]l(&[t/o_n=Wjo>AMq"=.Lp%.\>n*fZClPf'Pki_$chs(1)h<*\Lf'`S+fBV75!Wr]6
"2OuA!"]545/>=tk25LmqY&e?n_X-@q#L9jq#U9brq-fkmIo]5jR:XioA8`niTB8IjPJSIhqd&Cg=Y!-
eC2dgf_3tAf?q[Wf^I_:hU#O.!!`W.V?"pBr;mZ:!&8_iIW]gPDf0N;FD?)AD/F0-rbENgARf%O>ZXp,
;cHRl9l"<784>p66UF..4$,Ja2?#KE1c$pH3':Lu+X/-e5Y>TE#UD&m0Eh^g"p0\_j8_dVM##fBe%DrD
RaROQeWP`EN.ue'FDbf*@pi\E:fBtX6:s(bA2lG!-n-Sn-RTlR)]BG,'bh8m&/5fu;%!L2"qMY-AeY@Y
-j])<JcGuV!ru*jl1Y&T"9/?#rq$-urquB\s8Vu\s8VWbp&=Y/o^_G=naGl2lg!]tkMbCVq>]:4jPAVR
p\NS-omdYT$Npjd!1a*%!Wi?bkfVHDkj.p4h<adio(W.Z"o@uhq=s[pp%J+NnE&m.q!H`$o\f&sroYKe
iniSQiSWJFf[eX'cHaSsp<;(9bfJ8qlGhQ?C^U4D!!Tk4\c=8_"U>)/07KLIH$4.BEHl54G]Ib@DJa0*
CM@?i=B\m0=&i7-AQ;WC>tmjYr]pcS5!M+f2E!Dm2?#EJ1Gq9X79:oY*$6k!7n5<l68/BE((UkF!71]n
"hFEf\AG_-Ut*#*etnCcN/2q/GA_,->[(E6<D?7pA5GRY>WF_nrZrR0+sJ!D(D[`"'+toi&fDQ;3sPol
":Q>+0b+mF#lF[S!:Bgm!<WT.!c[PkrTjJ=p[8(Ws8W#sq"44Mp@\.Oo'c&;n*TH,lKIHolf[7,p!M^_
rr;TNi8fM<!!`T.#R:Or!/U[[!<rQ,>M[F6hsC=;lMUJRp@e=Yq>0j]q"F^]$MF,WhXp1-p[@e>ro59f
k3(jdhr!JQhqd#=f%/@(e]mUA]#iOlnEABIctF6r"9JT)aoL`-]`:(p"U52;!<>f<Spkg+F_Y]0DJsZ<
DJa*(CMIHk?X-]:=''6?@V/hV9M7oF6pj1(4Zb_a2E!EM1c,e$2)$:1;c61T4#\u=.md<(%/p5/#88'a
RfLh96lVrte]4Pa_h=PMTUV1*LjFAhEGfDs?!1B2:PVtaCL:X73&3$7.3g&[*#oe3()7Ms&eYig#7`pb
,U+-A&I/Xb7i(h!JcPBB%KQS3!s/K'#&jG)pAb0cnc(<Bs7>m_kjdfsmdp)CoC2GHo^M8:nF#Z/lg!Zs
kj.3cs8V!FqZ#m=mH0BK!WrQ,rW<-$j8b)<#QXr+#$U*2f^qB-f(eq<qY'[YqYKs]q"FIWp[e+>k4.'_
eC313j5].Wk3(jbh;@/IhVHo<eCN4)c-#PF`7jPIg="p.FV+NP!<E8A!36)J!WrW3#m:8/"\+*8KQhTn
E,96.F`;A;CM[a#An,@Y='AX,CfabD=Y!?A91VN@6U*h!3]f;[2`3HL1GgpA)_Yf?=Aq[S,8)\)4q7Pr
!<<0.)$mAF]`:)0dJ2Y2V<",CJ<cUbQA'm9FE)22A7/JC:fNfS<DlOV2)m?E.k)\f*uc1;(`*o$'+kii
%0HuDI6e*)/0"lr&2OrV!8[\`!<E0$!sAT,D=m)erVllloD]U'irB&Gna$5Tq"4(HnacADnaQ/9lg4W<
'BJ-Brr;lqs4,TVs7qa'!!WZ0"7cGD!;-=Z!W`9'<mo.Cq<mqHfC8/$p\X[Vp%e=Up\"7Kch@.iinF(u
l/^^[i8`t[iSikPgYU`@gX=C*mIBB'mCpE]p[!8IqZ$Ttf`7?='ESFC"U+u3"on`sN1P]IE,KB@E,?b;
F)#T,C27Ee>Zb03<c)VS=^#9H9MJ&K779I*4$>\f48q/U3&WWJ3(ct[@S]E[;*ufA!!j/I#Qau+"Mb#9
!$rKEpu&BhXg-fb\;uo'Jp)9YDI?aQ>?F7CE)BV6='dsM0/4t,"t(N6+!)CArYH%]'G:rl.R'kC0-DE!
-jH.@b5hJA#Qk26!!Ic>l0A3H!;6!a"RPLTs7?3h$LdQRme->GmI0c;rp(0_kNV[>s7=nCj3crfs-"`/
!!3B-!<*%U!9*uI!WrT+"(KU!bPV/!o(UW.pA4LUq"aXWp\4@SgYD>ojS8E9o\JN^gu[b\h;@DQgY:E7
e^rsQmbbhPcG%m&p3RVV!!<&u!X&].mf8"@rrPq!"Tni1"U"f,=Hf>GF*2A=G(jdSCMmp&CM-gX?W^K2
<GQ,G@V07^:.[rG7701"5sIIn4#o8\3'0]&91</U5=8gr8J2"(!<NK;&.HqdPQ2:FmJ-CIW6DN6jG'+S
KmRo`E=ZA`?s-]'8sX!aA6t-s3]6mh(FU=F,pOHN*#TP/(*5"_2'GU=(aNFG*j#FM!"&`.!sJf-&V&a'
o^;_ZjSf)hrr<#hnFH;DnF,l8nEfQ/''nZGrr;lSh<+ajhuDet+TMQHrW3-'!s4qlcN"g`!!30$$=q?&
f'Mc"p#>W>q"FIWq=jRVp\sh7de3>-p[7V<i83GRj5AhRhVd,CgtU61n+>ne`mOG!d/2:8'EA+6!!3#u
!<`T,!J:CA!;lm:!sAc1!rrd1Jt@d@Dg#u;F)Pu7Chda!>[Lk;==mEQC0G@K=D(H)91hW<4$>qr4Zu"k
3BK]'7S--B@m34b=[s/+%g)e3"qhU\j8ac3&c_n[YP@5"_OZV0ToY:hH?XILra>_.,<T"M=E-W#Sj,1n
2Cp'm+"&9R+!;O>*%3Eh.46ZI)'DdN)nuC=!4;e7!<WH1!!>s)lK\3BoD][,qZ#pRnbM>=s6o:=m-aTA
na#B'lK8-H&a/B5ip,V)s2SUW!!EN/!!!(b!6tQQ!<rN*3hX[>g"H,hm/H_]p%7tQrq.f5oBu>/k2baR
iT&_Ff%JjAkhk(BfA"^Fo?u+.ce$P8ppO64!!!$$!!*3"!!!*"!.k4E!<3,t!<*$7!!NK1!!+`tSXb7Z
F)c#7D/<s$AnV*J-s'GK=%l=_;G^;+<)cR`6U=(/770I/6XNhX4Zkbn8nqR+*<?-R((:'@"9f/?!<V9]
JcI_0"a9Y7hV4<s[Z#c`G]mt>?sm;?;,'YB4Zl.m8%M2X2D6C'-nQkm-6j^24WYRZ(FCbV>:]fd!2BN&
!<`E,"9\])2j*e!lh(2]rVu]np&=Xjq=WMBs6K1FpAP",o]kT(s8V?Ll0nB<g7:k@!!!0*!!!&s!!!)&
!58Fp!<N6$!<W<%.t$U(b3o,jnFlVNoCM_Op@e"NmJ?/Am-<WNo(CVjhraP&naPVkeCX*Ze(<41l/fs@
"$Hni!<**!!<*%]!94(Z!r2gb!<r`8#mC;/*a<lXRrE7\Df0B,BP;!_@9Q]6;-?F_7oE;_CM-UD91MNI
9MS)G5t#6p6UWmJ1eLnL+ohTE&ISR=!sJQ&!XBMHpAfdFlMr_"W:oqkMS5p>HZsUTCLC^X;H61[2`NWa
8MZ!46U<Ra/M]=K0I@qiL0Z#N('54/7P"Vb!0.$e!WiH)"U"i+!&K#N!p]+?q#:Hls8;lmrrDHbrtY1q
iW&rLs8;Zkq"Og3LIi!V!!<?*ZiI'*,67fH!<`K*!!"3KZHC>7mIg2Em.0c:p#ku7mI^&Do()D@bPq&E
mblpFnak]0n*'9,l1MZ.3Xbld!!/Jf_uKrC!s/K+!r`0W+ARQ\S<@l1E,f]2D-UgVAQDl9@:EtdCMT,K
?t!#,7T*r)8kMQ94Yn]aB1F6L!!EQ5"9SQ&q>^KuM?)0,/KUAUp@"'$MjUN!EEm6S@o,p!>Zu;cDM.Lo
=&hUD/38)S1GgX)*#&o<?5it$!.k4I!<*!$!!EB+rW!*8?`Wngq<n7uo`+jZmd9H"s8VfmqXO7Xo"eu]
!!!*"!s&H(a8hM+rW*'#!s8E$#mEYRd`g80o(;T!oBu2<na>r?o_%nKo'l"jo'+r^f@\:;o]Pi6iTKdn
Y>lM<!<3)%!3lM.!<E0#!s/T(!$hk;EJBd3G]\(LDJj/t@p)uLCMIHtC0k\)?;sWo9M/#mA4oc17m]F/
3'ThD!!!63$O?k9OoW;u.Lfk!nDCOLSX+qkD.[B^>%r.pAT_`mP3#h:2E*EH0RI.f5;ji4.2ip8m/V_<
h>dib"98E//Tn2ClMgecp](9irr3c,qY0XGs8VKPp%.YLs82imjMe<T7Mbt'"p=r,!WiB'g&Q^)o`-HF
**JN:e)T]ceb8Rtp@J"?m,d<Xp@R+mjl5%^q""IQd]JgI/Hc%R!X-%6lN!sc-j0SO!!*m/D0:,TFE<.Q
Bk21&B3SSC<`NaK<E)st<`Ma[;G^J">tP,B')hk8!s8c7#mUQm!5JRZ)dIf^cG5b*L4+3&QuQA:<DZ(r
H:gV#91i#5.m66k5!9qfk5^)6i;a>g!X&Q)!!k)RA!G41lgsuQ!r_fWq#:frh62!"3u%_q"9\`-!n%(#
!;6C:"<Ka#H*c;LdI-YskOeE;nE/Bqp%J(SqYBdLlHG`(4XLO8!!<B*!Wfb1QiIj'"pY82!!=)q6"Y=c
R>lK:GA_M=AHlFE>@;AeB)ZQZD.?199/\:D%g!(H!!*-'"U>88TE)"m*X<6GJ"ZJu\?)mRU4[Ms>ZGI"
M/RT_GEnsa3["n7pAfdFc2[qI!<iN'!s&N,rW!];,=5.BF`MejVo-[!YaLDqGBdRe1CsEa"T\W-!sAc+
!<<8b!.k42!!33&!r`08"<'!X=C>TPJ!RCO\=A4qAn#7H2^f(3!!NB)!!<<(a8gno!Wr]8rWN?+"pOr*
'br/M7S#g49Nbk:B4"J+6pj9s,Td0g!!39*!WE6,!s&K.#mU^@!0R<m!X0>X'G_iM:g.'i-QNs;!YbqB
K`JX`!s&B(!WE3&!!2ut%gE:F%3[],;c?7E*"NGd!rDs)!W`9$!s8N(!!!)r!.k4"!!`N+!!33)!!2ut
%g<:I&Kiep77B9e(_$i\"8`'"!<<-!!ndR*!:^$m!<iZ/"U"`.!<E?$!<**/!X9;^,paZH"9eo/r;[?2
#6b54!!!$$!WrT2#mU^S!.k4E!!<9)!s4SbSH/Qgn,WFirrRcP_Z9Q7quZ`qrW;He!W`<'lMuM:df9LS
#6t>5nc/mr"W%sf%giL<!;m!%"9JYX!.k3&!:'WB!<*!"!!3'!JcNdjqZ4S7JcO@%!!N9)!<`K%!<*$!
"TJZ(#Q=f+!X8Q)rrDotdf=t"JcLB&JcLr6r;lQkJcNF`pB($g"9\l5#6j&dJcLB&JcLB&JcP]KrrIrV
W;u\po`+spr<;fnJcLB&T`>&nirJTLquQftr;l`pr;lTl!!<-#qZ$Ttm/R+edf@;d!!3'!rrN#t!!3'!
!!2utrrL[Nnc8Uho)SXgli?tbkQ(V`nc8[jmJu>KrrVlo!WiE(lN$qdli7.k#6k>6rW30)"9no(!;us"
"9SE""p"`/"p=u-nc/XkrW)s"qu?j&!WW9'li?qao`+sna8gelTE#6"#m12/!!*0'q#CI!#R0r&rVup"
q#LEqqu?a"!rW*%!s/N+"7cEl!qlWo!rDs#"9er3"8W!!!sSl(!!WH+!WW6)"T8<(!XSr/!<N#s!sAf0
!W)j#!rr?'"U5&5"pG,&!!30&"2k0D!<rT+":,50!!WW1!X&]1"TAH'"pk2.rW3'#r;Zm#!<N)urrN*!
pAb0prWiK.quH`ur<**%rWN0"!W`?(q>^Krmf3=jr;cfuq#CO%#R1J7r;cj!nGi[p!X&W,q#CX&"9JQ'
!<ri1"7-$R!!E?)%hB!@!!<B:&-_V)!WrQ,rW!!*',1*?!s/`2!W2p"!X&`5qu?j#$4@CIpAb:4(C1*@
!!WW>&cr+7!<*!!!Wi?%!W<#r!X8`,!!3cH$iU,2#ojKa%hB$Mr;ccs"9\c-!<W6#!sJl5#Q>#3#RLbB
qZ$a##R_1Np&G'ndK"k!UAt]("TeZ("9AT/"TSQ(r;[!%"U+l+"Sr9'"9S`,#RC>2"9\o5!sAE#!!;]k
!s8`1"9&E*"U5,5rWW9(!!E0&p](?r!Wr/trr_lnrrW-!"9J`,!!<-("U"o0#7CY*!!<<)!W`3"!!E3'
r<<]6"9o)5!!!-.$Od@H!n.,L!Vl`p!rN#u!o!_;!<3,u!!<6%!<`9#!!2Qh!!3#u"p>,5!!!**qu?]t
q>^KrqZ-QrquH`uklB<8+9W)`&.&aV&e#3Y"T\T'"pbA4!!s&="pPAB%LWF@!Wr?$rW**$!s/N&!r;os
"oA94!X&l@#R(G>$k<aQ"9f&:#71b8#lt/1qZ-Trqu?]urW)s"o`,$p#mpP1#6=u.!!39*!WE'#!XSr"
!<*#r!;lj#!s/T-!r`0("q2+W&J53-!.k33!!!0#!=&`3"pG&/!X&E%$3C;3!WWE0#6kA;rWWH.":>G6
"9eu7#6Y/2q#UBn$NU5-!<<*#!<`T1#6"l-#6+i*#6"c+"T8Q%!!E<&!<NAf!<3)u!!E?+!<<3##Q=i,
$4d+=o)JalqZ$^$"pP80#7Ue="pP/0!!E]@&.AjHe,]IKpAb0pklB04!WiE(qZ$X!"T8<#!qu]p!rN#u
!WE'(!<`T0!!!-+oDngkrW!$)"9\f*!<3*"!rN&;!%J*R#6tSD%M06^&/#<Q!!!'("9JW6%LNLK$4RFP
#6G&5"9\f0"Tnc+!<!#t!!WK+"U+r.!WE'%!sJu?#RC_D$kEdT"98W)$3(A1$iL&-"9er1rVup"r;Zfu
rW)s!o`,$p"pFi(!!3'!rW36'!!39/"7-!h!sAc)!rW0!!!WW<',;5r"nr"K!.k4K!!**%r;cg!#6Y;>
$4-k<"TAB(!W`?&!WE3$"T8N&":#)8"pP25!sAB#!!<'!!<WE&!=8f.!X&`8$4-k;rW)ou#m1;5"U,)7
"U"r,!r`<%"TAB+!<N9&!!!$#pAb6q!Wi9##6=l-"9nl,!<*'.!<WN6%06G0!!*-&o)Jmp#R:S=q?$Qp
"U5>C$3pX_!!<6&!!2fo!!E-!huN]Vq>^KtqZ$^#$Od4<!V69n!WiN.p]1<prrW&trrW0#rW<-$r;Zm#
"TnZ'!!3#u!W`B*rW*$"!r`6&#6b;0!s8]1#6au*!W`9%r<!0*"9er0qZ$TsfDkpU%Jg&8!<ETF&e"sG
!!!',&I&:>rW3N0!<N?*%hTHh&eboj%fQb:#R1A5rW<Q6#m^\<#6tSB"pG)3rW!'+$47(@r;cft('4L;
!WrT1!X&Q0%1WjT!WW</#Qt51rW!''"9\c,q>^a%"9\`*!!3<&#6P/3!<W6'rW*0)!sJl5!q61!!tYqP
$NpS7!<E0$!WiW.!!*3-#m^b;MZA>/kPu+s!<iZ5$O@%I$N^;1#R:J1!!!)t!!E<'!!*,t!<*!%!!*6,
!W<!#!<WH+qZ-Ts#6Y).!!36*!V?@(!<<?2"Tnc*!!39,#64`)!X&Q,"9JE#!<E3"!r`0$!X/W(!"T2:
#RUh<!<<0%!WW6%!!E3#!s/Q,"T8>u!sSf.!<E0$!WE0!!WE'!!W2rr!S.5P!<`N+"9\8r)$0j>!!3<,
!WiK."Tni-$4@.D!X/]0!X/]"!!!)q!#5SB"p"](!<`];%g`IE"U"r4!s8T-r;Zm"!s8,q!s&N-!r2g#
!WW3$"pG&*!"&]-!<<*$"9\l0!WE/s!!*-%qZ%K7!<WE,!WW3&!sAf3#6Or.":#/6!<E<,!nRD]!X\o.
"U,2>$k<[G!!<-'rWEE2%fu_4"9e](!WW<-qu@E7$47.E"UGA<!s8`1#71\A!!EQ6rX&]5"9SQ&!s8]3
!W2ou!Wi/u&-;qG'+P?U#RCkO'Gh,a"p=i++92HF!sJf0!WrN+!WrK-$3:,,$ks^'*>oY0&eP]e$jZb3
"pbJ>#6b/0rW!*&%hB-Y$l'3Z#mgkE%hK?e&ePW]#6G2E&.\sIqZ$TsT)aHClN$8O)Zg+pd`p:kd+-^r
\VWoi#Rpe8!WiQ+!<E9(!r`0C"9\]*!Wi]/!<E0#!Y#MC!!!$(!!<N/!!<3%!s/Q*"9e](#R:Y?#R(2/
!s8B#(BO^A!!3H4!s8Q(!rrT4!<E9)"9f&:#7gh8!!3?-!X&Q-"p"c,"p=i)$3phE"U##5#7:G5rW!c9
!!!'&"9\o4#m(),"UGG@"p>,7#7(M8qZ$g$!!!**!Wi,t!!1UM")59N\Hfg__8!FWFu&Ic!<r\u!!**(
r;Zs%!WW6%o`,-r!!E9'"7uQp!<<At!!E<'!!!&t!!*-%rW!!$#6jl&#ljr,!s])@!!!)b!!NB*!<rT-
q#CKt"U>([!!ETC2BDnq!#-CW#QbGI&IedB!!WZ:#m:5.";)Fa%0m"9$474O#64c."9S]/#7C\;#5nN_
$4m[W#6Y&-!!*90!<N6-)C?@1$NpS5!!33%!so5:"9AK)!=B>B!s8T*"9er3!<<*%$OI+J$4I4>!=B&8
!!*-0%1WUI$2t)G!=KGK#6=f+#RUtH$OR:E!!!E:%LN:=!s9/;"9\f.!!NfD%giOA!sArA$O$G/!X0/>
eGoUY!r2fr!R^t"!8.>`!sG7rp&G'jq"=C]os\HB$2jrl$jd:I$3ph@"9Sl8!=&l>%gN.9!X9&G#Qt21
!=/]0#RCP9!!*0%!WWK0#RCbH&.]<["9Af6"T\T.$O[CQ$4@[[$4$\5!WiW1#Rge:#R:Y="pb>7"U#&8
r<,Lj"UG>>!WW3'#S.@R!t,YQ%LNCA"9\c/!!<<,#R:P>!rrT5#n71L$4IFT%M&pP"98Z0!t##6&.o9S
!s8i7!!!-*j8e`N%"dWnk3DBogtD2YRR$<Arrhlm!!W<$!<WDj!!!)m!"/f0"9\])!rr<%!!2lq!W`9$
!rr?%!W<!""9J\u!!<B/"p4N!!!2Wj!s/K'"SD`q"9R0T"pkr!*<7#ur;ZmH3&qs5!XTPW&c_t7!<NK0
!W`<%%i5`b"p4r/!<<*#rW3<*!=&l?"9JZ'!$DOZ%LiRE!!!$%"9\f.!<`r_)%-ZL!<N?+!s8T*!rr?#
!<E9'r;\5L":5/6"9JQ'!=9)A%hK0Q!rrB.#64c+!<N<&!!<?-"9Sf9'+4d?%fcb:$4d[X$N^;.$O[@H
!<*'&"9\f-rW!N<%1E[G!!<B,"9SW*!WW?=$Io+Z$NgA2"8r3%"<%dUk5^)6`;gSWQN$&?,U"3P/2s-q
s-!]i"9BHnrh:m5StVaMRlV,l$UgV^VkK`VW2l5/0EVR_"UG3'QB463"U"o-#6Z!/USB!+TqJ<^SV]W;
"B;4fUSONPU8=?LJ/A7i#6tojT6M1Y"9&F!!WZ;h@Li_K"9Jc7)1mu>!W`B'=e)"RRAR$`W2a87#RMo?
Kf'&D#mCP72NVkc$OJAFR?sJ8R\QdST:.bC&g)[kX/i.mT:VaNMG=N^pAj(N%=$UA+9W8g%0I`3hr&>L
!"/s6DJNllAT;d9D%?OF(CsqhFF8RcH[B9s'`\48"9AKODK%$)!r`0B!rrmFCM79lCNO`39Fh+'/9Y]A
CM@BsE.EXW&HDq:!!ig9J5?@K!!<?&!!4rh1&M"c!rr<u>9!VH"Tgo3G_1iuDJa971&_.V#[C=A!!3#u
!ZPfGrW!?BC3"<7D/+$1E,fh:rW!<l=D_nnCi4'.DH.q8!;cb@!WWE)"qV.N%2f<L.lB-c&02;c,UtH4
8k(fm1HlNV%L!e(-RpSp.OZf54<+>4$4I(<*CDh(!!N`@$OHhH2^L@J4u=fD3C=hh!?t0"3\r?:0/+_0
1C4*h#ljrH.m!t;!=9,?!!"`M1]mgg&e>?Q#<,F5#!ND"!#67a(EY.T-n[V5"UtbS;*c$""qhL]!Zalg
!sAZ977B6r1+Fe-2F'tV!=&oo4Z"H52`a#U3Bekq"Ng]G$4R@?!!!*,"pbqa)%Qr['Dqh:#R(D:"U5,7
'b:'?!Wa)Ip](U/":Z(Z$O6qJ')hk=![/0f$O6kA#QtMBqZ$[!"qLG/!X0kQq#CI)*s)0;"p+u3"UG_C
r;ZjA')DS0!$2FE!"'S]%h/jM"pbYQ,Q.TM$PEgL"Uu"S$4d^Le,TUTRJc5,r;\/G"uj[(d3AVp"!F)J
['Ha6ZE1=.3"6)t9=).4WMQPt['d&:"9j5W"q;#i]!HM\#mLP5!s0RK`3lbNXfnq9^j$+b=1#*;[_&uS
[]ZWc)ZTpL"#[-lWAt%d!s&E*!b\s51C=Bg!so$)\@5E;!!3.6^:UMBY-bI>Zt0LO&2:)oL*[03#R:Dp
Y_38e#;2=>Wi`G3\$<'4T0<Ad7'j;5\$QFEYHY==\UYP%eGo]#fY7mm!!FIDgoh.c!"/sENe2UsG_Lp6
K,=Le-k1!<H%(<kH@:O!0`V1T!<<+#P)WB?!!*'"!WWmkOahM$I>*?0ME*Qp!&KR`JV/f5K8G_ODA<-O
"oo[!R=,tR!<<-$!!#'1@L3#9!<NQ--%^Ro!!EH+9UD!)N.h1]!JEN5!"90RJ5H@J!!3-#+GO2$!#lr%
JV&H&K7eZ%I!Hh7!#Km%L5Uh>K7nu4LJ[@<j8`Tq!!3-#$3:,H+<:Ue*tn`0-RLc=5;jf<3"#j*"s6B%
4@;J)4uYPp-NOSa%0Z__8jY64!XfSG"992s&M$7<5qa<.4<Xb+*_&+F/1W+q,qD,A#6Y8?!!"Ar7gf;!
#uM$<!WY2]4U(ul$k!:?(d(PE!"B;9#9+O)3B/`G1e08%%gs(R6mrTK#nRRH(JH@[!!*R&8jPBl1,V'X
9N<29";"*h,o8$j3]/995;WKFe,]4C!W`B(qu@$0"U#8N'Fb0L%f?;6*>T8((E!ns&0:rN!!<EJ(^^!<
(_-NM)&a7r!X',;!!!$>%LWLG"9\f2&eY!@!X&]Iq#CI$1(sB_!YQa[qu?g#!<N`7%LNIM*<uHB!\bJq
q>^O@#5nN/+<VC.$OR:Q(*YC0!"0h`"9AZ9&.A[H'FWFk*<H5,s5Q-B!<<-%#mk);s'#I*"!j>?6N@5l
!!EEd!s8Z+!'.-R+92BD#n_-gG6\6T"9NGM:iERI"pP/5!sK[=W@e/Q"TSU+[tYIs"U5AD%>^fW!tYkK
rWNo7-^9WXVkkjC!!*'($>Hl]VEFeW-tBQh\4Qi*!WZlHHjBrW!!<3'!WiH(+f;W[Y\b-U!!G9]L^aLk
"q2FZ%MWusHijTV!WrN):p,le!sA`/#7<r$PSFJU!"]/2Ic7mN!!<Q=#ljrdf%ipr!!6G[+oMBJ!s\u0
!"8oSJTh\'!!5TJ9)JYl8WbYuM#]p?!!<a`Kb+(]"$VfG"T&0#?[jp.!#c8P;@Rbm'EA=@!<<*UFEq[?
!!`W.6\BT7/,]GL4blB&!##A5"9\`+!"OR*J9aKm!!WEEHs$=I!!3'!$p&c&!!3<,$4$\qLh->^""&M*
!:'XO!#bq>!"Ju>&eP*D#8%7J!"o83'Fk6j7iVL0!W<!j+#"3*!')\4!!*Q?#66h@!XfSK!%0`+$:$'A
$4I@I!"h7:"oo>R!!!Nk'+Z3""on`.7oC<,!WrT0$OQkO>tYGO3=Glq'+=mY"#N1j1_]un!!"9#'HdAU
'GUTd5U-=F#Q4WA";;:G%5eA/5WTPY!WW6O%NH,m"p4o0"X6PgrW!Q5&-i1U9I9iE%h]9O!sD%f#m/TV
!W`9$p](9pqu?a"*:s43%g`"3!>,V8!!NK8!!!c<q>^O-"8Vut&buD.)(G[^!!Fhi!!No0!!<B="Uk5.
!s8o3"8i-#!>P_7!;ZZu$ig;C$iBu)#5A0"![.aD!!30G"Si#u)BmT1"Tb+ljuEJ@!"]MB<q---!!WQL
T!1cm$k*F@!!*-)"TSN\Wh^[7!*K@5FM2l$#6bDUS=:Z`Z'6.2!!<E**i,kh!!<6%!*?gb%Kck7!!W[b
UdtIj#6P/6"9Mf,C(Z!5@KHQ1!!WXDZ'N.R%0?MXToc7d8co+q!,K<!&JYNRqu@K5!$nSFLV'Bo$NLGp
Z\Shh"U5#1#n6rO^4,t[&-;i,ZB#+h!WiB&"\#GX('i@i%Y`]R'*&.A%L<%70?r?Zr;Zn/J0Osm!X8W+
rW!*-"=/PG$N'l*5`8A8!!ipQFT`Y>C^0qF!!*-$%t0$@qu?m[P#_P_!rW*#@"C!0!!!'!!#dP0/HAP/
3rfHf!<<*UE)qit"9AKDK4/MJ/,]GL4bZ6%!!!0$!"];8!WWaaE(5V/8dPIt*f!qp!!4m&6N$lf"pY;m
P\0al![3&.r;bLN#6Fu-"U#GK%/p5F'b(KM#64`A%g=1J+9DcS#QXo/+YO6(!&5u&!<**N!&lM2&e>?W
4sg704$N]N$kEUD'0dcG!"okD!#\3<%j;hs!X8]q:`TNQ!sJ`6$jcnfAMjW!6RDd=&J#-J0ffq10E(r?
'L3KC*<6-R'EB:@-3G;("98H&#o!gK%Pe\!5>=-<!!**N$QBcj$NU;5"=-Pf!!!'.$OHh[3[=hA)&O%k
#7a$e#m0/fhZ*Z[*:s43#mL/*!=fA4!!O#=!!!QDq>^O0"T&0"!?1b6!Z<Beq#CU%5Qh&e(^'X8"pGP<
'*nR<"TSN:!<<3!!!33:"8)Wt$3:,@,7OMN!!`2u!WjJIq>^R!%g2V-!>ZL%!!NH+T_me2rW!'%"pkB2
=RlB5!!EKIR_+Q%DerD]!WrZ8!rtQkY#deQ6qC:F_/fS[$5-RN=pl"&\5<G2!!*'BXLM_-6UjsJKt2[E
"TeZ+$5Ao::'D"3!WW6)*1!HU"@f_f-O9VO%fgRM:mJOb'H(b_5GPnf!r`01BYpKcDfBeL&-iFA"purc
(6LJ.]WG`a$pV%L"p4u0!WrT3D8h/.rW<`4"p7o:Pm[Zs!X/uE;7N)<#1rnf!<<+Xg:n7#%LWLI!!"t+
hdZQb#m+gn;a<iI719@t!!O0bGUXgb"XPB38r6LF!$!YM4TGIiO=C51#Rg_BD0[l`,pjH:6\\\C!!W]-
!!6nq0`D&)":kS7!+^9`!$$N%!!3<-#66Jo0QN[7!!#f\+'s@>!!NZ/6',nQ;+sRl!!!-#!"9!R;Zg-h
M)kV:*KFY/!!!&u!!5*48c8Vh$3UG2/"L/G!!41"E7Fpt#RUP3%NPTN"qCVS*=;ZE'-S:t,:aQN/ikZh
!!!35*=)m(+8Z$S)`]#@)A*8p3u%i#+tj'%(D[5U)aP#8F8u@H$jS.O+UAPZ!#-1P)(>Xk&./CD&IJ^h
2['3g4>R9D$PaEW0gl@#('"RU5;N?O//nm#!<<cB$5OO'-4L%X#RUe=%m*Z"/gVb[%Kceb&/G`\":PqW
![f`7!!!cQ!"KB#!$qpf'+,?l'G;Z(&-;M*h#IEUnGiaq"p"`/%0u\/!=8i)!!335!rW*"!>,51!<WZ)
!!!f2!!39G!r;lt!<r5u!!E93rVus3$i9o,";q1E!WE'%&./C;#5A0"!<NE"!!X#U!!i]0!WE'!#P\9"
!t+i(!X&K+q#CBtf`:mLGR1&Di\po@"U,AA!-8&68cStu+Ifs%GAqP/%g*+E%L*&#Wjf+.T;&EkXG//(
"pRN!Q9-ZQ8uJsV!!WE+,,r8XUT(],\?V&[#mgV4!=0=+\PEA;!sAT2#^j='.lAu*[Yt_!!<<1BYV@)\
_.\Rs-OQia9`Y.m*G2dUH#IM9-NXDN!!*'CXH!o$5b>ER=$j0K"p+o+!"T/7Do@2,!!33&!t&#@Opq9h
"p>2tZ^24(eGoc4iOTU$"oJ?&<SH.crVus"Ba/u\5X7b%#5nNS!WX$XKmS>tH@C6Z=X*qI!"a<c(D%-!
Fb(2+"p+c/A9rHGJ<>D5G?5aa!!`c.!!6qs1]@A9#Qb;47>*W.&dq$V;ZI%+!<=fi'aA]F.SYLA!+0sp
!!EE)2go-p5Xe<V!!!''"9K-h?N:'HFGF0G!Y9`XrW!0)!!<6%4GZQ,!"TJ<!%OXI!!39."TSNPQ@RKc
0F&-h$RHho%3R/2":#/5!<<*B(B>(#+t,641]m^X"UZ%I!\,ZP6VgBA4@(h2!"jYa)F,eQ"q^h^1`HQ-
"TTB,.6C!i3?]h+66upG!!!cO"VN3e"UP55!=8o_2\-!*"X-#^#QbAB!%UV[![&g&6;RXa,qp)9!s8TS
0el'a6Ui%!&/,Z\!!kGQ#QkDa9iN/6-6`p&!!!-3%fmh$#64`=)?:*W3WLW5!WWH*!t>M9'*&-`!!**(
n,NUt!sAi=#Pe?+"pG8K-6X-:(CU-@!>Yn<!!*32qZ$s>"VD[p%funA'EIq/!!W/u!=',5!!338#lFZ2
"!.FB!X&K9-ia5N$N'l.":>JB%1a-J!!*KHrW!-,,:*<i"9\H"!<NH#!!39'#5J6!!UKgN!+l6<R/c2(
!!*6*!s0^Ts62$6"9os;]i>mg)\rS\#6kG8#!B)lAl)<%='8N[!s&Z8Fh4?,KS,2dZu63V!<XaNZ>WEO
W4.7X5nj_6!!!$*&t-7*"q1V7!!F[F\!ho#KpoKN4;%Vp!=!PL2?QgeUo8;<'W8N;!WE'+AA!X>)\s%n
%0?V1!"U*LN?&?8:RnPUE3kN,!X&E%)?BqY`..gf!Wi?*#ZJ9s$ig>0!X&Wp[$1t$eGoT&"QI$'!!3#u
";$gR`YSLQ!bm<.rVus&!W)jE(4(<e1H$s=/1DG>!rr<aJ8\at<`j^"5l_&g!!m=Z4=`dOMbPE0rVus)
#Q=])C5t(J!%.jL$#=ot<**77J8Z/&"9SWTD\iC/ODK&A"oqqV,6.iM!&T3o!!!l:"98N(!sAi0'8U6$
!!"TiFC-hK8H8_k!rW*#5)`,4!"]G:!%OLF!!<<0"onWVS:C[l!!roD!"pUs!"'YcrW!KP&I&4<*u+b_
3tqi)#m:53IKKcb%06G]-jLG0*u>S+$j$SA"#NM/2a9nm1,h#i$O-SJ5UdWh.lACK!"ohR$NL/A'a5C*
$O6h8!!3004utG_8j#1"3$&&&"p$8I*!-R!.Rl&k$S!hF!WrT-/jCcr%h9$S%M9Eh"TS`a4:22o%7*uV
'.#18!<<*#&.&UB+=IQs!#6=N$4Sln/-GhN"pY82*XN&Te,TLM"o/-!!Wi,t!"ni'"UG83!!32s!!WZK
&.K6i$j$bF#lFZ,'a4U<"UkJ+!!***q#C[6&.0!e&.fQdqu?a"+T;?G"U5nO!!!30qu?d$'a=71!=TP<
!!O)g&HDn;q#CEs"o/-"!rrT%!!33%!:'XO!,2NBS,_Am@U35IFe\$uo2Gen"pQ6@V+215&/#K\%gW:B
#=5Db,lduH!X8W+#QXp.[>K$?D.RX,TXJ),%L=D`Xtg+^.[[ek)[-WS!!!'*&XKe"!X/Z1!Z762GAh5,
C28I.P9Bu50EuNu2Za.Y[sJMb';)g2!<<*#A@[F8(_mo+&J>?M!!"+<OUqp/!Z#OZ_7,L0!X&?#"Dbf#
!!*!!&-;o<]8n$L'G1om)b?lk%Kb/\",#^K:'j<a91)I&`SSrsqu@%9H6rUl!X/i3%/g/.)gQB,q>_!.
"9:<,8j#407m]:IKJ`Z.#mbp($NL/@DN79d!<33$!!6km0E(r%!WWI;HT!fP7n5d;F^GLW#QQT!+TMKi
O&Z2\!+gd,!!EH*3JL0,"9JT+#m(;5!s&B4IrbYh!!YcJMJk<R!WE-(!s8NhN(a*L"U+l+/t6&D!!WW1
!!"9sGgud3#S6tE"#_na-8.52"!J`i!Y?7[!#JT["9nc-!s]V\+_1cY">_b4!!<3%"9K#I%KIAA3%ld:
2DZO:4WFG1":mC<$3C86.P<C_#S.+>!"feH.6A4G!!<K."=u\^0/PRE-7(o;$ig8.01HB]#SAR$!"9ef
/fOop!X(&8+p@uI!<N9#$4[+;$:6BG&.\dG)]KVC5ktBs+"n9-!"fkE"T^^j/Ii$i!!!'0%luHf$If%`
!<<K5"U##:#lk&2qZ$Zu/-5DD!=B/+!!sq["pG8>#QbML!!3#u!=T/1!!3?1#P\9""VCM1$3q1G"UPMB
!sBALr;Zj$)uTa:#5nN&!XS](!X'&:o`,"/#lFZ*!<N9+#Pe?#!XST%!X/Q0q#CF,$N0tX!"&`3V"X-?
lK%-em/I#UQ5To-!<XI2Z%mCFH$=IKCa]\s"@/u^-isPT!X&Q-"TT3n[7qVW'G)9-G.`bL$4%oYY;-7h
"%f>kBb1IP!!!$*&X0Io!$VCD"9:lsR4'*o$kO(4UTdf"$3P1K0`h\)Hp.]<&uE69"9&9JA\+IQC2e3<
E,\8M#R;fXPnFQ3#6Gfm^V,a4!WrK(!!3.9_0l:`rW*9,##N"&F*D_Grc/*r]TsDp!:g+!NnM_'f%AX$
e*#cKD?g"=$>"BQ2Dd<N5r_%5rW!$@H#a8i!!!0$!##cPKG+=c#mgY55`/tP!!!I[KGOOe#U=PD8-8hl
!Wr?$*c?oj!!36'!%<J.!!!B7"oo*HGqo@#!&Sm@!!!*s!#kh:&TimS!!3B*5a-4Z<)#eQ6q/@!!!<FH
E<Q4?%g5pmGW,^*!<<0'"9:iM:]18("98EKSRs`?5"A+02H,]VeGoUO!WE'!$N:#.!WX6#4anRT$kj9]
!]!D+.k`G#,UP;\#Qb#45sPYU%M93X";i$_!%:M["p=r.#6l>91'J'l&MG46$krjg6qo-@#6t50&JG:&
72Z(*!t##=4Y?sH"p"i/$pRN5!!*'X9F27F$S)Ji+;bYA-4'\Q!>uge)%[5f(*5+S!WrK9;$o,[)&Wk`
!>He<:\au-.6ejR!"TYA!Wsqk5qjZ5'+Gm5*%`!:!R(NG":YtGqZ$[)+U\2OrW<-*qu?a5(&e4/!!*6I
q>^Qu'FOd=!=8i*!!4#`"o/-!$6/gA!>>b8!!3i^!r`0#"sX!G!!`?$!=&Z(!!**%qu?d!!XJW'!@S?P
!!395$2FQ&"Vh+:!"Ju/!Wj)?!s8N'!<iN0!S%/]!=O"^YHY(-YHFObCb,Yp!WE'5(N,+jP*D<$PF.4a
$jd1oL3Oa>!W<!6"U>*$NF*)!!W`9-$Q=5K8d#J?JV5:T!=9&9+`*'X*<H3@!X&mKKL#Y@!<NsSLc#SI
!<<-,#XjDg*sD^BJh7!/":YnK#75g956(oh"&4l3M1^eOO-,N'$4@(hKR+@<!WrE-!'Q*P!!<<'!!*-$
:lo,`!!WQ2*Fsh^Q2HaINe0G)#58,T!$,IBQBRPtR?ibW71oS&#6Y52#!c-d;,0tf<+&`6rW!6:>"]5'
!!**&"9&962/GGV!!ET2!!!'tB.3f\'OtD]r;[')88DH@!!!-#!"2S2-ia\\!")J0'*&RD"ptD5!$#0=
&cr%^<tkW8qu@?3<*gOE#Qt,^E+<U!C1Ua[?7c'U%Ko?t!rr<*!!<3I<\OUWr;Zs%!&.b<r;[H2!!!-i
<DcUh?=7,<:J_r0!!1mUquD!G&e#*S(^gEP#652U!!!K=%0uqA7m&Xi3AiKB0Ja1@$Nq,14ph9!&.\sH
(`<Db/fXs(#m()8#QPr+1CFd$0e`t:&f2#r5=?t3"98K4$3DeC*!-*E%2L`S!<io9!"0#5)aQRr!WXoJ
%0R@O"9]>Y"rT!7#<i.g!"o\L-QaET,;M;/!s&H<9f2t\$O?qN!!bJH!!**#!!<?(,XE^V!!io3"9\r<
5=%1i-mC!$0HpK""k!AN!W)is!r2fr%L<RQ%LidP#71b8!!*fFp&G*u!Vl]s!=f52!!*B3qZ$[-(^9a9
!<s26!<3B#!!*cErVus$)u'C6!=/E##6Y)/!s8l@!rW*"'ajd;!WWZ5q#CHt'Ee+1#ndjY%g<%<&-rBf
!"T2@.m>mP2`EcY/KbZ."pY&,'ESRm2DmET4?YSc3Z/;2%2:TN$j-D."T\],"9^%R1EQ]+rW";L$4&%<
-jBq_.PVA<#6kM<+tbSc!rr<&"UHP.)$g6E"U[%A&.JmD!'^Yq(GINY"p-)+(BO^B&e,$O!&HSV!Wi?+
*&oT),V1f/2)?6^#m_5%2@Kuo!<<?-"YM8)!s8T)!<`BC4"'q+#6>/<))=6:48q,A4?P)+%0b8^#okN@
+snTa-m9*"!"T2="U,#1&/>TZ":#/8',LKG!>Q4F!!30'"o\K,(`j4g!!WZ2rW!6>*t\JQ$69oa!W<!"
%ilu!$N^;/rW!6C)@6BL#Qb&J)u]gI#R^V7!!!]O%0Z_@('+I6!#Yk?',1]P"p"]1+W)1>(`!Yn&-W%6
!rrZ?rW!33!!`W,'F+dCr;Zs%!XfkNr;[<.!!*'%'+=pG%M''T"U+f)!!2Qhkl:bm*!5p9,QS)L#S@UQ
!WWBJ%0["D"U"r.!!EK7$O@=W"9Sr=$3^PD'*8(41BSF$!WW`>!<<9C%hJ^H%0H\A&JYZe#lk87!!*E4
!X&c3#lk5F%LiC<$4d:?%LE@B$P*gV"TT>V$3LeF"U#AX!!<-,!rr<)!r;mQ!<NN3!sAfD%L*FH!sp"U
!!j2>"9\c/"U4r3&-W%6"U>#-"p+c6$O[@F!!!B7"p,5<e,Y(#TE#/t#6Y)4"pb)4":>JA!s8B#!!;rr
$3122$O-h>":,)2rW!6+"pY\I#6Y).!r`9m!!<<)"p>#3!sAi3!!E9&$3pqB!<<0'!<`E(#6k20!!EQ3
"9AK(!!N?+":"r-!sS`0&HMk6#S.+>!=]D?#6=r4$jI(F#Q+Q%!W<!)!=TJA!WW<+!X/K&!s/T1":##/
!!<?0!!3'!&-Dt;$jQk;"98E&$k*FH!s6OD#QY,7!Wi?%"U+f)"Ter2!!NN#!<33!!!WK-!!iT-!!3-'
"oSE$#6"T/!s/Z/!!3-#"9JH$"p"i,!WW6'r;[!%!!!0/"8r3%!<N9*rW!!)"U"]'"U"f*!WW8o!!NQ2
#6tG<rW!6-#mLA0#m()1!rN#u"8Mou!WW8u!!!'!!!30,!:'XO!(.2B&H`1@$543n'atHa()%&W!!!9<
"Tnr3!!!$"!>?@f$O$V4!!*3'!!!3."p5,8!!s,G%hK-P!!NH1#m^P?'F+L9+U/Ja#Qk)-":,&0!!!$(
"UGA:"U5/;$jm7W$jZn;!<EEc#Qb>V!s&K("UGD7&.&@M!=9JO!=]kT$jm.>!!NZ4!WW3)$jH\3&LJP)
!!!-,$47(G!rr<%"9AE&&HDk4!XJl.#o!UE!$E@!%Ohk7!.k3F!"T55!s/T.#7(J6"9\c.!s/?#"9J]0
"9e]-!s8]3"U>;<!s&E*"U"`(5lq/m#7C\9!rrK,"TeZ(!W`?)"Tnl0!rrH*!!!*+$NgA/"9ef/!!<<0
!Wi?*"U"i+!W`9)!<E<*!W`B.!"'89!"/o:"T\W1#m150":"c-rW2lr'EJ4@#Qb/1!WrK)!!*'#"9nu3
!!!*&#6k;-!"/l2!WiB(!!!$)!s@!P"9el6"p=f("p4l+!!30'r;Zj"!VHEn"9JE#rrN#t"9AK/!!N9$
!WiE+rVup"qu@!("UG/2!!!'%rW!$$"TSW'!!!*!!!NB'"p4o-r;Zp$!<`W+!"8r7#Qb&-!!iQ*"98K!
!!!&u!!NN.#QtD<rVus)"TAB("9S`2"8r3#"TnH!&HW(8!!<B)#7Ce;!!*?1"TSPT!!!*!!"&c9%1ERN
$Oma^#lXf*"V:h7!!`Q+!!Wc>$Ng8,!!E3#(C:0F!XAr4!rrN4%gE"6"pkG7!WW]C"oJ?0"Uu(G!!3?0
!!*-(":.I)"T\Z/$46q>"U,MF"pY;:"UPM9$m#BP"onW1%0-tH!"K#;)A3&X*>KJ.&I\mN$OQt9!!<Q5
!!!HK(^'g@!!<H4#RLD0!XAo3rW!3,!WW3)!WW30rW!*6%L2t;"69H6!/^aX!<E<$!!!*)!!*B7$O?Y2
!!<-"rW+2E":,54!!*'"":#&0!!<3&"Tni.!X&lA&Hr.7!<E6*"U+f)!WrW/rW!l=#m()-"9\])!<WE,
"pP;>$3pV4!!<K6#R(;/!>5A6"9o26!!3-)"9\`0!rrE'!;lls!!iZ4$4$_:!X]2K!!!'#":,,4!sAZ*
!!*0'!!**#"U,#)!"8l/!W`<%!!3K7#R:F^!!NB+!s8Z.rW!*'"pG)4!W)is#5\B#!W)iu!sf#.!;um!
!<<0"!!!-!!!*-+qZ$Wu#Q4W,!so)1!!*-!!!*-%pAk3pq>gNrqu?a)#Q+Q(#ljr.qu?m*"To)9"o&'$
"TSN'!s/?#!W`E*r;Zm(#6O`%rW39(!<W?&!!<*!!<NJT!!W`;!WWH1#lFZ+!<NK4"TnZ'$3:A;#mg_9
"pkkEqu@];!X&W1'ES77',qPb!!<N=!WW<?('Xa>"9JQ+!YQ7[rW"hW%g)e5"p+c)"UPM=%L)t:'HJ%m
!!*?4"pP;:#6t>4!s8],%iG?J'HmG[!!!f;!tPP8!!E0"rW<Z6$O7(E!=KG=!!Wf7!!*3$!<30"!!3B3
"9&91#6b)-'+"X='*nR<',1cF!.k3&!;ZZu!<<-%!<*!,!!*'#!!<E4$jQb5p](F""p4i.rW"#B"p=o+
!WrE)!s/N)":GYM#QOl-!<WN0#QOr."9S`)!!WK/!!!$&"9&<1!!NN3":,5:!s/H&"U=r2$ip>1!!!'&
"UG,/!s&<'"98Q)!!<6%!r`0#!Wi9#'*AIH#Qb86"UG).!WWB,!s8Z/!r`0$!s/N&!!30)"8W!*!W`9%
!<<*%$OI+CeGoaR!s&B("TAB)"9o#1"9SH#!!Vup!X/]0q>^Ksqu?]tqZ$TurW!'%!!*-)r;[$&#Qt,-
!<N0""9AQ)!!;rr!WiE(qZ$TuqZ$X'"T/61"p+c+!!!$"!!`c4#R1J6q#CO"!!!'%rW)ot!!<*!!W`?(
p](R$!WW6&!<<*#qu?^!e,T[[#m1/3"pFf'"9Sc3#6Ff($ipS=$4$_7"UPY>!!3#u#QY&2#8%+>!#.F1
&HDh5"qh%=!u2IT"9Jc-!!EuO&cr%5!Y#/1!X8`-!XAr<":PD8!Y?.a!<<3*"pG26"9nr0!WE-)!"TnH
!>6OR!!Eo8!seu)!#G\=!W``9#R1><&-)_5"Te],"98E&!s/?#!X&f3rW!3-!rr?6#ljr:#R:>1'+bEL
!!8&YJcOX-!<NB"!!<<+!s7H^"T\]0#R1;.!<rW5$O6k>!rN$&!<<*&"Tnhn!:^$j!<WH&!<3*!!!!&l
!!33("8W#t!W;uu!keU.!!!&2!;?Ni!<3)a!!!&o!!!&[!;ur5!<!$&"TeZ)q#KXZ*X*2W!<N9%%hT!G
!s8`:$jm+="9]&5!!*?8%L`RFpAk0o!=B#+!<3,r!!33'"8r3)!=&i1!"0>Cr;cj#rrE'&qZ$[##6k)3
!<rT*!W2ou"TjP]JcP*:f)PdPh>dW["p4l)!<iQ-!W`?(p]16nl2^2OrrJYjquQ]rrVup!r;Zfuh>mQW
o)Jpq!X&Q+!VcWp!V-6g!V-6j!VcZn!WN0"!TO1X!Or+6!<E0#!X&Z)!:'Uj!<<*#!!NlI&H2b6"pkS:
q#L<q!!;cm!!N&s!X&Z.q>gKrr;['(#6t5/"U>,-!<3-#!<3)q!!!&q!<)uu!f$c-!5eg1!TsF_!W<!!
!s/5u!s/T/!VZTk!rN)e!<*#n!!*-'q#CHt!sAB"!<NA@!9aF^!W<!"!<N>]!!30*!rW*+!Wi?%"UkbF
#mLJ/!;Z`e!;QZl!:Kpf!WE-#!W2rt!WE-#!WE'!!qu`3!!*31r<iK/!t#,1!;QTp%K-h7%I!it!WiH-
"9AQ+qZ$d#"U55>#58,p$2b&&!!<?/"U+`'#m(/4$47%E#7:b9#6=o.p]0LXquQp&"9n]/r!*3'XoO%R
`;fl>r;lWm!!<#tr;kpY!W`<'r;Zg#rW)ir!s/T/!VZTf!q$'f!VZQp!sJE"rWDus!<NAS!7V#K!W<!"
!<N>]!"8o6!WW3$!!33%!!Nc0#lt22q>gEop&P$kq>oaZ"Te`-!s/N$!<3*!!WW9#!!!)p!QG-;!!*31
r<`E.!=Ar(!!**.rXSu<q[;Zh#R:P;!sAW)!!N0!"T\c2#RUh3!!!&s$2b&&!!<?/"U+`'"9JW/#RC\A
#R:V?"U,,4h>mHT!X/`4r!<3(!!9t:JcMqR!!2ip!s8Z/!r;or!pp!a!!*60o`,!o!W2rs!W<!"!WiN%
!!!&p!!WK*!<<-%!W<!2!<<-$!s&E&!!3-#!WW<(!s8T$!!NE-"9ec+qu?a""T/6$!<<2t!!!'!!!E?*
!rr?#!!!&I!"&o5"9o#3"9JZ-!r2in!rW*#!s/Pi!!!,h!!!*!!!33'!W2p$!WiH*!X/H(lMqM"!WW6&
!WrK(!<<*$!!33*!Vl]s!WiE%!!!&t!!**%o)S^j!!N6(!<WAk!8[\_!X8`-!W`?'!!*5\!!3?E)#4.3
!r`0$"pP50!!<K9#m1&*!WrW5nGj($!X&Z2"U"f,!W`B)!s/T(!!*-'r;[B1!s&B'#RCY;!!!$'!WrH*
rW**&!!36#!!<?+!X8Q(rW!0)"pYA:"pG+N!.k3D!#,J:!s&E*"9el1"98K)!<NK3#Qb),!!NE,"pG86
!X&Q,lMqLt#n@t,,p4BV.P!%u,7Xq\"9&96!s/f2!!E9&":#8:!<WH)!WW3(rW+hW!!*3/!X8`/#Qt54
!<<-#"9Ji5!sJl8"U"r.#mCG3"p4o,"9AW2$jQt@!WW9&"T\f3qu@Z<!XSi/!!30$!!30'!X8l5!sA`1
!<NB+!<WA@!!**'p&G'oli7(g#65A:!"9)?$jct<":,86!WW3%":"i*!s/Q-"8r3,!W`?(!!33%"9APq
!;up!!!;oq!W`9%rVup#rVus'!W2p"!<<*$p&GC#"Tnf+!!*'"!qcNq!<<-#lN$8O+9`,\#mh"K%13IN
#n%+G":#,:"9\f1#6b;8!sf#8#7Kes0bk<7*$-(A+Y>)d*ukUf!XJr0!"'/H"TSW)!t,PM%1EUR#6tD:
$3p_=#6b8:$j6f,!WiQ,!W`<'!<NH.#R(8:&/,HU!s&lE#65&?%gW@?!t#SI#mpn>"U,5;#7(>4"9o2?
#Rph9!!!$$":,8>#7(J<$O?qC"pOu4!=o=\!.k3G!##SB!!!'$"98K,#Rpe:"T\l8$O6J."p+l,#7Lb>
lMq"m#;P64rr]D8!!<-%$kNOA!X/W,!!Nc=!s8?"%fuh@!s/W/#QP&1!s/Q,"T8<-!WWN1"9JZ/"98N&
!$2=I!s/c9!rrc:$OI.?"pG>6!!3H2!rrB)"9\l5!"Ju/#Qk)1!!*3)#RCk>#Q4W*"TSN0$_ID%!<<nT
kmHhJn`oQ,jQ>it$MXT&"9AS_!!<<'!!2`m!!E-!!!;us!!DWh"U"f*!rrDm!8.>c#7LY8"p>23"pteP
#mq1L&.JmIp](C,(`!nP!$24B%N@f&0FTTu6T@CD!!!QO+s7Hu!!*9,#6tYK&.o<X!Wi?%!WWQ9'F>'Q
#mpY5qu?]tr;[K3!<rW,!!!K>#6=f)"<IpQ$ks<Q!!WH7(DmJf!r`0,!=TPO$4I@U%gr^C!"8o/!!WQ1
#mLP7!rrc.!!NT/$Q'fej8cak$NUAH'b(0M&J,?a!S%13!"B&R,T\0S,9IpA$4$Y6&dAOB$O@\$,p"*L
+<i$O'+4mEli7Y!#6Id&kL[r,da?Rqi:cOb!!<-%$kFU+$j$D0!XK):&0Llj0GtfM'a>'K!s&QG+=&*T
,:=c]+r_9u!rrK0+XeTY,p+6P)]B7h!X&i=,:!g,#RN!_"U58B(*F%j"p+c+!sJl9#8eU'#m:A2!<`Q+
"UYSP-QO<O*$619$4-db!!`f<#6kD;#mC/+!<NB&!!<H9#m^G8"pP;>"TSQ)q#L$e&-2b20]U?i[_KGc
[B[O&fGsbg"UGS@!WW9"!!331%K-Y;%0lk5!r`0?#mgqC"p>/9!t#MH!<N6$!=K/:!W`H8%h9$K!!<-"
!Y#V?r;ZfurW!!(%0?2'!X9#:r;Zj!!t>A5!<E0%#7(SB$4.+Ce,UWo&/#Hc&ekfc#Qk>9#7q@T&HrUY
%1j']$k<dX%i#]j!UKdj!<<-(!!*/u!-A;_!rriQ+X%.#&dAIA#6tYF#mV%P%1`p[&e"mT$4-qC(DRDh
$jmLV$PF![!!*'%"q1bH)'Th'$4.Fh#6YMM%1isK!"'PU&-r=;#S$tB&J5BZ%M90Y"pbVE!W`<("UPS?
!W`B0('t<S"qD+U&/>HE!1X#h"R#i;!;lg5#_BRt[^W`Z[^;;t%0-P4"9f0[[C*HKrj)d6\Q/\4!UB^h
#m>;Kdj=tn3<9<a6EteW!!!$$!#hE-7KNbp!WiHZUURkDYdCmD[!<Vk!!34=Wi!,+[B['@Wi:4H!X&K:
Q,L0`['-jEYctDn!!!-0%=c!5&-E%;"9f'%WN85_!sAT)":,A>*fRS.2?3m^!r`00":.AhZ+@BP\$`H@
Adngm!#/P"PE1feQB7,A/Hl+W!!E<&:P4/uO-0F&"cf$<!=TA#!!?-`\-`$4%O76K)#sX;"UPBNIO5$s
r;\DkK9r$jN/s-YND]`[!<E0pJU)s#Kn+Q!I"PQ)!!*')Dk)c:JW?(aS!bW("TAB&9T2jJ!!`Q/!!"*c
INAOj!X&<"(^=9&HkcV^!<iN)!WW3FG`A)VQ^F,&N(MM!()A\`0/51=0ebF:!!!<2%0lns9g1g-r]^HJ
8f[7!qZ$^+!X8o-!!s)=!"h@:!!3E2rW$Cu>U9@U#R18/)^d0j0Jk[O5!LJ)!WiH(6tKCo6U!S-:0(Xh
!!!*$'KHLS84Pru+tQ4p!!3H5"?9('!!!ZG&-)bH8PBct$PWjO#n%+A#te5b('"F>#R:G3!!+<7.4kcS
.k*)44tm,h!!s#A#RUnI$4.(Bq>^U.,8:pl'`o'm!Ta:]!VcWq&d%q1!rs?%!Vud&"9o/=$Oma`'F"C7
$PGu`-5[F/-RCH.(An.=%KHeU*#8b]"s!L?!Xp7Uq#CF:,5)!<)_i0&!!sVK#6b86#7qORm/ZAN((>Vp
P]h>!H$YmePqN+D!<WE1I(5bkrH&3`F$9a/!UKdj!XJmFs4/Cm!$D:D&1Ree"9er1!?%H'5lq/h"Tea%
YE=0XH[9sdZCNNE!!#b?H$4F^Z*&t.FE^Ud"TSN6O1C<rG]\(LEGd9-!!NrGJ@qpE!!3'!-m+/OXuZO_
!<E6*#Rgi1VkL_:!!3?+!!*0*"Cn]iGBA"PFa'jD'F!%f!D@_Q@7!@N6:GI:A0CpZ!!`Q*;M8UL6iB=S
8L"3@"mH!h;<tn)q>^R7"U=r+2ZX$^E-s#5!<<0$!'G[97RBC*4[O-m!!E?)!&%/A8Pb"h9gV?I3<TEa
!!d%h<BWT9:fLFk&ci+?rW!L'M1[2V!<`K)#$-M1)ZU$CqZ%9YG]Sm/!!!*(!s&H'!'c0>92&(Z:'#`J
e,U72;*$0T/12i*9hlK)#7(_@!AZk`2*:dt!]E@g!XK;Lli7.s-OpIdqu@lA&Jl3"!<j)R('=O;2bb7l
!s&Q*!$t8o.4[/01-&T=%fQG:!@0fY,8Vg]1+Ft=-iF#l&4A*+3]f2H+=9&f!!!91"=lSk#65/@#QOiM
5s#JT"V(b@#mLJM!?Orm2AuVs#mU_=!!!$]=XGC;+<r?i>Z1gV!"&iX%g<(?"9]2Z,5M9B#o!IJ$iUJ6
#nZ1u!<</h!!*NRq>^j)+USAV#7(PA2C/2#$N^hB!s&T2#mCPD"8i-*(C(9R$4-h:":Y/-!X98Fq>^R!
((g3?"9B\T%0?5($OS`o!s/N+"UI(4!:'XO!#Z3"cYs3s!!EH74/K&9!WrE)"FA%*&I/RGr;Zm("UjVr
&.JhHo^Ubhe^N'uc.CBf$3gD/)?LVI[RUH%"9JW*AA;1]&Ju2s(*""k!!NK2r;[!HYI-%a"9&9.!X/iC
PeL'/(D7/Xr;\eY!=9$`X.Hh.&.f+"TU;OU6jNnq!<<-'$U1J4)/lof#6k81!Wii=I^;`]&.K*Y',D)\
"9S`,f`2.9T/Q`Mr;[34Ed/)p"U+l+<Kecd!#@cKcaKs][C<]R]=;&F!!*6+!!%"n,5qQG!rr<jN[4K%
!soD<"o83$!HEAqp](A*N#qfq!s/Q/"9ni+:O$Q/3rT+$(Ns;!CCU=E"9\r7!!"0i6NBoL4obQe#Qt2/
!)7nYqu?g(',:Q!!$D@l$PrmN!!s&A&McBa!!*B@"=#N0$OI(B!!NT5$NgY#!!3KU#P8!>"WIjM!!NTX
*YT%r!!*fH(HDs4$4RO\%20Nh!<rZ/!!*!*!Z*+"r;['+"p4o72Bi_2$R#QO!!il4!"]8`0IAX\";;%C
2`*fg(^LQQ"98E&":7Ok)\42R)?gER!!!6="#3Of%LidT$4.=\,S^Rj#2&tV"S_rt$5!(7!<WV]!:Tsh
"p4W$!<E`!!!**&pAb4&"7lKp"pkD@qu?g.$PaQR!!O;R!!<]3q#CF$-1h2j!$D])b&Rmr!WW?0)O8!,
!X&K*#(=4NCLggU('"F="9\np!!NB2#;=-oq>UQn`ZP?^!"/lCUU`kq!=/`-!Ff3JMJHd>D.dNV*!?6F
"pb81!!+LQ[k\-n!rr<%"UGm/\Vb6=C/u#P"onW)!=/m[WFWT7.Ld&4[TT9*70j(t!WW9)&UCWV!'@HQ
*X)QE"T\u=GIN-@C&VWJB1W[="p4r.k5b)R#!8D>!!!?,rW!I<Kc:"!!WW4&MbQB(6Ttt>!%Aqff](rQ
l0%?rgYAY2!!<K0!!%"o+TMKD"98EgN__Pl4?YAX0G4?hrW!<,#Qau/E-W3!!!<6!!'aqI:c16q1'IX[
!s&T0!!#i</;SBP!!#iQ-=:U!!!!0-"p=o+;hc4k-^AZU!!!61!rr<iImZ=]4?Pkt2%S4;%0J!Y(^L]R
$l'K[+ZU_Z!!!0A"X56?1H.6M&IT'X#6P%o!!3EI"TABX002'C'dkm>!"KGS"onW2$7ZZ#&/,$E'bCp/
/N5LB4[;(W&de[F"p+c2'GM)q+s-ge#6"lF!s/oe)(Ij54YmWV$O[:C!"oA_0*3gS%PA+s/3a\065g.@
!<`B&!<af>0`VD1/I;Uc!!3<:""d+o4$5Pb1H6ip*u>:l#2&tV"S_rt!Y>/."p+o2#7:bBnc8(X"pbSC
"T\`8pAb0tp](R*#6k>:$3g_;p&G*o"8;d"$3:>9#RUb1!!EH2!!rf-!!EK?!"p+C!!*3ArW)s'r;ccr
#mMLT#mptF#7CX`!$);c]P@KL!<<?,#`c>o"98N)"Fmkf]"Y_U2$XEjj8]H#,9\6P)(@%N!q,M?r;^d=
&tua)!X/i0"U#m/YHk^J]"5GkSg+4;"pb81!!+UU[l=Kq"9\f/"9oX.]XbAU[Zr*H$kELD!"0*`Y;8_V
OXP1S66iS963RJl!<ro;<k!/['*i-bIgQMb!!39*.ZD'N[CN`\ZG;PE#Qb)/q>fFR+%`5%!!3iB$3:6=
J1:O%#64a(KQVcuKm=:2!<<*'"mc4&":b_<!!<oQ(DIJb!(>2`,le)OrW!"<Jfjpk$3C52;Jp]8MM?V0
!KCUd!"0&7!!@4d(B=F:!s8E$#@N%0H%:`h$2so>"9ef+!*=[N&Vj^(8rX_hI"2e/!=&K&!\B-orW!!k
OA,WR%Kln9!"i@jKS"f)KQ`#Fg&V$N+9Enm+9`DY"<.mP-:'![!!O#=+XnoN$Q^Vp!WW3%#n#qt5m7Js
#RgkB&f`,>"99&K!!E9%'FQH7'atWR!#61J%4jCI!!!Q@*$#1`#mUM3!t5_O*%;s1!!W`:#m:8>2B!](
+"&QY!!EB7"98H@"s#)n%7<o'0ME#e/g_)4$315<#m)#/+TqrM!$W]k$k!.<!!"#`!!sVi(D%$00aJ$p
$3o/`!X&K)q>^R"('=C6!WiN0!rr<&"P*PQ!Vucs#6OZ#!='&2!<3,p!!*-)pAbC+!<WB+"p+K!%06V4
!#QjZ#9j-J#Qt/(!!307!rW-!"8Mp'!rr<&!s&B%#mo,^*<^DsD#a\=!!WQ9O0_IZ!!<6-J\@(H;cc^0
!<WDk!;ca!!<E6)$2ad@!<Z3nkWf+L!<<03T<q,j"q(J5":HJF6q0pF;Hf]_*WQ0C"onW)!\CUa2?O*b
"9\c/"r<<2G>VF?6OsG*#6G#/$OM<d1E_ROE0cD!+fhk5"9SW/%Ls2)\q*=K6[-DA.1$:_!<WN+-qd5A
9M8/X?)W_s"Tni-f`3*gW)<U"'*ejF"(m'-!!3B*!*>%N,9\H_"TST+!XJtq!!*0&pAbIHf[)/L!W`9$
!s!7h+8l0K"TeZ?1G1aR0Iei(H4TrS%0?\5!!7+a(]XO;!s8W(!!cnd6R+!0,QdrF!<NH(!"`7a!!$8J
;06CM!.]k@!!3H)!#ejm8f&d":P`ci!!!*&"9\]?1c@-E1,(V6@I4'Z!#bk^"W[RH!!!N4!%:Ab!!!07
"=#W:.m#jK&*<iq#Tag!&I\O;-411f!<<3%!!`Z/&.:-A(CCWQ!"]eG!#m-q#7_Xc/NF+;#7(D3637N(
&0`YH!!!0/#m^Y7%QlEe(*k=P"Uu"]#64rN#oP,q"uB:/7774b*teka$318C$jR_9-Op[f%4ES."q)"P
rW!E3&fr;B(Bt448-TD2$3o/`!<W<%!r;lt"WdI?"p525!<N?)c2[kN#58)t!WE'$!<<?8pAb3q#PS3%
&IAL=!<W0!qu@-+"TSN00Ei=2!!!$#q#CHs'En@7rrr,s!W`?(rVus7)q=p(%">j-'bV,i'J"O7KcC.%
!WrgV^M<rM!!33&!Wi?(!p]hS"UB_Ua@&3V5Wq=pGjaHQ!!<6%!Y:^)7fWZ!"ooEeGmsiX!X]/WOe*]r
!WrN+!!*3PX0=8Z"9JT*"U,,DN4;4W#5\B=!X/]8#^rg/&JT8sH4U?*Vlr2b!rr`:'m$f)NJWRNLkM)'
QlH;:$3;<&D[?LI"pYM[W0S>+!WrJV!!53D2#@7f13m70!"8l.!*"k&!!30$":,5:!WqTd!!3UQij'sP
)AsY:(0]&'/H,VQ!<<.7Gp!"c"U+l:;IBY)!!6tc(An.@"98E)EI/Q'!!30&!r`0$CRQ^M!!EE+"p>).
!!-;XrW!=(T3M?r!el^Q!!!?)!"25U@8U'6?qs:LEt8-K!Z>iPq>^SACB3Z#li7b)6SC(t#RCeP(IChT
%fcY5%L"(8(&\+4!rN#u!p]jd"8r3'#n.FR%M&C:%h8jF!<k_M(^(-I!soc'-iO)U!s8T1/N3e4$4-b6
!!NX*%k'1R!!!0/#RU_:%5ACu!!*'"!<W?)!!!TZ$l13("Tg5@/d;^n)Zp?S%KHV>%Os%Z5"%.j7Rnm?
!!Oi(%0S4B$ig8.!sSiq70X#-$3o/`":>D<!!)rt!XBtZqZ$X!%ESSN'G:0A!=]2.!!*<6pAb3t$MON#
#kS,r!!!0$!!3??#Q=]'!Vl^%"U>5C'aYNf&dA+3!<s#0!!*oSeGp?mJA-Y19MIu[JZu7V"p4u0"U]Ui
KL#N""unS+*WZBHlMtT,"IT5I['-X8YHFtGo\_5"!s&B'&!sFh!!Wl8!#;0&:-_0;77gLNTc*n4!s/N(
!X1$OXYBeZ!s&H-"9]?tZtMoq5W_"g3u7r%":GH^W&5.p2Ol`1%32:I3W]Ba$jJ&JW(/a%)_Nm%:8bTk
!XT58/$5+)7m9429NA9X('OdB!SIGh3K?E;(*FD<5@Sgu!!!3*!!$#V6Q@X.r[S%''ER@s!eopX$B^-s
L5gt@W7]$)rW!*&!!-_R+8u6M!<<aTIk;Ta,T.UKFF4Mp!#u%@!!RCg)up!A!<N?*!!$l#8KB!!,UY,m
&HMt4!$>Ku!<<*BKdHd"",MpR!!!<*!!71p,Rt:u(C:=mQSSL>$Qt^V(EjbB+W_kT@Jp2Z!$DJ..lJRp
*@3d8<Ce,2!!**2"=?2Y'bqN,)B'S+!<ieq!$;LI!%S$l/2/k.1,]+4&dJCH"onW,6pqsq#R(;6'hW!p
(*O_B*$l[\3!93g#lt#+!s]>h3$&&""pkPC!s&lg&/HQ6+sA$O,RaYR'IX;(.N\fr$7cDf(_7es$4d^K
!sTT),6SA]!YHCq,9$si.kqP<4$k/;*ulLR*_&9r#7_(Fk5b)R!XJu:r;Zs%$n31tqZ$[#&Hpni$O?_7
#71bA$4Hn7!r;lt(`E/M!?VdI!!*B9pAb4!%f?>)!!!E'!<3)s!!**)r;Zg$r;Zg"q#CF-"8Vuu!s8?"
!=p"C!!+&OeGp$cLW?]sVkp)b_S(7<!YP\;!sK'a]Vha2X/`"cThYRm"RH*l!u(rSs7?$c!P'*I!#G\=
%%=Rq!<`o7!"=n&X.lGlWMur2P8a?!,m"5S/?H$4!!WQ,!X/Z.':6S7V4si[Tq%H7!sJo9"bEg6&Io@(
5Re&0)lp;,!s\f1"BN$_&I8UD!X0']^46Ut$3_WA[&C"!USaud]mpe$!Wq!S*)iJ\DL-bSFcLuH%fcV3
#64a/OD\iRF*)MCG:`FfnGj%kj435Mio]CflfdT%!s&<&"98L@H6`=f$OpHoCL_I8FDu/TA,H<I!<E0#
#CCqC!!<?)"9JW)"DWp>E-$8HG&Lk(!!<-"'k<('!!!6Z"onW-NKkRc!!rW*09ouB!!?B%D?g(?$P7`I
EHcPGF)>TC8C[\`!t5/O.j,EV4#/&s#QOu-!"T8f6:WFI+X\m#8LOQM'ERS$%1+E`&g[Mm$k*pc+YXQ4
0J`t;#lXg#"\ho=!X&`1!Y7a[4$Y/&(b$jd,R+5U$3U>/"U5W(80\*9"p>/=!W`m%0J>43.kEA@=!dnJ
'I3u-3%51<!!E98,SW-W',)/^!<Y2Q)u]mX!!*E0*%M^)-n,Q)0-h>X+!`?l1eB;'#n@:Fq>f@P#Qb23
!!j,C"9J?!$4.Lg"Te`.#7MXTjT#Yj!!30%!WiK2!XT82!!+5nq>^d<%hTN[!!*6,!=/i&!!*cTpAb:5
#m^q<"p,)I.Jj)G!Y4u*!=T&,!!39J!Vucs!=&E$$4$_7!s/T0$4J$^g&V$N+9ON!<`Mmg90t3L$Np_8
!s/T/4&K'_>?b63<a.-\#RK_r.KTeV1Ke6s@UWSR?tMnI#6Fl*":#*%=<[bJ$3:,-*_B=4:et"e;*5Bn
qu@?2"9fQ9;&K?6!WiH(!sK!)>uj'i<EE*u<*CUS!!EH-4]<+-#Qb5>"U#?1:`flE!!<O!9c+$>!s/Q0
#80X')$:$V$Qhc9;+sVV:JrtWrW<-%fDl0r2_-7,1+XL\qu?p("onWK0eNAJ"=,6?0+R(D-5em88kDWC
9MJ,."TSN,!rr<&/L:`,!rr<."9TPc.5*G2-nd%Xqu@W:!<<*$0/<t:!!**&!!30&,q1#a-7C;k-R\ck
!A$50!!!-!!!5)A$O6Y3"p+ib4V7Jj'a+n+4UV5i"98WN/hf+=2)$a,$O6aa!$E9k,Uj]P0.R)-!X'&9
!!!Q5%M9s8-mg5e-8?>>%1WF0!;lg^!X/l6+tXlK&K)o5";;CM!X&K'!t5>X/.;L_#R:P6"q;k6*=s2;
-5H_!!!`l:!!!--%NHN"!!!*("p+o0"o]f*-R'`V+Y5Vq!s&cL$4.Le&cr%6!"9qd)%-li'`\7>+qjq]
$j?VE)ZTjY.iJd$!<N95(`3Vt)&sqS+:88[%LN?j!!NE)!<<3&o`,!o!WE'#!<E>`!!WT.!!!$&!VZQq
!!*,q!!WH+!<<-$!qcQn!VZTi!<E6(kPtSapAb3p"SMfs!<NDi!9aD)#Rh1Q#mCP;!X]>?"98N(!WWW<
'+YTb%Lis[$OR1Gl2V:s!!!30#RL\?#71qE"pk2.(BXpC#o!XF!=8`+!=B5F%0d%G$jZh5!rN$s!!<H1
#RUY6!!E9(!!**&&.f<`%h8pX$kEjV!X&Q)$4RCQ!WWW:!X/c5#mUY9!!EE0"p>)6!<<-$!!!*)"pG5>
%gWLM#6P#0"pY,.!<<3'f)PdQp](O&!!!3*!!!&W!!33)"S_rs!rN$!"9SQ&#Qau+!W`9$#RC&'!!<*!
!!;oq!WrE)nc8Ug!WiK+rVus&!W2ot"9&9(!WiH/"p4Z%"TeZ+"9AT!!!!*"!!333!S.5j&HE(B!WirG
!!`f6%g2k4%KQP0!sSr7"U,)8"Tei6$0hL##7(\I%LNLJ$O6\9!<EB'!$MLT!WWH+!!EZ7"TSW,"UYG;
#n%"=#8dFG$O6Y3!t5D8r;[$*!X/W-!!*!%*sW#V"9Sf3%0lq>(Bjd='Ft0D!rrWJ&HMk8(D6]P"9&9A
$4R+<&Jb?H"UY\B!!!0(":>A:!WiT5":#,<%1363!.k4:!:0[k!<N<*!<N6%"9&?.!!<6%!s&E&!<rB$
"TeZ-"U#(r!%\-N!WrK*"U+l+#6b8:"9\]*!<WW1":kY<!s\o.!Xf;<"U>;?$OmOI"Tnf'!!!'/!<<-&
!WW6%!!**%"8r3E!<N<&!X&K,"TSN)!WrZ/!!!0,!rrH*"9o)3!s8Q*!<`Q-rW!-("T\W0!!3$#%13UQ
"9er:$4?n8!<WDV!!NH,"p"]+!s/H&#lFZ2!<iH("9\]5%h&gN"Qf[d#m:A9qu?`u!rW*""9SN%!!N9$
"U+u.!!EK#!!**%quH`ur;[$)!!*'$!!*!!%KHS;#6P#-"9A]4"TSN(!W`K-rW!'&#64`-qZ$d##64i1
"oA9)!Y#/1!!3<-rW2`n!!:^O'ab`X#mUG2'cI,g#lt_G!!El?!!!)u!!NB)"9JQ-lMpncrW"k](E+(p
!#$=b%06S8%1N[L!WiZ/!<s&E!rrE*$PaEi)'BRs"VLe?$O-S2!=]PA!!3-#!X/Z("=O6N!XT;H#ljr-
!"B88$jH\3'*eL@$3pP6$O$M7'at'Y!rr<7'*\FC!!if0#o"6X!!*!'%M^3,'+PE[%L`C="qCtCScF?B
fDluo":#)5!s/K(!s/N+!<<3&!WW6%"pbJA$4@+E!s&Ji!$D:H!s])8"pkP<"pG/5!sJc,!sAi;!sK8=
!Wr]0!!<Q:!W`?&!X&`9$NpY9!WE'&!<<6'!!3#u/HYtS!<`B(!sA`/!s\r4"pbP?!<E0%!t#,2!!rl3
!<WB+"pk;2"U5&2"U5#,!"8r3!WrW,!<E9)!!3<&!!i]9#n74A!<WDc!:p0k!X&E%%Klb3"TST+!!!'*
!!!30p](?u#R'>k!!;us"T\],!sAZ'!"]55!!!-'!!!6-!!E?(#RCY0!<33$!!WW2!WW9&!<W<'!<N#s
!Wi?&rW!'%"U5,6rW!**!WW3+#Q+Q*!sel2#m0u(%fue4!!*91!<<-)"TSQ-#1*>Z":G24!rr<2&HEFI
!>Z"J!!3oF!!!3/$P!(H!XoA:l2V7u)@?KF!!ET8"9ArO$2soM&02`""Tnu@!!!0:&cr%8!"BVC!!*6,
!sfYB"pbJ7!!O&K#lO`C!=&]1"9ni9*#K7p!WW3%$Q'`l!!N?&!?)4D#S7dY!!!E6!soVH!$MOH!?W*U
!#Ye=&/#KR!!O2]&-W=@!<E6-#Rgq<"qV+EYlK@U`;g/F!X8i2!<E0#r;d''!W`<'!W2ot!WE0"!!!&d
!!E?*"9AN$!<`B("9\f&!!<9*"9\W'!!3#u!!N9'rrN'#%KQY4"9\]+"T\Z-!X&W.qu@')!!*'"!<<-$
!Wi9#!Wi?&qu?g$"9S`(!!!&u!!!)s!<*$)!s/Q."Tnf-rW!-(!W`<'!!2ZkhZ*WWr;Zm""9S5r!<E9!
!!33+"oJE#!r`?%!rN)q!!!&q!<*$$!!!)i!!!'!!;ZZs!W`Aq!!E<&!!*,t!!`N,!!!'$!Wr6!!!E3'
#6k;6!WiK)!<*$#"9S2qrrW3#rri9#!<E8V!;lg;"VC_8!soPG!!!-)"pY86!X/l8"pb50!!`f;#6F#g
!s8i6#6"o>"T\T/&I\mJ#6Y/2!!!$$r;Zg!r;[Q:"Tn`)"UkkM#R(SJ(CU9D!Y?(]"o\N/!!!'(#RUkD
!Wj#:!XTAJ#QXu."U#&6#RLkA!<NAt!!Ec7!!!)s!!iW0$4I:O$jZq.!<*&;!.k3V!!NB)"pP/1r;cft
"TSQ(!!*/s!!!&e!;lfu!WrN"!!33(!r2ft!sA]$!!!0$!u(_9!s/K(!!<6*!s&B&!sJf/"9JYs!<3)u
!!!&r!!36*"7H6f!X/Z0"p4o-rW)s!bQ%VDr;Zm#"p4Gt!WiE(qu?j$!X&N)rW)p!rWN3%lMq+j!WW6&
!<MKd!!<&u!!2WjrrMus!<NE&!!!)q!!WK/"p>&1!rW*$!WiK+oDnmmqZ$^!!<<2h!9jIn"V:Y7":PqI
!!!$&"p=u+!WrW5#R:8.!sAc4"6ok!!<E0#"9f&;#m^Y6!!EZ:#R:V3!!!&p!!*?-rW!9.%M''S!X]MT
$igJ3!>$%Z"9JH$"Tef3#RCV4!!<K<&.&78#m(55#71\B"98Jr!!*?/qu?d"!sAN&"Ter=$jm3Y!.k3B
!!<6*"p=f(!!DWhrW)oup&Opi!<NAu!!*-'q#CEt!qu]p!VcX%!<WB,!sel0!WrK$!!*-'rWE3'qu?]t
o)Jjo!s/N$!!`Q-"Te`+!!!0&!<N<)!qlWi!Rh#K!rN$"!X&Pu!<3)o!!!&a!;$6k!UTme!W<!"!=&c,
!!!*"!!*9-m/R+ehuE`Xq#CBqp&OCYli74j"U55?%L2n4!<WAh!!WK-"pG5;$N1A,#64o*!!<6&!!;rr
"9JQ'!<Vrp!<rW(!!39,"TAB*!X]GA#QbM:#P\;u!<E6)r;Zm%"U+]&rW*B,!<<*%"9o#7#RUt=$jmLP
!WW3(%1`jQ"8r6!!WE'#!<rc(#64hQ!.k3E!!<9*"pFl)!!MTfrW)ou!!<*&!WrN+quQ]q!!<'#!rr<&
"8`'#!X&Z-li@"d#6b20!!39.!W2p$"9o):$3pA-!!<-%!Wi?%rW<0(!r`0%!s/H'rW!3*"9f#5!s/H&
rW;]l!W`9$quHj#!s@'R!!W9#!<`K'!;?NK!9=+]!<N<#!!<6'#Qsr(!Wr`4bQ%YE!;Z`d!8%8S!>#qY
$N:#,!X8_n!"Ar/!!*-*#7:qQ&J#$Kq#pBk!!2rs#6=r3#6Fl,!r;ls!qcO#":>21!"&f.!!E?%!!WH)
!WiH,"oSH$!VcWp!W)j#!<NE0#S$bF#mLG2!!*B5$jZn-!!33*"oAE("U+qf!.k32!!<?/#6Xr*"9J`.
!!)fprrMoq!!;?a!s8Z/"8)Wp!<VTf#m(22"p,$-Ld)"<!!NE+"9\o1q>^g'!s8Q(!!<?,!rW,p!<*#d
!<3,E!!*-,r;Zm)"p=i)!!<'!q>gHpr;ZfurW<#uqZ-WsquQj$hZ*]Z!<N-!!W`<(rW!-*6#S+N!!2]l
rW3'#nGrOhq>^Qt!Wr9"!WiK-rVus"!WiE)!WE'"!W`*!dJsRe)&<>T!!3K7"SVls!X/B#!X&`7q#LEq
o`,C&!<<*#!<<*%#6Fl*qZ$d$!sAf2!r;lt"TeAu&H`:G!!!g(0ae*c!<N<&!WW6"!<NB3!rN$-!<N6&
"98E&!<<*$!sJE"rW;rs!<N<$!!*E1q>^Nu!pfo=!;HNp)$5ctqZ$s(":5A:!<<*%#6O]$!s/H'!Vucs
!<VHb!s/T-"7uQn!UB^m!X/f2)2Xk8!X&W)!!!'!!!NE*!s8Q(r;[0*!WrN+!!!*'"9R`d!!2lq!<iSL
!!*-,r;Zm)#Qju*!<N;t!<)s"!WiE"!<*$"!WE0"!WE*!!W3!""9SE"!!;`l!!;lp!WiB(r;Zfuqu?p5
EJ,,.!!;cm!s/T,!V??o!WrE&qZ6ZrrW;ut!WiW1rW)lu!!3'!!<N<!!WW8M!!s/N&cht4!X];<q>^X!
!<<</qu?g$"UPP+!;ca)"9SW(!WW9%"U5,6"T&0'!WiK/"Tec&!!*<-r;cj#rW!H4&.\a@2+f###mC;1
!WrN&!<WB/%g)\0%fuk;!X8o3!WW9&!!EH0!V-6j!rW*#%1!+7!!E<-"98FR!9O7^$Qu&AkPtbh&.f<W
!r`0:"9S`,!!*'#!!*-)"T\W(!!**#!!*3)!WE'%!<E0#!rW*!!W)j0!sAT*!!!'#!!*'&!s/N)!!!,t
!!*0'qu?p'!<E0#!<W3""9Sf8%<r8F*s`&V!W`E+!!*-!!!<6'!s8E$!WrN+rW*!#rW!]9!!!$#!W`9$
!sAZ*!!<9)!sAT)!Wi9#!X/Z/r;Zs%"U5)1r;Zp#!!*5P!!*0+"U>23"9el(!!!&q!!NB'!WrH)qZ%!*
!X/`3"U5#/!!!)t!!WN3"9\])!WE*!!W)j$"Tnl3!WW8p!!!)o!!QMH&-)\4qZ$Tsr;m0(!!<?."9SN%
!s&N,!r`0%!W`E.qu@$+#QtD<#m(>7"8r3$!XAu0!!E<&!rrB"!<*$&!<<0(!S%2M!rN$&!<i`4!<NH(
#n%"C"9o&6"U5#3#6b57"q(\Aq>^["!!*'"!rN$$!<if6#Q=i6!WiN,$kj'V"onW(rW!!$#6O`%,6A2Y
!WW3'$47"<!"'AS#;8CD#SRmW!!*'"!sAc2#R:\F"oSE8#RLe@#6kA<"U"r3!WrT1#m1/-!rW*&!sJc.
!s/N/#mL;.$kEXM!WW3%":#5>!s8H%"9AK("p1=qe,TLT(9ml*!:0[h!XV\ICE<?R&d8ID"Tn`)!WW3(
"U>/4!!!$#rW)m#!W`9&rW)lt#m1//!<WH,"9\f&!=/Z+"U,#2!sAZ&!!33&#Q=i+!r`0("9\c/!!*0"
!!`T.#;2!="q:e?"onf0!WrQ%!!3B1!rN$&"U"f,!<<3#!%e9Q!!NT3"Tnl.!!30%"p4r4"U"u4!rr<,
#mC;/!s8Q+"pYA:!sA`1!s8T-e,TS2?rRX<!!EAp!!`N,!!<<(!X&<""p"c/!!30%p&G-s"p=f(!!2lq
#6=l0":+u-!VQKn"8W!$"98E3A2aDe!!W9#$j6V3!X&W-!!39)"9SN%!W`E)#64`)!!!-(!rDs'!<E?0
!<E6%!qlTq!<WAD!$D:G(EXP%"9ec*$3gM4!XK&>$4$tE!W`H."pbG;!!!'(&/#BT!X/K''*S[J#RL_B
#71\B#m^P8"pbM>"9&9'"qCn?!W)j*!<iH(!!30$!!*3/#Q=]9#71_E"98E/%jk:2!=oSB!!!&p!!*0&
rW!?.$4$n<!!EE.$OR";rW!QC'G(KQ"9AQ/#7MRd$k!:H%Ls!T!rrK/"9JW1#6Y/5$ka!J#mCYD$kX0Y
e,]LLaoL#n!@S,S!8.?;"Uq"&lS8JB!!*0.(_-WP!rrE,!XKPW#RCJ5"pGPN'bqDs&eGH\!X/W."pthT
(D%;r(`*bd$jZk:"9T)H)Z1<Z'+4jI!<NE.#8.CR#R(,,"q1bE$jZq9r;\8L"pu"_%hK*V!!<B-#6bVI
&/#Wl'H.St'aOmI$O.7[%0Zk8!!EN3')iXF(+'Op$jHb8#6k;?(`*r''+bfu&-iIE!<E?1!XoeY()7Jr
%giFF!os@P!!e)CeJeJg!sST&!<iT!!!<9'"9\K#"9ec,!!;fn"p"`)!W`?'pAb:!"9JW#!!30'"9&9$
"9JH$!s&E-"8W!%!X&K'!WW3#!Vl]r"p=f(rri<$!W`9'huE`[aT)bR#S/m/'FbTR!!ic8#R^V7"pbMB
"pbSC!s8H,,m+>V$kEjX$OR1E!Y#_T":5JD$4I@Q%LidG!<i`<#m(;;$OmRE$ipY=rW!W8!W`E1"T\W(
!XK/;!WiW2!!WZ5rW"AN#n.=O#7(\;!!WT-!=/o9$474M%1<IH!X&l>!<WN0!!N]8"T\`5$iUYb%Li^F
"q2(X(C^KS%LipZ%1<LK#Qk)2!s8N*!!j#C%LijW$jZn=!n72N$Nf,aJcNdj6Nn!jqVNq,!WW6$'3n0=
"U5#2!rs6F;A0E>!s0ZN<a/m:>Zt336j3f#![LTF=^>9=?t!JI.1Hmk!<EL$?=72L?Q!3X>tl:?"9Sl3
/mUIC$3^J3!=T/l=>'XUr;\>N":>`<?Rl?g"TS]/!Y8:8>?tQC?t3MM>V$!a%1>a73!]Wh"9T9$?=@4?
?l!0N/-cXe"q1\`:h*g=?X6l?@T+uc"o\W7#7X+/?sm>I?<BQ7#R(8(!8dbeJ)J?c!!!*)!!"`$!!!3)
rW!!/2_Fq-$P5EZ2D6^;1,M$B!WE'&&i)=#2)"q]%4s%<!!E9&!!4c1/MJgV0+'H_#QOl-!!!lq)ZB^A
!X&W+!$FEFrW!r=!<<<)!!"N1%KHJ3!W`<%!]2km1,:R</2/k>(B"47.6AFF!"8rL/LrM/0/#%2&HDn2
!$;\#1G(430/,%6/J\<e!s/W+"X>WO0/#":2BW)%!<M!Vqu?a&$iU,E%MTNU!!NZa/HPnV"UG;4&ihEI
!X&Z-'K.QB1&`j62'W)0'+>-s1Fk*W1b1IA0c'lt#71J8/N#1<1c$pF2(f@=":,,2+$LqO!s&N2$j-MO
3?A/&"9e](('FjD.QJ"@$3U>8"onle2Dd3F0f1jN5<(G<":5D;,W6VC!so>;"!ff^0JbOB2D>sL&.fQm
#7rCA0JbLA1GLR:*!$-F"onW--8RJ81G^jC,R+;P!R(NE"9SB!!=&`(!!3B."oJK(#6F`&!<WN%"98Q#
!!36,"8i9&"TnN#!!r<!!"&?!!<NQ%!<39'"oSQ*"U52/!!***q#CEu"8r?)"Tn`)qZ$[!"U"W)!!E#s
!!3!#rrpjO*s*"Dp#.V,!s8T)/Y9/*3<0*a"9:'YPo'o7$4'2&Y5Y.)Tq@gFEtei_(nS=3SY$FdTqeEY
[\#Ma"p+fEMmoheU)9Z&Z\o_("UG*-X-uK[#Qb#,$VI7m<WE7#!%S-R#BmY`Q5^&2"T\Z,)hjfSTru,=
TUhL99aD.<%Z.o0#6b56!*lt5VPa?h*i-$5.g?4_#p5eKV5L,bV5'`VXI:I9!<`K.<48m&$DF/fTqK)Y
)[$0Bf)QP9f>SR,!!3?)&8Zr/+92BB!<=3pAc)NI-%:PkFE;VMGBm*i!!!1JQ$IIoF`VP@Dh)F3r;[<8
>CU^4G&hS@F+[a"!!!`6!&8n>+92BB"Tn`SIXsQ\!!**#!r`09;O3Aa"TSN("9JQ0>]4FjFG>-RCMRK-
r;\i]LbJf/!<E0UKQUpQH$=CPJo_D%!!*'+G`d8mEH?/@F)utT$ig;4!WbQIF)#H/FEDblA,lT2!V$0S
!!*34rW#t-)&*&N"9pq^5SO1u!X&QJ82UST!sJfH75ZS:+seKc4"gU9#7VY,+Xo#n/1rS)3D(+j"pY,0
4[^qR.kWJ34AJ-H!tPS9/RD9k!!392$Nh2=;'u2@"Teu9"Z8,8/h7,6#Rq7L!X_@d4ZFu8/NZ-e<%.qS
"U$tg,m+2O#665K2_cHu+sSU'7hPh,$O$\h-lXQ_,pt5s2EaJE!WW?,!#ImT1b^F,.OdkE%g)k6ec>IF
!Y?Rjq>^O;%/U#2)%6]N!sA]2&.&47$NUP8"U>59#7(JD*r>pE&K1r["pYDA&LA.h!!39c-i!`D+t3Wh
!!<T:#R:))$Ps`p%L3(@&JH-4!W;uu&HOTfqu@'+,Rk%]!WrN/'cd)N$OR";"U,#4#7(_O)YsF?('t?T
"p>,6*=L?s*!2T.i[Fj1#6t5[TXhY"3<fiu!@,(>&-Dn5!^f2ZT0t=f1bLL<.Lumi0WMBW2)Hs?2`aI'
\MjKh!rrsq\8EcG/i>h)ZC`<H$jQl=]t9CF"T\l/.$V*<?3UK1!#ktE""L./NO;1W!Wi?)#7W1A3&GEb
Qp*)N.iSBj":Bq#C'4G8'F&`nH7q-64#o^)UcJJX"U$?OW^\$k3&ENS3CTXI49Y`c!<@>\Aj&495!DT2
HkQS^!<LgQ"+]@M+oD<D#@WCEC(gIF$6b==!WW3%!%3D6r>>\R()IP]!"BEGE$5`**ZuF6*,9gDrW!B/
$sds/*@N!I)*E[s#5nN6-@^SR!X&Q-!!-klHnk[&"pFl)"U]<U=+q[o!!!*"!(InJ((*$^@MKk1,7FPQ
!!#iN/-#k_$ii_\=V;Vl)&F94H6*%e!rsF$O!P;P*Zl75."[9`!!<T3!*,IA$OmLZ%NTOh!:'XN!!!'!
!*9F/"9f#1#qd;F('XdB'G2T**"r\[!XTGk/g(cH+<Dp]-4pOc(e6as'dj\-'cRcF3ZJD9#Qau]5q*0O
&JGQe0.m5-'FXs_2(TFF"qDIO#9#?Y.09DJ#mCnN!Y\$L,si>F!XoSE%giFL*$ZRP)^lmR+Wq3o#6k8g
2&-N%!!!$M0G#BI'G:c_;,\M9#8%OO)\NE(,7FYf)[?R(*u>(c$ig8P/1`7q(DIBL2]E#(!s8T+ec>RI
!ser2!W)it!<W,u!=/r'!!+#Qq#CF*&GlG/$5WgA!!*?1qZ$X+#PnE&!=BA?p](C8"9]P6!!NH+"TSN'
qZ$^+$ig;+!!*60q>^OD/GfGI!VcWp$i0i("9\N$!?)Bs!$D:BS,_Lt!!NZ8!%OtCJ#]Ph)$U'j]Trs+
!<N9e]q?2Q!!`T1"9AT,"p$6OYV6+[rW#"`*gsc#!!**#&X:=4!WiH8$:Lh]*!6<H!aE:!\<%F/">6(+
PI=a%!s&B("p#p9W?imbW\shX!X/`+""XTU<lC+7!!!''#Qt59Lr*s5!!!'*GJJ2$!<EE2**cAY#Qb)4
1T%,t"p4iE!!!$IT!^`e!!!'#J@Iub()n&3*#ASX!WW6%fDl#(ho6`8!"B!DDFequ<!`O)+cU%6r;ZmD
LhQJ^"qtHm&-)\3rW!$+B7qQ0!!E?-@>>s&!"]]`D?p4B"9:94=Ft&k!!!E+Ad*o?!!*3(r;[.1D?L8e
D@$:D#5S<(-C.p;!!33!!")SZ0)u1b$NNP\;>^Cr"?7t9r;Zp>M2)?5!"oHZL^X7j$OHf5QT#Ha&.8jP
#Q+ST!!*3-rW"ea!!`f<"U?Xt)+[UA#mLGH"q_:M!!E`B.jtf+!WW6&"pkSD"<'B\!!!N4!!!010.IJ4
#lXf@.QdqC(CgiU(.h$s!YZ.G(aTMG63[Pq)$NPX)a,MLrW!H7('k.,3rf=H5mR]&":YY9!(mCp*u?+-
!!NH*":PV=/h.MH$NL/./hdG1%hAmH"YM)+"9f5M$mm/$',LcO$P3LS1_^B!!"oVU+UJMf%hB3b#ll4^
!WrN+!pK^K!!NW/!?NWio`,!s"n_ir&InO9!=8u-!!*9:q>^O<*;]^<"98iFr;Zs>"9B,:q#CR0&HDeF
(ARt0!!30$!r)`r#R:/+!<rl,!!*6)qZ$X""8Dir%/U#*!<^OG%06R%s5GI-"UPJ8-Eid\4ERI#C)[.*
]p/p)!s8Ni\"c>K4#mfT!WiB(!$nMM/d;LY!*BCFRD:Z[!<WB7OhYQg3''>hCT!I6!!*3&>.J$uX'#K8
FJq`aZ![b=!!!**"&?LZ$jh$hD[-:G"U,#/"UG00_iko;!!EQ6"9Ssd_JBDV!!3FM]lX`:!W`B.$kj3]
$NgP<0qkQo#R1>1!Wt!K[QF`o!!*+=_2Nb`G'\XdAgdic!!*,Q!!@c-`ZG$X$it9T$U/iq9FCh>NF_qe
"s\b9*YT5,r;Zfu%fu_HCkW]+!<iT+!"<[t,lRcc"9W"^3=QT4$k>1<D$g7G"op`@/Q.$\!!#9+*`[eG
rW!E0!!!0BHTqK18:35o!!W<$#m:5.-Bhd:!!<9"!")V[0)u1`#lm5Q;"O_i(P7AKrW!0*!!!.FL^a=o
"pYA56Ci4#<`iO+<'qSS!!*<7rW!cD!"'#?#6?V#!&mq51B[[j":tkF!X/uCrZrF"*$GFc":#5=";WjK
!!X&=!!EW=0Hpl)"o\K*,V]o`3%K7s'IZLB!!!ND!#-RV+Aj]j!^]fn*',DI!WW3+'*fLJ+Thct7k"ZK
!=B,7!!<N-*u5q*!!WQ."q(b>.kD>F%KZV50JNb<'bgoT!XAi1"9f8L#UUr*(E<Y[&f;'$3"?&k!"KG[
.OIVW6:ajL4r,.J!WrN+!rN&K!!Wc3!!t:b$2+?"!sJ8s!=T;1!!*B.qZ$X"$Msf)"!&?X!"8r0""=BR
!"CCX!>#>3!;lg$*s)EB"s!g?!!30$!r)cq#Q"K%#7C#%!<`T%!!*03qZ$p("p>\Z'H%l2%+tXY!%%aS
TDRXu!=&r9!%Oq8,7$)h\><.a]9EX&#6k0"Z*U.'XI:=<"8r3U+fDLm"Tnf-!sKR/_`%Pt"ooO+\uVm>
^V7%USm)="!!*'p\jd]jZt"Bf:'uol=9f'4rW<r\Whr3(&i-)k8cT,%#6Fl*!ruHCPT0]L!Wr]8"U#-i
^1d`N!!3OU]l+>_!Wr`9*"N;`#mUksW3%EP#6"ZA">6:N3X5fh!=K]KK6`#qIsm*^R2H,-!<LgQ"+StC
*;fdD$>X)N!#0XJJL;-5L1(,]!#m55Jp2TkE=2aH!WW?')LIA_!!*9."TT'PMC8?&*X-#"J:E99P_b$=
63R]("TUiS(][<l5u)YE!+1j?qZ$p9DIEMR$kcZb-N!iM"98K'.$S'=!XAN%'30oE!!<B,!'lQ5!!!-%
!WWB(!;um<(P.>M!!!-*!WW47HOBfY#QXo*02Ol)84u-AJnrm:!=B_D!##kS'FP-N!&HMA"<f9P2(AY3
('jgB'ES[b-q6Tr8-oA"!X8f3)]BXq!=aJZ!<`W4-Pca`!!*-$,:PT10-UDs!ZVdP!rruB"=+0W6:E(H
9J-Dq2]N#6&-rFA#sgHY$O.)#6ko\%$4I4@!<iHH'Gh,Y$O$Y?%1*(_0GOp,"TS`f2$=$s)%-QJ%KQV8
$Od:@-7T!+'F+dS'GWAf#m(,-$60KT!$V[q)\F,+1F`M.rWE0%ci=(R%/p52"q1nA!!!&s!!NE-)]0V:
q#LEqq#CBtq>^[$"V(tI"9&9#!W<#t!"8r0!"p4P"=!mH"V(S0!!*iEr;Zj.)YX45!<</q!!*3/qZ$X'
%.XB!":"Z%!=BP9!!`Q.!<<-#$O5tukl:nh$(q+T.KTMQ*<7IcR3r:I7@CHHB"=-8!XB#38%5R->?Y,F
"9\f*!&GgoXY'_\"Tnl4*LFZ&!!<K-'p?@[=Db"IOC:d)"U+u1!)gI&$;.1kXGI]%M7Hao#R123"C&aM
PD'9oK"&FD$jR%?rW#Ij!*-q$)ZTmA$46q>$]D]0"98H($@9O3&Hi1A&/AJ>('t-J#WAT_-jKqY!<<<Y
T<^N_!W`<.%NZuA,9S0V5Gsk^!rr?&fDko%!nbL3qu@06ChNkM!%iPT@l]-M"8r33+G"i&3Ari$!!<9)
!WX'WKbaIb!s`V"-i<rN>_6!*1NJ7V0cg2m%fu_uS/hSMKnG.Z!!$Ag0Db_V7?`73DJWg9N*?>]!!ri4
"TTs5>lXj,qZ$Ut$&gbB!!<<'4c`/4!!EB+3$e_+!"^$"LC4(^":"r-!,?fh!!<E!!!4!aG1?Qn$5iaB
(_I>n#6Y832)#@F#ST'_2uj='"U5/:!=sW0,8qRH,Qe&I"U559*&feV"s"9`$k*\#)$U'@!WW3J0GPNZ
3%YdJ*Zc=L,p<L!-OKr)4tJ9G%Kn(3)$Ucj$NgD0(_.670.%bW!!**+$k!(;"TTSZ(CC0M"pbSK$j%Y-
%K[+D!!>,;#R(M?!<<B\*X2cS$N^;R,QJbe"TSN("q`XY$3:,,#SICD!tu4M":"oe/cl+R"9/GL!!*K7
r;[!0)%HWH!W)j#"p4l,!Wr/trsec(!XJf,qu?p)#ljr.%gVh/!!N9$#87:H%KHJ3$2FQ+!<<-+#Qt20
pAb6q!!2ip!<WZ*!!*?7q>^L"q>gNtq#CF')"IY.%gW1$!:0\.!=G:gi[Y!5#mC;WTpHZ"#m1N0VS9U%
#lt>?!_'Ph(&e2%!WrH'!sA]RX0G)=,pF]_-omj13!'6l#T&N770a2=D7,`p"qLq="p@r39+2(STlg\P
$Ac,p":55<!(jt_:JOto<CmCJ]laJf#6Oi(6VtLY)Zp'B$46t>#Dp$#"p"`.#^Nq&,pk#f,r_?j1]dXX
#;hm@4shO",pt')SZXpX"9SW\UP(HH,pFT`1Sg<M!<*#O!!@Pt`#JUS!t/se#lO`,+E!9l@L)i3"!;u.
$2ji)!Wi6"%1dN2*<63F#QOi@EIfS:!!6/M/,fM\7>l""!!!$*!!#*B+92BYLKj`X!bITUrW!B/!%j%2
/heh//h:+[6i?ul"UPA5.udj8"9S`'!!?8]3WKrr!<<*kNCs6O"TeZ9F+>D7!<N66ChsX]!#GY9!"`sr
&c_n5!$-l$#QXu."U#6[GmDn#!<s>=!#lFS#lt#+"Ze(4"V(M4,t9%#-34>V$NUc%-33uEH3"$J"p>#D
1FE/;)&O#))?pj5('"C=$4/j_"p+u0'K[oY!<ic3&.9+3*si5V3$JG7"!oH8"r@pX!$!gC*[)s_-65'-
(B=jW&-2b3!$a'="TSi4":>eN!\H>A!<iT-!\lJ?',D8r(D92;)#s^G%i\27)]';-(`4&+$7\FV"9JW)
,>'p:*Zl14'a[,[!!<-%rrUOI!>#G3!!=/B!sJK$!>>V/!!*E0p](:'r;Zp"!"^"F!!*W:q#CC+r;Zj.
"9&9$!s\W&$NUV=!<E6(!W``B!Vl]s!XAf%!!*<7qZ$X&$i0i()__'g!?iN[!!*9AqZ$X=%Jg&*'FF^<
f`3,r$(h1^/cZ(^"TTdASJD2."9oHKZbMS.!t>S;8[t<-q>`,P"9]mF^Q3quI>*6-N4H,A!!Ei9(luC&
":k\bMRna*$Om4E"^8-#$47)@1]SC%#`Q8p"UG8:&;%_p!s]MR&d1e;W[@lV"T8<f;SnP7!!!'-$O6e<
Mn`^(!!39/B"4IbJqnr6LT-^g!!!*(+df6`KRnW*L5:eiTI^9O#66*DYD%=SIXm-.YC[JjrW20^nc/cB
jNJYC!!E?1Dgi&k!!G!3Lh$hj!!jfuC(UFJ!WiE#!"B*KOC1[X:KUCj@?,CMqu?duJ2$s&&Ir<6>o*JE
$31&hNun?%!C\F9!!6r&3;igZ#[N*4qZ$^MIrlV.!!!-.#mUG_P$\1i!s/<"2Hl8-!!*-$!'QBb:J"DU
:/ujg'`\49!"!Le:/=Y^9h\2^J9;>%!!<39MMOns9iP%f;M8Qaec6-a&HE@S'*SO?!!!9m0+e0c#m(;;
+WE9r!XK2A!#/$^quH]t4U1ug%kfOf<DuU]:/`hg5SF,!#7D)79F_+8!<=K>7O%s9!"9#M6mN-R!##P;
%0S7<)$gog":@RW&d8F;"U>/V75GJU()$QG(F_Es"p,&5!t#YO!]<@\!<NE+"=$#`:b,=;:f]tU9aq(&
$O@><;bBn`:/F_c4?#M6!sT#2'g5#\?X?Q(<'s8%!!N9'rrUjRrrMrr!>u1?!!<6'$k)q4!?_gG!<)ut
#RD7e(`+&1#m(n>!!*o]qu?d$+;t%V!<F,6!!3?3!W2ou((U0@!Wj;Jq#CHu&I8(2!=TkC!"&f?#oOHr
(*"&1,PqHM+=\-F)&X8.)%[5l!!)rt$5"3m)BBe9*"sCqe,UQlC7gP-!!EQ6!#B9Z%fl\6#S74oG?b4M
#mLA]H>3ia!#l%G#7<e5HZaCQH$4=YE(g<:!t5;A@=g'4!X<`K%Sh%`3!9U"#<?iY!t#/2!!*<,>^&11
#lk#]EF]=W!YHC]"9D_Z7g92%!!!$"3dtKQ!!*--$N^>2>^8O:!<E<.'j,9pH?Xa\H>#>E"9SZ+">j\:
H$=LYI=?HS2$F9g!X&`Y@=EQFG^=a`AM4DnrW2iqi;a>g!`=;Z('4R<!!Wcu:^[("!uXEd$N:#.!>.XZ
%e]l3$p[KS5tt9S8leIu!!W<$""m+d!r`08!A6r3)#s[;!$P>[!!!$"!!*'"6X1]3!!WEI9-aKA"9&9'
"U$5J6N-rl"UG>5),W0i!X&Q'!#u%?1K,\%!<E?("$B+K6:=F=:dZB+!<WE0""?_=<!HB&:/=_U*W,mF
![L649i+be779!Gg&V$NDup1C)_)L$!!<N-$oJb""UG>G)$L!i/-#k`"TT#s2#msk#mpq@!!*-&!t>S[
2*E3$)'oRj+U8>U"V25+3tMZ0"p4iN78,!1#n6qN2&lu?!rr<0%KICj'*AjI!#%[7";;IS%13aW*@W'<
&J=sA"<fHI$3q4N"98T4%Kde)%KZb:!<N<>-7pbI,mGeD&ci"=#lXfE"Vqaa#n%1T,9IBr%hK6T!!*63
/0>W>1c66Q#R120rrUjR!<EB#!!!?#!!*6+qZ$X*#P.p"!XT5:!<E;t!!*33qZ$[!&eY!@!"8Q%!<E9!
!!!W+!!30)!Vl]r#Qsi%!<EH$!!rc4"Tni0"Tn`)q>^KrqZ$X!!qu[!"p+f*#mgX]!$;7].4kf*":#55
"</*[#Qb)3#R:SZ*WQ3E"99)d+p.Q?rWE?;*#g+DINKUV*[)R?!!3-)!sp;+#QXo,"9f;W+rpjn$4IFd
#Qb)3"Tnc-!ZE-n!WrK,)C$C2"9f5G$NpPN/J&$k#Qt,/"W&R2%fcS2"pP)/![B$-"U+l-!s8rJ,U"-S
*?Z1)"9AW+":5;P+s@pG+!N!T'aFjH"9JZ-!XohX$OmU[)ANS^!s8N(!SRM`":#5<$O-n@!!!-%$kNO?
!!E<&!!E<$#mLA0"98Q+#l=T%!VZTo!rN$!"p4c(%06S9!sJf-!!*H7#64`.!!!<?"onZ&"TAB,%M/X@
!!<H8#kn<"#T*F>r<+)J"TSQ)!rr<&"p+r:"TST(!!E9%":G;4$Npe>r;ZfuqZ-X!rW!'0"onf0rW!B.
!=TMM'GVDl#R(;4"n)HU!$D=G!!!B1!!!6;!sAr2!"B;;#nmmN#mpY?$3U>2&eG-D#QY/5rW#(`!sBJM
%3m/2#o=]t!sK&?!!*Q?&IAUC!!!'#"V;Fi)CH.$!!`W3#lk&/#S%%=!!EN6!!!<@%NQc>%Nl,j+rh4(
!"9PR!<<-)&IA^N%0ut8!t,\G!XAi0%1*7<!#G_B"U"o1!s8N*!!s&N(^CQZ$4%%K%LE"5!soGG"oSE$
!r`0,&eG*E)%Q`M!s/PW!.k3C!#u+E#R:D2!sT#2!<<*$#6b57"UG5="onW*#6>,7$O-V5!<N)u(BFU?
$OHe:!X&K+"9Sc?#QOl-":,>C!<*',!WiH+!!ET5#S6n70a%I[#64f-"on`.#QXu/!sT/>"9o8?$3CM?
#64f6#mCD5#QtA;$3:,0"UG21":GJ6";Ut@!!WE*"p+i/!!WE.%KZ_9"UGDD!rrH&!"/l6"onZ*#6=l-
!s82s"9AQ(!<LmS!<NZ.!!NE6"98E(qZ%!+"p4i2!!!<2!!*?(!!!<%!!<6%!!;cm!!EB."98N%!!<H0
"TeN$!!E-!"9\i-!<W6#!!E-!!<rf'!!<9&!!N6#!X&Q,r;[')!X8W)!WrQ%!!36,#PS2u"n;Qo!<`]-
!<3-"!!!&t!!*9*lN$8O,QS)M!WiK)!!sGG!rr<(&eP*J&f1WT!<<E3"on],!=&i6"pFi()Zg0]#QPAH
"98]A$NUGH#QOi6%Kce<"TS]/!WE'%#9G?,#Q=]?"p=u0!!Nl@!!!'2"onW)":-%l+V"\e*&/TF!WWNC
&-2b4$3gP5$5*UE!Wi`>$NgG3":knN!!<3$!<<*#!!*'&#lt>C()RYqr;Zp#!WiE%!!NQ5#m:84qZ$s.
"Te]D%0?V6!WppQJcMPG+9DNI%L`C=!sJo0!!**("Te`*!<rZ8#64f+!!!99$31/5#Qt8*!"o>6!!<3'
!!3-&&-)\2!rrK2&H2\<!XT,8!s/N)"p+f+r;]Lo!sAZ,!!<N2!W`?&$4-\;!!N?'!!33%!s&B,#mg_9
!WrW4$NL/."9\f0!=9)<!sSf,!WWB-#ljr-!WWB+!XAu7"9Af6$3^D0(B=F:%L)q9!!!$(!<iW9$3pb>
$4I1?!;urP!!*0+r;Zj+!r)a'"9\f,!rr<-"T\W.rVup!r;Zm#!X&E)&-;q?#QtA;$3:,.!!!**#m().
rVus%!WE'-!<EB1#mgb8!!*60#5/#t!=&N'$Np_:#6Y25!s8N,&,ZD-!W)it!X8Q'rrW&t$NUM7!<<*#
!s8T)!rN$&"T\T'!<WQ*"TAB)!XAo1!!2Tif`32s!='G\&-)\=)@QlU!uMph!!!9B(D$cO#6t80!YZ:]
!<N#s!WrQ,qu@E4!>5V;#7^h9!!3?+!t5D=&Jl)_r;Zs."pPA:rW!$$!!*'.%0HS7%h8gE!"0A="8;d(
"qM.E!!!34"U,DH#lXfF#n@CG#n%%S&e+mB#7CnM$j[":!W`9-$OQk6"Tei+!#Pb;"Vqd]!rrB*$O@O\
&0;Gf"V;1I!"/u0"9/Ge!.k32!<*$%!<<-%rW3$!&HW"7!!**%!W`?&!W`<%!WiDq!!WN*!<E9)"TAK1
!X&N)!!30&!WrK&!!iW.!!!$"!!<6#!=&T*!!*'#!!2rs#6=f,!<<3%!rDs$!<<*$!Wi3!!<E9!!!iW+
!<N9&!W`?$!W`<'&-)_4!<<-$!!*-$!s8]/"9JE#$NpS5!WiB'!W`B("TAK'"TAK(!<UdO!!3#u!!2fo
!!2rsrrM`l!<E2q!!!&s!<*!%!!*'"!Vud!!<N6&!Up'h!W<!"!WW?%!!E?'!!*/j!!!&q!<*#t!!iT+
!!*'"!<<-!!WW6!!W2p!!<N;@!$;7F#6tD6!sJl4!sAZ1#6k53!s]#5"9J]0!s&H+"pFW"&-rLG"pbJ@
#n%"D"U,#1!sAK)!W`9%%0Qh7!!*'""9JZ/!s/T&!WW?%!<*$)!<<3'!!3-$qZ$Wt!<*'!!!<9(!<E*#
rW!3*!s/H(!s8`3r<*]9"Tec.!<<-#!!*-$!WiK+"8i-%!=/r6"TAK5"pG8<$4R=J#n%+H#71J+!.k3&
!;ccY!W3#h!;?Ko!rN)l!;llN!;HQl!W3&s!Vucr!Vlik!W2rq!Pe^4!;ll\!!!&-!;loq!WN/t!!!&q
!l+fu"8i;q!;m#u#64u,!rrK%!rrDs!!!)u"8i5O!!!)u"8i?"!Vucr!Vlfj"9/Q("oJT*!fI&1!9aFF
!W3#b!!E<'!!*,u!qlWl!WW8f!:'XY!W3&s!Vufq!W)us!rE#?!9aF\!TjC[!VQNk!S%2J!W)lp!rE#p
!<*#r!rN)<!9OC`"TAPt!;6R!!s8T,"8i9%!quZp"8r?&"8i5T!;llp"8i?"!Vufq!W)rl"8;ti!.k4:
!4;e,!WE)r!VHHj!U0U5!!!&)!.k4=!!!&#!:0d\!;lor!!*-'rW;s!p&G'oquciuec>CFp&G'nq>g*e
pB$c`JcMAB!!23^JcLB&KE2#RmK2\S!!N9&!!E-#o`4^feH#=FJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&lMuM:JcLB&JcLB&JcLB&JcLB&JcMVIJ,~>

%%EndBinary
grestore
np
77.071 -54.2521 mo
217.262 -54.2521 li
217.262 -92.0521 li
77.071 -92.0521 li
cp
0 0 0 0 cmyk
f
77.071 -52.9331 mo
218.616 -52.9331 li
218.616 -140.47 li
77.071 -140.47 li
cp
97.986 -67.448 mo
97.986 -63.467 li
96.012 -61.5111 li
94.035 -63.467 li
94.036 -67.447 li
94.038 -67.837 94.354 -68.1531 94.744 -68.1531 cv
94.744 -68.9801 li
94.289 -69.3511 93.997 -69.916 93.997 -70.5491 cv
93.998 -71.665 94.904 -72.5701 96.023 -72.5701 cv
97.14 -72.571 98.046 -71.665 98.046 -70.5491 cv
98.046 -69.91 97.749 -69.3401 97.284 -68.969 cv
97.284 -68.1531 li
97.673 -68.15 97.986 -67.8351 97.986 -67.448 cv
99.555 -65.0321 mo
98.817 -64.295 li
98.817 -67.448 li
98.817 -67.979 98.547 -68.448 98.137 -68.723 cv
98.562 -69.212 98.819 -69.8511 98.819 -70.5491 cv
98.819 -72.092 97.567 -73.342 96.023 -73.342 cv
94.479 -73.3411 93.226 -72.0911 93.226 -70.5491 cv
93.226 -69.8551 93.48 -69.219 93.9 -68.7301 cv
93.483 -68.4561 93.207 -67.983 93.207 -67.447 cv
93.209 -64.2931 li
92.469 -65.031 li
92.47 -71.599 li
92.476 -71.599 li
92.58 -73.4601 94.124 -74.937 96.013 -74.937 cv
97.97 -74.937 99.556 -73.353 99.556 -71.399 cv
cp
101.269 -66.7421 mo
100.399 -65.875 li
100.4 -71.399 li
100.4 -73.8191 98.436 -75.781 96.014 -75.781 cv
93.658 -75.78 91.736 -73.926 91.63 -71.599 cv
91.625 -65.8721 li
90.754 -66.7411 li
90.754 -71.125 li
90.754 -74.425 92.969 -77.208 95.995 -78.073 cv
99.038 -77.2311 101.271 -74.4391 101.27 -71.1271 cv
cp
102.041 -67.53 mo
102.041 -71.1271 li
102.041 -74.868 99.47 -78.0081 95.995 -78.88 cv
92.593 -78 90.065 -74.9541 89.982 -71.3041 cv
89.981 -67.525 li
85.92 -71.5811 li
96.01 -81.66 li
106.1 -71.583 li
cp
130.824 -67.983 mo
130.824 -66.4541 130.37 -64.323 128.785 -63.1111 cv
126.892 -61.6621 123.856 -61.3051 120.578 -61.3051 cv
117.035 -61.3051 113.986 -61.634 111.973 -63.271 cv
110.468 -64.495 110.094 -66.6361 110.094 -67.969 cv
110.094 -81.66 li
116.729 -81.66 li
116.729 -70.019 li
116.729 -69.2511 116.875 -68.447 117.478 -67.7311 cv
118.145 -66.941 119.219 -66.922 120.463 -66.922 cv
121.588 -66.922 122.451 -66.983 123.272 -67.578 cv
124.006 -68.108 124.213 -69.5291 124.213 -70.182 cv
124.213 -81.66 li
130.824 -81.66 li
cp
155.886 -62.703 mo
155.886 -62.703 153.07 -61.2891 146.969 -61.2891 cv
142.2 -61.2891 134.908 -63.1001 134.908 -71.5891 cv
134.908 -81.51 144.241 -81.9751 146.969 -81.9751 cv
151.237 -81.9751 155.039 -80.8551 155.039 -80.8551 cv
155.436 -75.6101 li
155.436 -75.6101 152.016 -77.213 148.11 -77.213 cv
143.549 -77.213 141.716 -74.8551 141.716 -71.52 cv
141.716 -68.1731 144.308 -66.05 148.144 -66.05 cv
151.077 -66.05 156.059 -67.879 156.059 -67.879 cv
cp
177.874 -61.5691 mo
160.143 -61.5691 li
160.143 -81.66 li
167.138 -81.66 li
167.138 -67.316 li
177.874 -67.316 li
cp
209.769 -61.5691 mo
203.373 -61.5691 li
203.373 -73.01 li
197.432 -61.5691 li
194.307 -61.5691 li
188.334 -73.01 li
188.334 -61.5691 li
181.957 -61.5691 li
181.957 -81.66 li
188.927 -81.66 li
195.853 -70.0281 li
202.812 -81.66 li
209.769 -81.66 li
cp
.25 1 .73 .23 cmyk
f
215.283 -43.7155 mo
218.382 -43.7155 li
218.382 -44.5784 li
216.567 -44.5784 li
216.567 -48.4984 li
215.283 -48.4984 li
cp
212.887 -45.5934 mo
211.655 -45.5934 li
212.307 -47.5814 li
212.323 -47.5814 li
cp
213.476 -43.7155 mo
214.794 -43.7155 li
213.036 -48.4984 li
211.624 -48.4984 li
209.804 -43.7155 li
211.044 -43.7155 li
211.42 -44.7854 li
213.138 -44.7854 li
cp
205.094 -43.7155 mo
206.224 -43.7155 li
206.224 -47.1764 li
206.24 -47.1764 li
207.818 -43.7155 li
209.339 -43.7155 li
209.339 -48.4984 li
208.211 -48.4984 li
208.211 -45.1824 li
208.195 -45.1824 li
206.602 -48.4984 li
205.094 -48.4984 li
cp
200.981 -46.1074 mo
200.981 -47.0264 201.24 -47.7734 201.986 -47.7734 cv
202.732 -47.7734 202.999 -47.0264 202.999 -46.1074 cv
202.999 -45.1884 202.732 -44.4414 201.986 -44.4414 cv
201.24 -44.4414 200.981 -45.1884 200.981 -46.1074 cv
199.664 -46.1074 mo
199.664 -44.7014 200.408 -43.6334 201.986 -43.6334 cv
203.564 -43.6334 204.317 -44.7014 204.317 -46.1074 cv
204.317 -47.5134 203.564 -48.5814 201.986 -48.5814 cv
200.408 -48.5814 199.664 -47.5134 199.664 -46.1074 cv
197.576 -43.7155 mo
198.862 -43.7155 li
198.862 -48.4984 li
197.576 -48.4984 li
cp
196.901 -48.3484 mo
196.688 -48.4233 196.273 -48.5814 195.456 -48.5814 cv
194.342 -48.5814 192.993 -47.8824 192.993 -46.1274 cv
192.993 -44.6124 194.044 -43.6334 195.542 -43.6334 cv
196.242 -43.6334 196.696 -43.7424 196.916 -43.8044 cv
196.869 -44.8054 li
196.744 -44.7563 196.374 -44.5504 195.746 -44.5504 cv
194.93 -44.5504 194.311 -45.1824 194.311 -46.1144 cv
194.311 -47.0814 194.86 -47.6914 195.723 -47.6914 cv
196.313 -47.6914 196.641 -47.5134 196.839 -47.4164 cv
cp
190.897 -45.5934 mo
189.665 -45.5934 li
190.316 -47.5814 li
190.332 -47.5814 li
cp
191.485 -43.7155 mo
192.804 -43.7155 li
191.046 -48.4984 li
189.634 -48.4984 li
187.813 -43.7155 li
189.053 -43.7155 li
189.43 -44.7854 li
191.148 -44.7854 li
cp
183.104 -43.7155 mo
184.234 -43.7155 li
184.234 -47.1764 li
184.249 -47.1764 li
185.827 -43.7155 li
187.349 -43.7155 li
187.349 -48.4984 li
186.22 -48.4984 li
186.22 -45.1824 li
186.204 -45.1824 li
184.61 -48.4984 li
183.104 -48.4984 li
cp
179.791 -47.6914 mo
180.184 -47.6914 li
180.875 -47.6914 180.947 -47.2864 180.947 -47.0874 cv
180.947 -46.7454 180.688 -46.4564 180.192 -46.4564 cv
179.791 -46.4564 li
cp
178.552 -43.7155 mo
179.839 -43.7155 li
179.839 -45.6484 li
180.309 -45.6484 180.483 -45.6484 180.694 -44.9974 cv
181.118 -43.7155 li
182.467 -43.7155 li
181.903 -45.2784 li
181.699 -45.8474 181.542 -46.0385 181.143 -46.0804 cv
181.143 -46.0944 li
182.201 -46.2784 182.232 -47.0674 182.232 -47.2664 cv
182.232 -48.1504 181.464 -48.4984 180.561 -48.4984 cv
178.552 -48.4984 li
cp
174.559 -43.7155 mo
177.814 -43.7155 li
177.814 -44.5504 li
175.798 -44.5504 li
175.798 -45.7584 li
177.625 -45.7584 li
177.625 -46.5934 li
175.798 -46.5934 li
175.798 -47.6635 li
177.719 -47.6635 li
177.719 -48.4984 li
174.559 -48.4984 li
cp
171.512 -43.7155 mo
172.799 -43.7155 li
172.799 -47.6364 li
173.992 -47.6364 li
173.992 -48.4984 li
170.319 -48.4984 li
170.319 -47.6364 li
171.512 -47.6364 li
cp
165.533 -43.7155 mo
166.661 -43.7155 li
166.661 -47.1764 li
166.677 -47.1764 li
168.257 -43.7155 li
169.777 -43.7155 li
169.777 -48.4984 li
168.648 -48.4984 li
168.648 -45.1824 li
168.632 -45.1824 li
167.039 -48.4984 li
165.533 -48.4984 li
cp
163.311 -43.7155 mo
164.597 -43.7155 li
164.597 -48.4984 li
163.311 -48.4984 li
cp
158.955 -45.5934 mo
157.723 -45.5934 li
158.375 -47.5814 li
158.391 -47.5814 li
cp
159.544 -43.7155 mo
160.861 -43.7155 li
159.104 -48.4984 li
157.691 -48.4984 li
155.871 -43.7155 li
157.111 -43.7155 li
157.488 -44.7854 li
159.206 -44.7854 li
cp
154.098 -43.7155 mo
155.384 -43.7155 li
155.384 -48.4984 li
154.098 -48.4984 li
cp
153.423 -48.3484 mo
153.21 -48.4233 152.794 -48.5814 151.979 -48.5814 cv
150.863 -48.5814 149.514 -47.8824 149.514 -46.1274 cv
149.514 -44.6124 150.565 -43.6334 152.064 -43.6334 cv
152.762 -43.6334 153.218 -43.7424 153.438 -43.8044 cv
153.391 -44.8054 li
153.266 -44.7563 152.896 -44.5504 152.268 -44.5504 cv
151.452 -44.5504 150.833 -45.1824 150.833 -46.1144 cv
150.833 -47.0814 151.382 -47.6914 152.244 -47.6914 cv
152.834 -47.6914 153.163 -47.5134 153.359 -47.4164 cv
cp
144.492 -43.7155 mo
145.621 -43.7155 li
145.621 -47.1764 li
145.637 -47.1764 li
147.215 -43.7155 li
148.738 -43.7155 li
148.738 -48.4984 li
147.607 -48.4984 li
147.607 -45.1824 li
147.592 -45.1824 li
145.999 -48.4984 li
144.492 -48.4984 li
cp
140.52 -43.7155 mo
143.777 -43.7155 li
143.777 -44.5504 li
141.76 -44.5504 li
141.76 -45.7584 li
143.589 -45.7584 li
143.589 -46.5934 li
141.76 -46.5934 li
141.76 -47.6635 li
143.682 -47.6635 li
143.682 -48.4984 li
140.52 -48.4984 li
cp
136.824 -43.7155 mo
139.923 -43.7155 li
139.923 -44.5784 li
138.111 -44.5784 li
138.111 -48.4984 li
136.824 -48.4984 li
cp
132.83 -43.7155 mo
136.085 -43.7155 li
136.085 -44.5504 li
134.068 -44.5504 li
134.068 -45.7584 li
135.897 -45.7584 li
135.897 -46.5934 li
134.068 -46.5934 li
134.068 -47.6635 li
135.992 -47.6635 li
135.992 -48.4984 li
132.83 -48.4984 li
cp
132.154 -48.3484 mo
131.941 -48.4233 131.527 -48.5814 130.71 -48.5814 cv
129.596 -48.5814 128.246 -47.8824 128.246 -46.1274 cv
128.246 -44.6124 129.298 -43.6334 130.796 -43.6334 cv
131.494 -43.6334 131.951 -43.7424 132.169 -43.8044 cv
132.122 -44.8054 li
131.997 -44.7563 131.628 -44.5504 131.001 -44.5504 cv
130.184 -44.5504 129.564 -45.1824 129.564 -46.1144 cv
129.564 -47.0814 130.113 -47.6914 130.977 -47.6914 cv
131.565 -47.6914 131.895 -47.5134 132.091 -47.4164 cv
cp
124.809 -46.2513 mo
123.224 -43.7155 li
124.604 -43.7155 li
125.593 -45.4283 li
126.465 -43.7155 li
127.908 -43.7155 li
126.362 -46.2513 li
127.799 -48.4984 li
126.418 -48.4984 li
125.593 -46.9984 li
124.848 -48.4984 li
123.405 -48.4984 li
cp
119.693 -43.7155 mo
122.949 -43.7155 li
122.949 -44.5504 li
120.931 -44.5504 li
120.931 -45.7584 li
122.759 -45.7584 li
122.759 -46.5934 li
120.931 -46.5934 li
120.931 -47.6635 li
122.854 -47.6635 li
122.854 -48.4984 li
119.693 -48.4984 li
cp
113.736 -43.7155 mo
116.992 -43.7155 li
116.992 -44.5504 li
114.975 -44.5504 li
114.975 -45.7584 li
116.804 -45.7584 li
116.804 -46.5934 li
114.975 -46.5934 li
114.975 -47.6635 li
116.897 -47.6635 li
116.897 -48.4984 li
113.736 -48.4984 li
cp
109.866 -47.6635 mo
110.195 -47.6635 li
111.193 -47.6635 111.624 -47.0544 111.624 -46.0654 cv
111.624 -45.1954 111.209 -44.5504 110.273 -44.5504 cv
109.866 -44.5504 li
cp
108.579 -43.7155 mo
110.36 -43.7155 li
111.743 -43.7155 112.974 -44.4144 112.974 -46.0654 cv
112.974 -47.8694 111.757 -48.4984 110.525 -48.4984 cv
108.579 -48.4984 li
cp
105.518 -48.4174 mo
105.047 -48.5063 104.733 -48.5814 104.231 -48.5814 cv
102.395 -48.5814 102.333 -47.3624 102.333 -47.2184 cv
102.333 -45.5104 104.49 -45.9634 104.49 -45.0385 cv
104.49 -44.6473 104.098 -44.4684 103.688 -44.4684 cv
103.211 -44.4684 102.874 -44.6334 102.489 -44.7634 cv
102.418 -43.8314 li
102.654 -43.7704 103.226 -43.6334 103.894 -43.6334 cv
104.985 -43.6334 105.808 -44.1814 105.808 -45.0864 cv
105.808 -46.7864 103.649 -46.3813 103.649 -47.2524 cv
103.649 -47.6094 103.964 -47.7734 104.381 -47.7734 cv
104.726 -47.7734 105.157 -47.6635 105.463 -47.5264 cv
cp
97.5605 -45.4484 mo
97.5605 -44.2634 98.3365 -43.6334 99.5695 -43.6334 cv
100.801 -43.6334 101.577 -44.2634 101.577 -45.4484 cv
101.577 -48.4984 li
100.292 -48.4984 li
100.292 -45.2714 li
100.292 -44.7914 100.088 -44.4963 99.5695 -44.4963 cv
99.0505 -44.4963 98.8465 -44.7914 98.8465 -45.2714 cv
98.8465 -48.4984 li
97.5605 -48.4984 li
cp
93.3305 -43.7155 mo
94.6165 -43.7155 li
94.6165 -45.4634 li
95.2365 -45.4634 li
96.4375 -45.4634 96.9555 -46.1614 96.9555 -46.9774 cv
96.9555 -48.0134 96.2485 -48.4984 95.0795 -48.4984 cv
93.3305 -48.4984 li
cp
94.5695 -46.2983 mo
94.5695 -47.6635 li
94.9075 -47.6635 li
95.4175 -47.6635 95.6685 -47.4584 95.6685 -46.9844 cv
95.6685 -46.5394 95.3785 -46.2983 94.9775 -46.2983 cv
cp
91.1955 -43.7155 mo
92.3715 -43.7155 li
92.3715 -48.4984 li
90.5205 -48.4984 li
89.5625 -45.4224 li
89.5475 -45.4224 li
88.6595 -48.4984 li
86.7225 -48.4984 li
86.7225 -43.7155 li
87.8985 -43.7155 li
87.8985 -47.4994 li
87.9135 -47.4994 li
89.0995 -43.7155 li
89.9475 -43.7155 li
91.1795 -47.4994 li
91.1955 -47.4994 li
cp
84.3285 -45.5934 mo
83.0965 -45.5934 li
83.7475 -47.5814 li
83.7635 -47.5814 li
cp
84.9165 -43.7155 mo
86.2345 -43.7155 li
84.4765 -48.4984 li
83.0645 -48.4984 li
81.2445 -43.7155 li
82.4845 -43.7155 li
82.8605 -44.7854 li
84.5795 -44.7854 li
cp
81.0395 -48.3484 mo
80.8275 -48.4233 80.4115 -48.5814 79.5955 -48.5814 cv
78.4805 -48.5814 77.1315 -47.8824 77.1315 -46.1274 cv
77.1315 -44.6124 78.1825 -43.6334 79.6815 -43.6334 cv
80.3795 -43.6334 80.8355 -43.7424 81.0545 -43.8044 cv
81.0075 -44.8054 li
80.8825 -44.7563 80.5135 -44.5504 79.8855 -44.5504 cv
79.0695 -44.5504 78.4495 -45.1824 78.4495 -46.1144 cv
78.4495 -47.0814 78.9985 -47.6914 79.8615 -47.6914 cv
80.4505 -47.6914 80.7805 -47.5134 80.9765 -47.4164 cv
cp
f
402.48 -65.8588 mo
402.48 -65.2427 402.447 -64.8237 402.379 -64.6038 cv
402.282 -64.2687 402.077 -63.9838 401.765 -63.7517 cv
401.344 -63.4467 400.901 -63.2947 400.438 -63.2947 cv
400.022 -63.2947 399.68 -63.4247 399.412 -63.6877 cv
399.142 -63.9507 399.008 -64.2617 399.008 -64.6217 cv
399.008 -64.9886 399.176 -65.2906 399.512 -65.5287 cv
399.732 -65.6757 400.199 -65.8257 400.914 -65.9777 cv
401.628 -66.1307 402.15 -66.2617 402.48 -66.3717 cv
cp
399.659 -69.4087 mo
399.916 -69.5887 400.272 -69.6787 400.73 -69.6787 cv
401.408 -69.6787 401.869 -69.5737 402.114 -69.3636 cv
402.358 -69.1527 402.48 -68.7997 402.48 -68.3047 cv
402.48 -68.0477 li
402.017 -67.8527 401.182 -67.6427 399.979 -67.4156 cv
399.088 -67.2448 398.405 -67.0447 397.932 -66.8167 cv
397.459 -66.5876 397.091 -66.2577 396.828 -65.8278 cv
396.565 -65.3958 396.434 -64.9058 396.434 -64.3567 cv
396.434 -63.5258 396.722 -62.8387 397.3 -62.2957 cv
397.877 -61.7517 398.666 -61.4797 399.668 -61.4797 cv
400.236 -61.4797 400.77 -61.5876 401.271 -61.8007 cv
401.772 -62.0146 402.242 -62.3347 402.682 -62.7617 cv
402.7 -62.7137 402.73 -62.6127 402.773 -62.4607 cv
402.871 -62.1248 402.953 -61.8707 403.021 -61.6997 cv
405.567 -61.6997 li
405.342 -62.1637 405.187 -62.5997 405.105 -63.0048 cv
405.022 -63.4117 404.981 -64.0417 404.981 -64.8967 cv
405.009 -67.9017 li
405.009 -69.0197 404.894 -69.7867 404.665 -70.2057 cv
404.436 -70.6237 404.041 -70.9697 403.479 -71.2407 cv
402.917 -71.5127 402.062 -71.6487 400.914 -71.6487 cv
399.65 -71.6487 398.697 -71.4227 398.056 -70.9707 cv
397.414 -70.5187 396.962 -69.8228 396.7 -68.8817 cv
399.036 -68.4607 li
399.194 -68.9117 399.403 -69.2288 399.659 -69.4087 cv
385.643 -75.1298 mo
385.643 -61.6997 li
388.217 -61.6997 li
388.217 -66.5737 li
388.217 -67.3917 388.295 -68.0096 388.451 -68.4287 cv
388.606 -68.8467 388.852 -69.1597 389.188 -69.3677 cv
389.524 -69.5747 389.906 -69.6787 390.333 -69.6787 cv
390.705 -69.6787 391.015 -69.5977 391.263 -69.4357 cv
391.51 -69.2737 391.683 -69.0557 391.78 -68.7817 cv
391.878 -68.5067 391.927 -67.8588 391.927 -66.8397 cv
391.927 -61.6997 li
394.501 -61.6997 li
394.501 -67.4067 li
394.501 -68.2797 394.457 -68.9247 394.369 -69.3397 cv
394.279 -69.7557 394.115 -70.1337 393.874 -70.4757 cv
393.633 -70.8177 393.274 -71.0988 392.797 -71.3187 cv
392.321 -71.5387 391.786 -71.6487 391.195 -71.6487 cv
390.04 -71.6487 389.047 -71.1627 388.217 -70.1917 cv
388.217 -75.1298 li
cp
382.193 -70.8837 mo
381.494 -71.3927 380.552 -71.6487 379.367 -71.6487 cv
377.92 -71.6487 376.772 -71.2017 375.923 -70.3068 cv
375.074 -69.4117 374.65 -68.1606 374.65 -66.5547 cv
374.65 -64.9677 375.073 -63.7247 375.919 -62.8267 cv
376.764 -61.9287 377.898 -61.4797 379.322 -61.4797 cv
380.573 -61.4797 381.572 -61.7767 382.317 -62.3687 cv
383.063 -62.9617 383.567 -63.8367 383.828 -64.9977 cv
381.3 -65.4287 li
381.172 -64.7507 380.953 -64.2727 380.641 -63.9948 cv
380.33 -63.7167 379.929 -63.5778 379.441 -63.5778 cv
378.787 -63.5778 378.267 -63.8167 377.879 -64.2927 cv
377.491 -64.7687 377.297 -65.5847 377.297 -66.7386 cv
377.297 -67.7758 377.488 -68.5177 377.87 -68.9597 cv
378.251 -69.4027 378.763 -69.6248 379.404 -69.6248 cv
379.887 -69.6248 380.279 -69.4957 380.582 -69.2397 cv
380.884 -68.9827 381.077 -68.6007 381.163 -68.0947 cv
383.7 -68.5518 li
383.396 -69.5967 382.893 -70.3737 382.193 -70.8837 cv
372.607 -67.7467 mo
372.607 -68.4977 372.559 -69.0737 372.464 -69.4777 cv
372.37 -69.8807 372.202 -70.2407 371.961 -70.5587 cv
371.719 -70.8757 371.364 -71.1367 370.894 -71.3417 cv
370.423 -71.5457 369.904 -71.6487 369.337 -71.6487 cv
368.048 -71.6487 366.979 -71.0988 366.13 -69.9998 cv
366.13 -71.4287 li
363.739 -71.4287 li
363.739 -61.6997 li
366.314 -61.6997 li
366.314 -66.1067 li
366.314 -67.1927 366.379 -67.9377 366.51 -68.3417 cv
366.642 -68.7448 366.885 -69.0687 367.238 -69.3127 cv
367.593 -69.5568 367.992 -69.6787 368.439 -69.6787 cv
368.786 -69.6787 369.085 -69.5938 369.332 -69.4227 cv
369.579 -69.2517 369.758 -69.0117 369.868 -68.7028 cv
369.978 -68.3947 370.032 -67.7147 370.032 -66.6647 cv
370.032 -61.6997 li
372.607 -61.6997 li
cp
358.691 -65.8588 mo
358.691 -65.2427 358.658 -64.8237 358.591 -64.6038 cv
358.493 -64.2687 358.288 -63.9838 357.977 -63.7517 cv
357.555 -63.4467 357.113 -63.2947 356.648 -63.2947 cv
356.234 -63.2947 355.892 -63.4247 355.622 -63.6877 cv
355.354 -63.9507 355.22 -64.2617 355.22 -64.6217 cv
355.22 -64.9886 355.388 -65.2906 355.723 -65.5287 cv
355.944 -65.6757 356.41 -65.8257 357.125 -65.9777 cv
357.84 -66.1307 358.362 -66.2617 358.691 -66.3717 cv
cp
355.87 -69.4087 mo
356.126 -69.5887 356.484 -69.6787 356.942 -69.6787 cv
357.62 -69.6787 358.081 -69.5737 358.325 -69.3636 cv
358.569 -69.1527 358.691 -68.7997 358.691 -68.3047 cv
358.691 -68.0477 li
358.227 -67.8527 357.393 -67.6427 356.191 -67.4156 cv
355.299 -67.2448 354.616 -67.0447 354.143 -66.8167 cv
353.67 -66.5876 353.301 -66.2577 353.04 -65.8278 cv
352.777 -65.3958 352.645 -64.9058 352.645 -64.3567 cv
352.645 -63.5258 352.934 -62.8387 353.511 -62.2957 cv
354.088 -61.7517 354.877 -61.4797 355.879 -61.4797 cv
356.447 -61.4797 356.981 -61.5876 357.482 -61.8007 cv
357.983 -62.0146 358.453 -62.3347 358.893 -62.7617 cv
358.911 -62.7137 358.942 -62.6127 358.985 -62.4607 cv
359.082 -62.1248 359.165 -61.8707 359.232 -61.6997 cv
361.779 -61.6997 li
361.552 -62.1637 361.399 -62.5997 361.316 -63.0048 cv
361.234 -63.4117 361.192 -64.0417 361.192 -64.8967 cv
361.22 -67.9017 li
361.22 -69.0197 361.106 -69.7867 360.877 -70.2057 cv
360.647 -70.6237 360.252 -70.9697 359.69 -71.2407 cv
359.128 -71.5127 358.273 -71.6487 357.125 -71.6487 cv
355.861 -71.6487 354.908 -71.4227 354.266 -70.9707 cv
353.625 -70.5187 353.173 -69.8228 352.911 -68.8817 cv
355.247 -68.4607 li
355.406 -68.9117 355.613 -69.2288 355.87 -69.4087 cv
340.196 -61.6997 mo
340.196 -72.2717 li
342.852 -61.6997 li
345.463 -61.6997 li
348.129 -72.2717 li
348.129 -61.6997 li
350.648 -61.6997 li
350.648 -75.1298 li
346.581 -75.1298 li
344.172 -65.9688 li
341.735 -75.1298 li
337.676 -75.1298 li
337.676 -61.6997 li
cp
327.416 -65.8588 mo
327.416 -65.2427 327.383 -64.8237 327.315 -64.6038 cv
327.218 -64.2687 327.014 -63.9838 326.702 -63.7517 cv
326.28 -63.4467 325.837 -63.2947 325.374 -63.2947 cv
324.958 -63.2947 324.616 -63.4247 324.348 -63.6877 cv
324.078 -63.9507 323.944 -64.2617 323.944 -64.6217 cv
323.944 -64.9886 324.112 -65.2906 324.448 -65.5287 cv
324.668 -65.6757 325.135 -65.8257 325.85 -65.9777 cv
326.564 -66.1307 327.086 -66.2617 327.416 -66.3717 cv
cp
324.595 -69.4087 mo
324.852 -69.5887 325.208 -69.6787 325.667 -69.6787 cv
326.344 -69.6787 326.805 -69.5737 327.05 -69.3636 cv
327.294 -69.1527 327.416 -68.7997 327.416 -68.3047 cv
327.416 -68.0477 li
326.953 -67.8527 326.118 -67.6427 324.915 -67.4156 cv
324.024 -67.2448 323.341 -67.0447 322.868 -66.8167 cv
322.395 -66.5876 322.027 -66.2577 321.764 -65.8278 cv
321.501 -65.3958 321.37 -64.9058 321.37 -64.3567 cv
321.37 -63.5258 321.658 -62.8387 322.236 -62.2957 cv
322.813 -61.7517 323.602 -61.4797 324.604 -61.4797 cv
325.172 -61.4797 325.707 -61.5876 326.207 -61.8007 cv
326.708 -62.0146 327.178 -62.3347 327.618 -62.7617 cv
327.637 -62.7137 327.666 -62.6127 327.709 -62.4607 cv
327.807 -62.1248 327.889 -61.8707 327.957 -61.6997 cv
330.503 -61.6997 li
330.278 -62.1637 330.123 -62.5997 330.041 -63.0048 cv
329.958 -63.4117 329.918 -64.0417 329.918 -64.8967 cv
329.945 -67.9017 li
329.945 -69.0197 329.83 -69.7867 329.601 -70.2057 cv
329.372 -70.6237 328.977 -70.9697 328.415 -71.2407 cv
327.853 -71.5127 326.998 -71.6487 325.85 -71.6487 cv
324.586 -71.6487 323.633 -71.4227 322.992 -70.9707 cv
322.351 -70.5187 321.898 -69.8228 321.636 -68.8817 cv
323.972 -68.4607 li
324.13 -68.9117 324.338 -69.2288 324.595 -69.4087 cv
320.133 -61.6997 mo
320.133 -63.9626 li
313.391 -63.9626 li
313.391 -75.0197 li
310.679 -75.0197 li
310.679 -61.6997 li
cp
304.648 -66.6187 mo
304.971 -66.6187 305.414 -66.4147 305.979 -66.0057 cv
306.356 -65.7307 306.632 -65.5568 306.806 -65.4827 cv
306.98 -65.4097 307.159 -65.3727 307.342 -65.3727 cv
307.665 -65.3727 307.977 -65.5017 308.279 -65.7577 cv
308.582 -66.0146 308.817 -66.2887 308.986 -66.5828 cv
308.986 -69.0557 li
308.729 -68.5988 308.466 -68.2637 308.197 -68.0527 cv
307.927 -67.8427 307.69 -67.7367 307.485 -67.7367 cv
307.305 -67.7367 306.963 -67.9058 306.46 -68.2457 cv
305.956 -68.5837 305.607 -68.7917 305.413 -68.8687 cv
305.218 -68.9447 305.006 -68.9827 304.775 -68.9827 cv
304.156 -68.9827 303.613 -68.5607 303.148 -67.7188 cv
303.148 -65.3457 li
303.636 -66.1947 304.135 -66.6187 304.648 -66.6187 cv
299.06 -65.8588 mo
299.06 -65.2427 299.027 -64.8237 298.96 -64.6038 cv
298.862 -64.2687 298.658 -63.9838 298.346 -63.7517 cv
297.925 -63.4467 297.482 -63.2947 297.018 -63.2947 cv
296.602 -63.2947 296.26 -63.4247 295.992 -63.6877 cv
295.723 -63.9507 295.589 -64.2617 295.589 -64.6217 cv
295.589 -64.9886 295.756 -65.2906 296.093 -65.5287 cv
296.312 -65.6757 296.78 -65.8257 297.494 -65.9777 cv
298.208 -66.1307 298.731 -66.2617 299.06 -66.3717 cv
cp
296.239 -69.4087 mo
296.496 -69.5887 296.853 -69.6787 297.311 -69.6787 cv
297.989 -69.6787 298.45 -69.5737 298.694 -69.3636 cv
298.939 -69.1527 299.06 -68.7997 299.06 -68.3047 cv
299.06 -68.0477 li
298.597 -67.8527 297.763 -67.6427 296.559 -67.4156 cv
295.668 -67.2448 294.986 -67.0447 294.512 -66.8167 cv
294.039 -66.5876 293.671 -66.2577 293.408 -65.8278 cv
293.146 -65.3958 293.014 -64.9058 293.014 -64.3567 cv
293.014 -63.5258 293.303 -62.8387 293.88 -62.2957 cv
294.458 -61.7517 295.247 -61.4797 296.248 -61.4797 cv
296.816 -61.4797 297.351 -61.5876 297.852 -61.8007 cv
298.352 -62.0146 298.822 -62.3347 299.262 -62.7617 cv
299.281 -62.7137 299.311 -62.6127 299.354 -62.4607 cv
299.451 -62.1248 299.534 -61.8707 299.601 -61.6997 cv
302.148 -61.6997 li
301.922 -62.1637 301.768 -62.5997 301.685 -63.0048 cv
301.603 -63.4117 301.562 -64.0417 301.562 -64.8967 cv
301.589 -67.9017 li
301.589 -69.0197 301.474 -69.7867 301.245 -70.2057 cv
301.017 -70.6237 300.621 -70.9697 300.059 -71.2407 cv
299.497 -71.5127 298.642 -71.6487 297.494 -71.6487 cv
296.23 -71.6487 295.277 -71.4227 294.636 -70.9707 cv
293.995 -70.5187 293.543 -69.8228 293.28 -68.8817 cv
295.616 -68.4607 li
295.775 -68.9117 295.983 -69.2288 296.239 -69.4087 cv
291.054 -75.1298 mo
288.48 -75.1298 li
288.48 -61.6997 li
291.054 -61.6997 li
cp
285.842 -75.1298 mo
283.268 -75.1298 li
283.268 -61.6997 li
285.842 -61.6997 li
cp
280.629 -71.4287 mo
278.055 -71.4287 li
278.055 -61.6997 li
280.629 -61.6997 li
cp
280.629 -75.1298 mo
278.055 -75.1298 li
278.055 -72.7477 li
280.629 -72.7477 li
cp
274.51 -71.4287 mo
274.51 -74.8636 li
271.926 -73.3617 li
271.926 -71.4287 li
270.744 -71.4287 li
270.744 -69.3767 li
271.926 -69.3767 li
271.926 -65.1346 li
271.926 -64.2257 271.954 -63.6207 272.009 -63.3217 cv
272.076 -62.9008 272.197 -62.5657 272.371 -62.3187 cv
272.544 -62.0707 272.818 -61.8687 273.19 -61.7137 cv
273.563 -61.5577 273.981 -61.4797 274.445 -61.4797 cv
275.203 -61.4797 275.88 -61.6077 276.479 -61.8647 cv
276.26 -63.8617 li
275.807 -63.6967 275.462 -63.6147 275.224 -63.6147 cv
275.053 -63.6147 274.908 -63.6567 274.789 -63.7427 cv
274.67 -63.8278 274.593 -63.9366 274.56 -64.0687 cv
274.526 -64.1987 274.51 -64.6617 274.51 -65.4557 cv
274.51 -69.3767 li
276.269 -69.3767 li
276.269 -71.4287 li
cp
261.982 -62.2867 mo
262.754 -61.7487 263.803 -61.4797 265.129 -61.4797 cv
266.588 -61.4797 267.691 -61.8007 268.436 -62.4417 cv
269.181 -63.0837 269.554 -63.8497 269.554 -64.7417 cv
269.554 -65.5597 269.285 -66.1978 268.747 -66.6558 cv
268.204 -67.1077 267.246 -67.4897 265.876 -67.8007 cv
264.504 -68.1127 263.703 -68.3538 263.471 -68.5247 cv
263.3 -68.6527 263.214 -68.8087 263.214 -68.9927 cv
263.214 -69.2057 263.312 -69.3798 263.508 -69.5146 cv
263.8 -69.7037 264.286 -69.7977 264.964 -69.7977 cv
265.501 -69.7977 265.915 -69.6967 266.205 -69.4957 cv
266.495 -69.2937 266.693 -69.0037 266.796 -68.6257 cv
269.224 -69.0737 li
268.979 -69.9237 268.533 -70.5647 267.886 -70.9987 cv
267.239 -71.4318 266.25 -71.6487 264.918 -71.6487 cv
263.519 -71.6487 262.487 -71.3617 261.821 -70.7877 cv
261.156 -70.2137 260.823 -69.5048 260.823 -68.6617 cv
260.823 -67.7277 261.208 -66.9977 261.978 -66.4727 cv
262.533 -66.0938 263.85 -65.6757 265.926 -65.2177 cv
266.371 -65.1136 266.659 -65.0007 266.787 -64.8787 cv
266.909 -64.7507 266.97 -64.5887 266.97 -64.3927 cv
266.97 -64.1067 266.857 -63.8767 266.631 -63.7067 cv
266.295 -63.4617 265.795 -63.3397 265.129 -63.3397 cv
264.524 -63.3397 264.054 -63.4697 263.718 -63.7288 cv
263.382 -63.9886 263.159 -64.3687 263.049 -64.8698 cv
260.466 -64.4757 li
260.705 -63.5537 261.209 -62.8237 261.982 -62.2867 cv
256.307 -65.8588 mo
256.307 -65.2427 256.273 -64.8237 256.206 -64.6038 cv
256.109 -64.2687 255.904 -63.9838 255.592 -63.7517 cv
255.171 -63.4467 254.728 -63.2947 254.264 -63.2947 cv
253.849 -63.2947 253.507 -63.4247 253.238 -63.6877 cv
252.969 -63.9507 252.835 -64.2617 252.835 -64.6217 cv
252.835 -64.9886 253.003 -65.2906 253.339 -65.5287 cv
253.559 -65.6757 254.026 -65.8257 254.74 -65.9777 cv
255.455 -66.1307 255.977 -66.2617 256.307 -66.3717 cv
cp
253.485 -69.4087 mo
253.742 -69.5887 254.099 -69.6787 254.557 -69.6787 cv
255.235 -69.6787 255.696 -69.5737 255.941 -69.3636 cv
256.185 -69.1527 256.307 -68.7997 256.307 -68.3047 cv
256.307 -68.0477 li
255.843 -67.8527 255.009 -67.6427 253.806 -67.4156 cv
252.915 -67.2448 252.232 -67.0447 251.759 -66.8167 cv
251.285 -66.5876 250.917 -66.2577 250.655 -65.8278 cv
250.392 -65.3958 250.261 -64.9058 250.261 -64.3567 cv
250.261 -63.5258 250.549 -62.8387 251.127 -62.2957 cv
251.703 -61.7517 252.493 -61.4797 253.495 -61.4797 cv
254.063 -61.4797 254.597 -61.5876 255.098 -61.8007 cv
255.599 -62.0146 256.069 -62.3347 256.508 -62.7617 cv
256.527 -62.7137 256.557 -62.6127 256.6 -62.4607 cv
256.698 -62.1248 256.78 -61.8707 256.847 -61.6997 cv
259.394 -61.6997 li
259.168 -62.1637 259.014 -62.5997 258.932 -63.0048 cv
258.849 -63.4117 258.808 -64.0417 258.808 -64.8967 cv
258.836 -67.9017 li
258.836 -69.0197 258.721 -69.7867 258.492 -70.2057 cv
258.263 -70.6237 257.867 -70.9697 257.306 -71.2407 cv
256.744 -71.5127 255.889 -71.6487 254.74 -71.6487 cv
253.476 -71.6487 252.524 -71.4227 251.882 -70.9707 cv
251.241 -70.5187 250.789 -69.8228 250.526 -68.8817 cv
252.863 -68.4607 li
253.021 -68.9117 253.229 -69.2288 253.485 -69.4087 cv
244.883 -64.4757 mo
244.365 -64.0177 243.744 -63.7887 243.024 -63.7887 cv
242.046 -63.7887 241.252 -64.1487 240.642 -64.8698 cv
240.031 -65.5897 239.726 -66.7997 239.726 -68.4977 cv
239.726 -70.0967 240.035 -71.2548 240.656 -71.9688 cv
241.276 -72.6837 242.083 -73.0417 243.079 -73.0417 cv
243.799 -73.0417 244.412 -72.8397 244.916 -72.4366 cv
245.42 -72.0337 245.751 -71.4838 245.91 -70.7877 cv
248.594 -71.4287 li
248.288 -72.5037 247.83 -73.3278 247.22 -73.9017 cv
246.194 -74.8727 244.859 -75.3588 243.216 -75.3588 cv
241.335 -75.3588 239.817 -74.7397 238.663 -73.5037 cv
237.509 -72.2667 236.932 -70.5308 236.932 -68.2957 cv
236.932 -66.1827 237.506 -64.5167 238.654 -63.2987 cv
239.802 -62.0797 241.268 -61.4707 243.051 -61.4707 cv
244.493 -61.4707 245.681 -61.8267 246.619 -62.5387 cv
247.557 -63.2498 248.227 -64.3387 248.63 -65.8037 cv
246.001 -66.6377 li
245.775 -65.6547 245.402 -64.9337 244.883 -64.4757 cv
f
363.388 -89.912 mo
363.382 -90.6139 363.562 -91.1699 363.928 -91.579 cv
364.295 -91.9879 364.759 -92.1929 365.321 -92.1929 cv
365.846 -92.1929 366.292 -91.9989 366.659 -91.611 cv
367.025 -91.2229 367.217 -90.6559 367.235 -89.912 cv
cp
366.466 -86.2469 mo
366.191 -86.027 365.852 -85.918 365.449 -85.918 cv
364.857 -85.918 364.362 -86.1299 363.965 -86.5549 cv
363.568 -86.9779 363.361 -87.5719 363.343 -88.3359 cv
369.792 -88.3359 li
369.828 -90.309 369.428 -91.7729 368.591 -92.7279 cv
367.754 -93.684 366.612 -94.163 365.165 -94.163 cv
363.876 -94.163 362.811 -93.7059 361.968 -92.793 cv
361.125 -91.8799 360.704 -90.6169 360.704 -89.0049 cv
360.704 -87.6549 361.024 -86.537 361.666 -85.652 cv
362.478 -84.5459 363.73 -83.9929 365.422 -83.9929 cv
366.49 -83.9929 367.381 -84.2399 368.092 -84.731 cv
368.804 -85.2229 369.324 -85.939 369.654 -86.8789 cv
367.089 -87.3099 li
366.949 -86.8209 366.741 -86.4669 366.466 -86.2469 cv
352.665 -91.4639 mo
353.077 -91.95 353.589 -92.1929 354.2 -92.1929 cv
354.829 -92.1929 355.345 -91.9469 355.748 -91.455 cv
356.151 -90.9639 356.352 -90.1589 356.352 -89.0409 cv
356.352 -88.0399 356.145 -87.287 355.729 -86.783 cv
355.315 -86.2789 354.811 -86.027 354.218 -86.027 cv
353.473 -86.027 352.893 -86.3639 352.478 -87.0349 cv
352.19 -87.4989 352.047 -88.251 352.047 -89.2889 cv
352.047 -90.2529 352.253 -90.9789 352.665 -91.4639 cv
358.918 -97.6429 mo
356.343 -97.6429 li
356.343 -92.8059 li
355.549 -93.71 354.609 -94.163 353.522 -94.163 cv
352.337 -94.163 351.356 -93.7329 350.582 -92.876 cv
349.806 -92.017 349.417 -90.7639 349.417 -89.1149 cv
349.417 -87.502 349.816 -86.2449 350.613 -85.345 cv
351.41 -84.444 352.368 -83.9929 353.486 -83.9929 cv
354.035 -83.9929 354.58 -84.1299 355.121 -84.402 cv
355.661 -84.673 356.129 -85.0869 356.527 -85.642 cv
356.527 -84.2139 li
358.918 -84.2139 li
cp
335.992 -91.4639 mo
336.405 -91.95 336.916 -92.1929 337.527 -92.1929 cv
338.156 -92.1929 338.672 -91.9469 339.076 -91.455 cv
339.479 -90.9639 339.68 -90.1589 339.68 -89.0409 cv
339.68 -88.0399 339.472 -87.287 339.057 -86.783 cv
338.642 -86.2789 338.138 -86.027 337.545 -86.027 cv
336.8 -86.027 336.22 -86.3639 335.805 -87.0349 cv
335.518 -87.4989 335.374 -88.251 335.374 -89.2889 cv
335.374 -90.2529 335.58 -90.9789 335.992 -91.4639 cv
342.245 -97.6429 mo
339.67 -97.6429 li
339.67 -92.8059 li
338.876 -93.71 337.936 -94.163 336.849 -94.163 cv
335.664 -94.163 334.684 -93.7329 333.909 -92.876 cv
333.133 -92.017 332.745 -90.7639 332.745 -89.1149 cv
332.745 -87.502 333.144 -86.2449 333.941 -85.345 cv
334.737 -84.444 335.695 -83.9929 336.813 -83.9929 cv
337.362 -83.9929 337.907 -84.1299 338.448 -84.402 cv
338.988 -84.673 339.457 -85.0869 339.854 -85.642 cv
339.854 -84.2139 li
342.245 -84.2139 li
cp
328.256 -88.3729 mo
328.256 -87.756 328.223 -87.3379 328.155 -87.1179 cv
328.058 -86.782 327.853 -86.4969 327.541 -86.2649 cv
327.12 -85.9609 326.677 -85.808 326.214 -85.808 cv
325.798 -85.808 325.456 -85.939 325.188 -86.2019 cv
324.918 -86.4639 324.784 -86.7749 324.784 -87.136 cv
324.784 -87.502 324.952 -87.8049 325.288 -88.0419 cv
325.508 -88.1899 325.975 -88.3389 326.69 -88.4919 cv
327.404 -88.6449 327.926 -88.7759 328.256 -88.886 cv
cp
325.435 -91.9219 mo
325.692 -92.1019 326.048 -92.1929 326.506 -92.1929 cv
327.184 -92.1929 327.645 -92.0869 327.89 -91.877 cv
328.134 -91.6659 328.256 -91.3129 328.256 -90.8179 cv
328.256 -90.5619 li
327.792 -90.366 326.958 -90.1559 325.755 -89.9299 cv
324.864 -89.7589 324.181 -89.559 323.708 -89.33 cv
323.235 -89.101 322.867 -88.7709 322.604 -88.3409 cv
322.341 -87.9099 322.21 -87.4199 322.21 -86.8699 cv
322.21 -86.0399 322.498 -85.3519 323.076 -84.809 cv
323.653 -84.2649 324.442 -83.9929 325.444 -83.9929 cv
326.012 -83.9929 326.546 -84.101 327.047 -84.3149 cv
327.548 -84.528 328.018 -84.8489 328.458 -85.277 cv
328.476 -85.2279 328.506 -85.127 328.549 -84.9739 cv
328.647 -84.6379 328.729 -84.3839 328.797 -84.2139 cv
331.343 -84.2139 li
331.118 -84.678 330.963 -85.1129 330.881 -85.5189 cv
330.798 -85.9249 330.757 -86.5549 330.757 -87.4109 cv
330.785 -90.4149 li
330.785 -91.533 330.67 -92.3009 330.441 -92.7189 cv
330.212 -93.137 329.817 -93.4829 329.255 -93.7549 cv
328.693 -94.027 327.838 -94.163 326.69 -94.163 cv
325.426 -94.163 324.473 -93.9359 323.832 -93.485 cv
323.19 -93.033 322.738 -92.3359 322.476 -91.3959 cv
324.812 -90.9739 li
324.97 -91.4259 325.178 -91.7419 325.435 -91.9219 cv
314.098 -91.4639 mo
314.51 -91.95 315.022 -92.1929 315.633 -92.1929 cv
316.262 -92.1929 316.778 -91.9469 317.181 -91.455 cv
317.584 -90.9639 317.785 -90.1589 317.785 -89.0409 cv
317.785 -88.0399 317.578 -87.287 317.162 -86.783 cv
316.747 -86.2789 316.243 -86.027 315.651 -86.027 cv
314.906 -86.027 314.326 -86.3639 313.91 -87.0349 cv
313.623 -87.4989 313.48 -88.251 313.48 -89.2889 cv
313.48 -90.2529 313.686 -90.9789 314.098 -91.4639 cv
320.35 -97.6429 mo
317.776 -97.6429 li
317.776 -92.8059 li
316.982 -93.71 316.042 -94.163 314.955 -94.163 cv
313.77 -94.163 312.789 -93.7329 312.014 -92.876 cv
311.239 -92.017 310.85 -90.7639 310.85 -89.1149 cv
310.85 -87.502 311.249 -86.2449 312.047 -85.345 cv
312.843 -84.444 313.801 -83.9929 314.918 -83.9929 cv
315.468 -83.9929 316.013 -84.1299 316.553 -84.402 cv
317.094 -84.673 317.562 -85.0869 317.959 -85.642 cv
317.959 -84.2139 li
320.35 -84.2139 li
cp
308.79 -93.9419 mo
306.216 -93.9419 li
306.216 -84.2129 li
308.79 -84.2129 li
cp
308.79 -97.6429 mo
306.216 -97.6429 li
306.216 -95.261 li
308.79 -95.261 li
cp
296.391 -84.7999 mo
297.163 -84.2629 298.212 -83.9929 299.537 -83.9929 cv
300.997 -83.9929 302.099 -84.3149 302.844 -84.9559 cv
303.589 -85.5969 303.962 -86.3639 303.962 -87.2549 cv
303.962 -88.0729 303.693 -88.7119 303.155 -89.1689 cv
302.612 -89.621 301.654 -90.0029 300.284 -90.314 cv
298.912 -90.626 298.111 -90.8669 297.879 -91.038 cv
297.708 -91.1669 297.622 -91.3219 297.622 -91.506 cv
297.622 -91.72 297.72 -91.8929 297.916 -92.028 cv
298.209 -92.2169 298.694 -92.3119 299.372 -92.3119 cv
299.909 -92.3119 300.323 -92.2109 300.613 -92.0099 cv
300.903 -91.808 301.101 -91.5179 301.204 -91.1389 cv
303.632 -91.5879 li
303.387 -92.4369 302.941 -93.0779 302.294 -93.512 cv
301.647 -93.9449 300.658 -94.163 299.326 -94.163 cv
297.927 -94.163 296.895 -93.8749 296.23 -93.3009 cv
295.564 -92.7269 295.232 -92.0189 295.232 -91.1759 cv
295.232 -90.2419 295.617 -89.511 296.386 -88.9869 cv
296.942 -88.6079 298.258 -88.1899 300.334 -87.731 cv
300.78 -87.6279 301.067 -87.5149 301.195 -87.392 cv
301.317 -87.2639 301.378 -87.1019 301.378 -86.907 cv
301.378 -86.6199 301.265 -86.3909 301.04 -86.22 cv
300.703 -85.975 300.203 -85.8529 299.537 -85.8529 cv
298.933 -85.8529 298.462 -85.9829 298.126 -86.2429 cv
297.79 -86.5029 297.567 -86.882 297.457 -87.3829 cv
294.874 -86.9889 li
295.113 -86.0669 295.617 -85.3379 296.391 -84.7999 cv
290.945 -87.2189 mo
290.945 -88.8739 291.016 -89.9609 291.159 -90.48 cv
291.303 -90.9979 291.5 -91.3579 291.75 -91.5559 cv
292 -91.7549 292.306 -91.8539 292.666 -91.8539 cv
293.039 -91.8539 293.442 -91.7129 293.876 -91.4319 cv
294.672 -93.6769 li
294.129 -94.001 293.564 -94.163 292.978 -94.163 cv
292.562 -94.163 292.191 -94.059 291.865 -93.851 cv
291.538 -93.6429 291.17 -93.2129 290.761 -92.559 cv
290.761 -93.9419 li
288.37 -93.9419 li
288.37 -84.2139 li
290.945 -84.2139 li
cp
279.979 -89.912 mo
279.972 -90.6139 280.152 -91.1699 280.519 -91.579 cv
280.885 -91.9879 281.349 -92.1929 281.911 -92.1929 cv
282.437 -92.1929 282.883 -91.9989 283.249 -91.611 cv
283.616 -91.2229 283.808 -90.6559 283.826 -89.912 cv
cp
283.056 -86.2469 mo
282.782 -86.027 282.443 -85.918 282.04 -85.918 cv
281.448 -85.918 280.953 -86.1299 280.555 -86.5549 cv
280.159 -86.9779 279.951 -87.5719 279.933 -88.3359 cv
286.382 -88.3359 li
286.419 -90.309 286.019 -91.7729 285.182 -92.7279 cv
284.345 -93.684 283.203 -94.163 281.756 -94.163 cv
280.467 -94.163 279.401 -93.7059 278.559 -92.793 cv
277.716 -91.8799 277.295 -90.6169 277.295 -89.0049 cv
277.295 -87.6549 277.615 -86.537 278.256 -85.652 cv
279.068 -84.5459 280.321 -83.9929 282.012 -83.9929 cv
283.081 -83.9929 283.971 -84.2399 284.683 -84.731 cv
285.394 -85.2229 285.915 -85.939 286.244 -86.8789 cv
283.679 -87.3099 li
283.539 -86.8209 283.331 -86.4669 283.056 -86.2469 cv
272.604 -84.2139 mo
276.47 -93.9419 li
273.822 -93.9419 li
271.972 -88.9779 li
271.874 -88.7029 271.782 -88.4269 271.697 -88.153 cv
271.661 -88.0179 271.572 -87.741 271.431 -87.3199 cv
270.9 -88.9779 li
269.068 -93.9419 li
266.365 -93.9419 li
270.286 -84.2139 li
cp
264.973 -93.9419 mo
262.399 -93.9419 li
262.399 -84.2129 li
264.973 -84.2129 li
cp
264.973 -97.6429 mo
262.399 -97.6429 li
262.399 -95.261 li
264.973 -95.261 li
cp
259.788 -90.2599 mo
259.788 -91.011 259.741 -91.5879 259.646 -91.9919 cv
259.551 -92.3939 259.383 -92.7549 259.142 -93.0719 cv
258.901 -93.3899 258.546 -93.6509 258.075 -93.855 cv
257.605 -94.0599 257.086 -94.163 256.517 -94.163 cv
255.229 -94.163 254.16 -93.6119 253.312 -92.5139 cv
253.312 -93.9419 li
250.92 -93.9419 li
250.92 -84.2139 li
253.494 -84.2139 li
253.494 -88.6199 li
253.494 -89.7069 253.56 -90.4519 253.692 -90.856 cv
253.823 -91.2589 254.065 -91.5819 254.42 -91.8259 cv
254.774 -92.0709 255.174 -92.1929 255.62 -92.1929 cv
255.968 -92.1929 256.266 -92.1069 256.513 -91.9359 cv
256.76 -91.7649 256.939 -91.5259 257.049 -91.2169 cv
257.159 -90.908 257.214 -90.2289 257.214 -89.178 cv
257.214 -84.2139 li
259.788 -84.2139 li
cp
237.39 -90.48 mo
237.39 -88.9779 237.478 -87.8419 237.656 -87.0719 cv
237.777 -86.553 238.031 -86.0559 238.416 -85.5829 cv
238.801 -85.11 239.324 -84.725 239.987 -84.429 cv
240.65 -84.1329 241.622 -83.9839 242.905 -83.9839 cv
243.967 -83.9839 244.829 -84.121 245.488 -84.392 cv
246.147 -84.6639 246.674 -85.0289 247.068 -85.4869 cv
247.462 -85.9449 247.733 -86.507 247.879 -87.1719 cv
248.026 -87.8379 248.099 -88.9779 248.099 -90.5889 cv
248.099 -97.6429 li
245.387 -97.6429 li
245.387 -90.2139 li
245.387 -89.1509 245.348 -88.3909 245.268 -87.933 cv
245.189 -87.475 244.953 -87.0879 244.563 -86.7739 cv
244.172 -86.46 243.592 -86.303 242.822 -86.303 cv
242.065 -86.303 241.468 -86.4689 241.032 -86.8019 cv
240.595 -87.1349 240.318 -87.5759 240.202 -88.1249 cv
240.135 -88.4669 240.101 -89.2159 240.101 -90.3699 cv
240.101 -97.6429 li
237.39 -97.6429 li
cp
f
1.02 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
589.224 956.353 mo
815.29 956.353 li
.997 .814 .439 .544 cmyk
@
76.23 47.942 mo
218.629 47.942 li
218.629 15.436 li
76.23 15.436 li
cp
f
.23 .14 .13 0 cmyk
%ADOBeginSubsetFont: DCAAAA+FrutigerLTStd-BoldCn AddGlyphs
%ADOt1write: (1.0.24)systemdict beginDKGIWT+FrutigerLTStd-BoldCn dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/ordfeminine <1C60D8A8C9B80A3F8D381A0D77153C5710C1BEFD464FFD2AA0BB73B741A55A3E3178B6319C5D13DF2DBBF6FD5A20933D25FC6607469304B65EB1B16450C94BD4C8C4A18358F9A2A496CA4E006DA518EDB2940D027BCE67FFAF78160AB0C41A3B3FC185E043F6E75020576BD8AABCF8274709DB9215B79C5FFED4CDE5CF2698C78D546F5ED9ABF66336131F3ED3280FED0BCC223B1E70D89833BF5FDBBB5368B0C19606B4> |-systemdict /gcheck known {setglobal} if end {end} ifendDKGIWT+FrutigerLTStd-BoldCn /Encoding getdup 227 /ordfeminine putpop%ADOEndSubsetFont
/DKGIWT+FrutigerLTStd-BoldCn*1 [32{/.notdef}rp /iacute /space /aacute /uacute /ntilde 7{/.notdef}rp /comma /hyphen /period 2{/.notdef}rp /one 8{/.notdef}rp /colon 8{/.notdef}rp /C 2{/.notdef}rp /F 2{/.notdef}rp /I 3{/.notdef}rp /M /.notdef /O /P 16{/.notdef}rp /a /b /c /d /e /f /g /.notdef /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /.notdef /w /.notdef /y 5{/.notdef}rp /oacute 99{/.notdef}rp /ordfeminine 28{/.notdef}rp]DKGIWT+FrutigerLTStd-BoldCn nfDKGIWT+FrutigerLTStd-BoldCn*1 [31.4937 0 0 -31.4937 0 0 ]msf81.7732 43.4993 mo(1\343!edici\177n)[16.3769 11.0859 8.18819 15.7468 16.9122 8.18819 13.4162 8.18819 16.9122 0 ]xsh815.383 475.57 mo
796.166 475.57 li
796.166 471.246 li
815.383 471.246 li
815.383 475.57 li
792.547 475.57 mo
787.995 475.57 li
787.995 471.172 li
792.547 471.172 li
792.547 475.57 li
814.748 467.366 mo
810.905 467.142 li
811.203 466.396 812.173 464.493 812.173 462.329 cv
812.173 460.65 811.763 459.344 810.27 459.344 cv
809.524 459.344 808.815 459.717 807.845 461.396 cv
806.726 463.299 li
805.569 465.239 804.338 467.366 801.315 467.366 cv
798.666 467.366 795.868 464.792 795.868 460.724 cv
795.868 458.262 796.502 456.359 796.651 455.911 cv
800.233 456.172 li
799.786 457.329 799.375 458.56 799.375 460.239 cv
799.375 462.105 800.084 462.889 801.241 462.889 cv
802.285 462.889 802.845 462.068 803.703 460.724 cv
805.158 458.448 li
806.688 456.06 807.77 454.866 810.009 454.866 cv
813.554 454.866 815.681 457.851 815.681 462.03 cv
815.681 464.418 815.121 466.396 814.748 467.366 cv
792.547 451.061 mo
787.995 451.061 li
787.995 446.285 li
792.547 446.285 li
792.547 451.061 li
815.383 450.986 mo
796.166 450.986 li
796.166 446.359 li
815.383 446.359 li
815.383 450.986 li
805.755 442.255 mo
797.92 442.255 795.868 437.703 795.868 433.785 cv
795.868 429.868 797.92 425.353 805.755 425.353 cv
813.815 425.353 815.681 429.868 815.681 433.785 cv
815.681 437.703 813.815 442.255 805.755 442.255 cv
805.755 430.129 mo
802.547 430.129 799.151 430.8 799.151 433.785 cv
799.151 436.77 802.547 437.479 805.755 437.479 cv
808.964 437.479 812.397 436.77 812.397 433.785 cv
812.397 430.8 808.964 430.129 805.755 430.129 cv
794.039 435.987 mo
788.666 433.599 li
788.666 429.271 li
794.039 433.076 li
794.039 435.987 li
.303532 .0682689 .0736706 0 cmyk
f
798.167 416.687 mo
797.078 415.894 795.868 414.567 795.868 412.182 cv
795.868 407.817 799.114 406.511 802.995 406.511 cv
815.383 406.511 li
815.383 411.137 li
803.853 411.137 li
800.905 411.137 799.674 411.884 799.674 413.787 cv
799.674 415.134 800.308 415.998 801.292 416.499 cv
800.249 416.555 799.206 416.618 798.167 416.687 cv
.262486 .0382696 .0475471 0 cmyk
f
796.166 421.846 mo
796.166 417.518 li
797.136 417.48 798.144 417.368 799.114 417.368 cv
799.114 417.294 li
798.838 417.133 798.508 416.936 798.167 416.687 cv
799.206 416.618 800.249 416.555 801.292 416.499 cv
802.081 416.9 803.094 417.07 804.188 417.07 cv
815.383 417.07 li
815.383 421.697 li
799.338 421.697 li
798.144 421.697 797.024 421.734 796.166 421.846 cv
.303532 .0682689 .0736706 0 cmyk
f
627.683 331.24 mo
627.435 331.24 627.198 331.224 626.969 331.193 cv
625.652 329.316 624.306 327.449 622.943 325.607 cv
622.966 323.836 623.42 322.593 623.566 322.107 cv
626.236 322.256 li
625.935 323.03 625.487 324.053 625.487 325.525 cv
625.487 327.122 626.336 327.946 627.533 327.946 cv
628.831 327.946 629.33 327.072 629.879 326.099 cv
630.927 324.228 li
632.075 322.182 633.173 321.208 635.618 321.208 cv
639.161 321.208 640.859 323.729 640.859 327.047 cv
640.859 328.794 640.609 330.142 640.085 331.015 cv
637.24 330.84 li
637.64 330.217 638.313 328.844 638.313 327.147 cv
638.313 325.75 637.539 324.502 635.792 324.502 cv
634.545 324.502 633.996 325.226 633.148 326.773 cv
632.25 328.395 li
631.301 330.117 629.929 331.24 627.683 331.24 cv
f
626.969 331.193 mo
624.317 330.831 622.942 328.438 622.942 325.75 cv
622.942 325.702 622.942 325.654 622.943 325.607 cv
624.306 327.449 625.652 329.316 626.969 331.193 cv
.337865 .0898146 .0925917 0 cmyk
f
634.371 318.938 mo
630.528 318.938 627.557 316.916 627.557 313.647 cv
627.557 310.878 629.18 308.507 634.421 308.507 cv
635.018 308.507 li
635.018 315.943 li
637.215 315.943 638.538 315.07 638.538 312.674 cv
638.538 310.778 637.964 309.879 637.539 309.306 cv
639.984 309.156 li
640.26 309.805 640.809 311.152 640.809 312.999 cv
640.809 317.141 637.839 318.938 634.371 318.938 cv
633.073 311.501 mo
630.802 311.501 629.654 312.25 629.654 313.647 cv
629.654 315.269 631.376 315.943 633.073 315.943 cv
633.073 311.501 li
627.758 306.111 mo
627.758 303.317 li
628.532 303.292 629.33 303.217 630.104 303.217 cv
630.104 303.167 li
629.106 302.793 627.557 301.82 627.557 299.898 cv
627.557 299.698 627.607 299.549 627.633 299.374 cv
630.528 299.374 li
630.453 299.649 630.403 299.923 630.403 300.247 cv
630.403 301.52 631.177 302.917 633.572 302.917 cv
640.609 302.917 li
640.609 306.012 li
629.879 306.012 li
629.081 306.012 628.332 306.037 627.758 306.111 cv
627.758 298.476 mo
627.758 295.282 li
637.665 292.662 li
637.665 292.612 li
627.758 289.967 li
627.758 286.972 li
640.609 290.915 li
640.609 294.558 li
627.758 298.476 li
634.371 285.675 mo
630.528 285.675 627.557 283.654 627.557 280.385 cv
627.557 277.615 629.18 275.245 634.421 275.245 cv
635.018 275.245 li
635.018 282.681 li
637.215 282.681 638.538 281.807 638.538 279.412 cv
638.538 277.515 637.964 276.617 637.539 276.043 cv
639.984 275.893 li
640.26 276.542 640.809 277.89 640.809 279.736 cv
640.809 283.879 637.839 285.675 634.371 285.675 cv
633.073 278.239 mo
630.802 278.239 629.654 278.988 629.654 280.385 cv
629.654 282.007 631.376 282.681 633.073 282.681 cv
633.073 278.239 li
627.758 272.849 mo
627.758 270.054 li
628.532 270.029 629.33 269.955 630.104 269.955 cv
630.104 269.905 li
629.106 269.53 627.557 268.557 627.557 266.636 cv
627.557 266.436 627.607 266.286 627.633 266.112 cv
630.528 266.112 li
630.453 266.386 630.403 266.661 630.403 266.985 cv
630.403 268.258 631.177 269.655 633.572 269.655 cv
640.609 269.655 li
640.609 272.749 li
629.879 272.749 li
629.081 272.749 628.332 272.774 627.758 272.849 cv
640.609 263.766 mo
621.894 263.766 li
621.894 260.672 li
640.609 260.672 li
640.609 263.766 li
634.371 257.927 mo
630.528 257.927 627.557 255.906 627.557 252.637 cv
627.557 249.867 629.18 247.497 634.421 247.497 cv
635.018 247.497 li
635.018 254.933 li
637.215 254.933 638.538 254.06 638.538 251.664 cv
638.538 249.768 637.964 248.869 637.539 248.295 cv
639.984 248.146 li
640.26 248.794 640.809 250.142 640.809 251.988 cv
640.809 256.131 637.839 257.927 634.371 257.927 cv
633.073 250.491 mo
630.802 250.491 629.654 251.24 629.654 252.637 cv
629.654 254.259 631.376 254.933 633.073 254.933 cv
633.073 250.491 li
640.185 245.6 mo
637.615 245.451 li
637.814 244.952 638.463 243.679 638.463 242.232 cv
638.463 241.109 638.189 240.235 637.19 240.235 cv
636.69 240.235 636.217 240.485 635.568 241.608 cv
634.82 242.88 li
634.046 244.178 633.223 245.6 631.202 245.6 cv
629.43 245.6 627.557 243.879 627.557 241.159 cv
627.557 239.512 627.983 238.239 628.082 237.94 cv
630.478 238.114 li
630.179 238.888 629.904 239.711 629.904 240.834 cv
629.904 242.082 630.378 242.606 631.152 242.606 cv
631.85 242.606 632.225 242.057 632.799 241.159 cv
633.772 239.637 li
634.795 238.039 635.519 237.241 637.016 237.241 cv
639.386 237.241 640.809 239.237 640.809 242.032 cv
640.809 243.629 640.434 244.952 640.185 245.6 cv
640.185 235.444 mo
637.615 235.295 li
637.814 234.796 638.463 233.523 638.463 232.076 cv
638.463 230.953 638.189 230.079 637.19 230.079 cv
636.69 230.079 636.217 230.329 635.568 231.452 cv
634.82 232.724 li
634.046 234.022 633.223 235.444 631.202 235.444 cv
629.43 235.444 627.557 233.723 627.557 231.003 cv
627.557 229.356 627.983 228.083 628.082 227.784 cv
630.478 227.958 li
630.179 228.732 629.904 229.555 629.904 230.678 cv
629.904 231.926 630.378 232.45 631.152 232.45 cv
631.85 232.45 632.225 231.901 632.799 231.003 cv
633.772 229.481 li
634.795 227.884 635.519 227.085 637.016 227.085 cv
639.386 227.085 640.809 229.081 640.809 231.876 cv
640.809 233.473 640.434 234.796 640.185 235.444 cv
.303532 .0682689 .0736706 0 cmyk
f
640.6 475.57 mo
637.472 475.57 li
637.603 475.097 637.671 474.552 637.671 473.93 cv
637.671 471.427 636.913 470.24 636.353 469.483 cv
639.582 469.286 li
639.943 470.142 640.669 471.92 640.669 474.358 cv
640.669 474.781 640.645 475.184 640.6 475.57 cv
633.026 475.57 mo
630.457 475.57 li
630.457 472.382 li
627.459 472.382 625.943 473.37 625.943 475.214 cv
625.943 475.337 625.951 475.455 625.965 475.57 cv
623.186 475.57 li
623.18 475.453 623.177 475.334 623.177 475.214 cv
623.177 471.559 625.318 468.429 632.236 468.429 cv
633.026 468.429 li
633.026 475.57 li
640.405 456.307 mo
617.412 456.307 li
617.412 452.09 li
637.045 452.09 li
637.045 444.514 li
640.405 444.514 li
640.405 456.307 li
632.17 442.539 mo
627.097 442.539 623.177 439.87 623.177 435.554 cv
623.177 431.899 625.318 428.77 632.236 428.77 cv
633.026 428.77 li
633.026 438.586 li
635.924 438.586 637.671 437.433 637.671 434.271 cv
637.671 431.767 636.913 430.58 636.353 429.823 cv
639.582 429.626 li
639.943 430.481 640.669 432.26 640.669 434.698 cv
640.669 440.167 636.749 442.539 632.17 442.539 cv
630.457 432.722 mo
627.459 432.722 625.943 433.71 625.943 435.554 cv
625.943 437.696 628.217 438.586 630.457 438.586 cv
630.457 432.722 li
635.694 426.496 mo
631.083 426.496 629.93 422.741 629.93 417.57 cv
629.93 416.746 li
629.304 416.746 li
627.624 416.746 626.076 417.57 626.076 419.908 cv
626.076 421.951 627.064 423.763 627.723 424.552 cv
624.429 424.783 li
623.902 423.631 623.177 422.017 623.177 419.414 cv
623.177 414.144 625.746 412.925 629.995 412.925 cv
637.407 412.925 li
638.626 412.925 639.746 412.793 640.405 412.694 cv
640.405 416.384 li
639.746 416.581 638.923 416.614 638.099 416.614 cv
638.099 416.68 li
639.483 417.701 640.669 418.985 640.669 421.423 cv
640.669 424.059 638.857 426.496 635.694 426.496 cv
632.104 416.746 mo
632.104 417.109 li
632.104 420.599 632.829 422.675 635.299 422.675 cv
636.847 422.675 637.902 421.654 637.902 420.073 cv
637.902 417.636 636.09 416.746 633.059 416.746 cv
632.104 416.746 li
623.44 409.137 mo
623.44 405.448 li
624.462 405.415 625.516 405.316 626.537 405.316 cv
626.537 405.25 li
625.219 404.755 623.177 403.471 623.177 400.935 cv
623.177 400.67 623.243 400.473 623.276 400.243 cv
627.097 400.243 li
626.998 400.604 626.932 400.968 626.932 401.396 cv
626.932 403.075 627.953 404.919 631.116 404.919 cv
640.405 404.919 li
640.405 409.004 li
626.241 409.004 li
625.186 409.004 624.198 409.037 623.44 409.137 cv
623.44 397.674 mo
623.44 393.853 li
624.297 393.82 625.186 393.721 626.043 393.721 cv
626.043 393.655 li
625.022 393.062 623.177 391.909 623.177 389.141 cv
623.177 385.288 626.043 384.134 629.469 384.134 cv
640.405 384.134 li
640.405 388.22 li
630.226 388.22 li
627.624 388.22 626.537 388.879 626.537 390.559 cv
626.537 392.7 628.349 393.457 630.523 393.457 cv
640.405 393.457 li
640.405 397.542 li
626.241 397.542 li
625.186 397.542 624.198 397.574 623.44 397.674 cv
620.245 380.115 mo
616.226 380.115 li
616.226 375.899 li
620.245 375.899 li
620.245 380.115 li
640.405 380.05 mo
623.44 380.05 li
623.44 375.965 li
640.405 375.965 li
640.405 380.05 li
623.44 372.013 mo
623.44 368.192 li
624.297 368.159 625.186 368.06 626.043 368.06 cv
626.043 367.995 li
625.022 367.402 623.177 366.249 623.177 363.481 cv
623.177 359.628 626.043 358.475 629.469 358.475 cv
640.405 358.475 li
640.405 362.559 li
630.226 362.559 li
627.624 362.559 626.537 363.218 626.537 364.898 cv
626.537 367.039 628.349 367.797 630.523 367.797 cv
640.405 367.797 li
640.405 371.882 li
626.241 371.882 li
625.186 371.882 624.198 371.914 623.44 372.013 cv
.337865 .0898146 .0925917 0 cmyk
f
646.664 354.488 mo
643.04 354.257 li
643.567 353.303 644.49 351.393 644.49 349.251 cv
644.49 345.396 641.821 344.771 639.153 344.771 cv
637.539 344.771 li
637.539 344.837 li
638.857 345.496 640.405 346.649 640.405 349.317 cv
640.405 349.996 640.275 350.773 639.929 351.535 cv
637.842 347.912 635.67 344.335 633.421 340.819 cv
638.626 340.819 li
643.93 340.819 647.718 342.433 647.718 348.658 cv
647.718 351.36 647.026 353.501 646.664 354.488 cv
.303532 .0682689 .0736706 0 cmyk
f
631.972 355.246 mo
627.295 355.246 623.177 353.566 623.177 349.12 cv
623.177 346.649 624.593 345.496 626.076 344.64 cv
626.076 344.507 li
625.186 344.507 624.33 344.408 623.44 344.376 cv
623.44 340.687 li
624.33 340.753 625.219 340.819 626.109 340.819 cv
633.421 340.819 li
635.67 344.335 637.842 347.912 639.929 351.535 cv
639.067 353.435 636.861 355.246 631.972 355.246 cv
631.708 344.771 mo
628.151 344.771 626.241 346.121 626.273 348.066 cv
626.306 350.207 628.283 351.03 631.742 351.03 cv
635.727 351.03 637.407 349.746 637.407 348.362 cv
637.407 345.793 635.563 344.771 631.708 344.771 cv
.337865 .0898146 .0925917 0 cmyk
f
641.376 91.4829 mo
619.843 91.4829 li
619.843 85.3127 li
619.843 80.8699 622.311 78.5566 626.383 78.5566 cv
630.455 78.5566 632.954 80.8699 632.954 85.3127 cv
632.954 87.5336 li
641.376 87.5336 li
641.376 91.4829 li
626.383 82.5049 mo
624.039 82.5049 622.866 83.5847 622.866 86.0527 cv
622.866 87.5336 li
629.931 87.5336 li
629.931 86.0527 li
629.931 83.5847 628.728 82.5049 626.383 82.5049 cv
.303532 .0682689 .0736706 0 cmyk
f
628.783 76.3318 mo
627.684 75.6173 626.597 74.9191 625.489 74.2165 cv
625.489 73.4656 li
637.489 70.258 li
637.489 70.1959 li
625.489 67.1417 li
625.489 63.4399 li
644.4 69.2399 li
646.59 69.9188 648.225 71.2137 648.225 73.7747 cv
648.225 74.7928 648.009 75.6568 647.824 76.2117 cv
644.893 75.9959 li
645.048 75.5638 645.202 75.1319 645.202 74.5457 cv
645.233 73.4049 644.523 72.9107 642.888 72.4168 cv
641.531 72.1397 li
628.783 76.3318 li
.262486 .0382696 .0475471 0 cmyk
f
625.489 77.4149 mo
625.489 74.2165 li
626.597 74.9191 627.684 75.6173 628.783 76.3318 cv
625.489 77.4149 li
.303532 .0682689 .0736706 0 cmyk
f
628.296 62.6689 mo
625.489 62.6689 li
625.489 60.1389 li
622.218 60.1389 li
621.046 56.3137 li
625.489 56.3137 li
625.489 53.1357 li
628.296 53.1357 li
628.296 56.3137 li
636.533 56.3137 li
638.23 56.3137 638.723 55.6968 638.723 54.5857 cv
638.723 53.9067 638.538 53.4139 638.384 53.1357 cv
641.099 53.1357 li
641.376 53.7216 641.623 54.5546 641.623 55.6968 cv
641.623 58.5349 640.328 60.1389 636.996 60.1389 cv
628.296 60.1389 li
628.296 62.6689 li
641.376 50.6988 mo
618.239 50.6988 li
618.239 46.8739 li
627.525 46.8739 li
627.525 46.7808 li
626.538 46.1019 625.242 45.2079 625.242 42.8319 cv
625.242 39.2228 627.926 38.1427 631.134 38.1427 cv
641.376 38.1427 li
641.376 41.9689 li
631.844 41.9689 li
629.407 41.9689 628.389 42.5858 628.389 44.1588 cv
628.389 46.1636 630.085 46.8739 632.121 46.8739 cv
641.376 46.8739 li
641.376 50.6988 li
633.417 35.1198 mo
626.939 35.1198 625.242 31.3556 625.242 28.1167 cv
625.242 24.8777 626.939 21.1449 633.417 21.1449 cv
640.081 21.1449 641.623 24.8777 641.623 28.1167 cv
641.623 31.3556 640.081 35.1198 633.417 35.1198 cv
633.417 25.0938 mo
630.764 25.0938 627.957 25.6487 627.957 28.1167 cv
627.957 30.5847 630.764 31.1709 633.417 31.1709 cv
636.07 31.1709 638.908 30.5847 638.908 28.1167 cv
638.908 25.6487 636.07 25.0938 633.417 25.0938 cv
625.489 18.2447 mo
625.489 14.6659 li
626.291 14.6359 627.124 14.5429 627.926 14.5429 cv
627.926 14.4808 li
626.969 13.9259 625.242 12.8458 625.242 10.2548 cv
625.242 6.64468 627.926 5.56591 631.134 5.56591 cv
641.376 5.56591 li
641.376 9.39078 li
631.844 9.39078 li
629.407 9.39078 628.389 10.0077 628.389 11.5807 cv
628.389 13.5868 630.085 14.2958 632.121 14.2958 cv
641.376 14.2958 li
641.376 18.1216 li
628.111 18.1216 li
627.124 18.1216 626.198 18.1526 625.489 18.2447 cv
.262486 .0382696 .0475471 0 cmyk
f
677.28 327.36 mo
672.768 327.36 670.421 323.641 670.421 319.417 cv
670.421 316.745 671.107 314.868 671.323 314.146 cv
675.186 314.363 li
674.753 315.482 674.103 316.962 674.103 319.092 cv
674.103 321.403 675.331 322.594 677.064 322.594 cv
678.941 322.594 679.663 321.331 680.458 319.923 cv
681.974 317.215 li
683.635 314.254 685.223 312.846 688.761 312.846 cv
693.888 312.846 696.343 316.493 696.343 321.295 cv
696.343 323.822 695.982 325.771 695.224 327.035 cv
691.108 326.782 li
691.686 325.88 692.661 323.894 692.661 321.439 cv
692.661 319.417 691.541 317.612 689.014 317.612 cv
687.209 317.612 686.415 318.659 685.187 320.897 cv
683.887 323.244 li
682.516 325.735 680.53 327.36 677.28 327.36 cv
686.956 309.561 mo
681.396 309.561 677.1 306.636 677.1 301.907 cv
677.1 297.899 679.447 294.469 687.028 294.469 cv
687.895 294.469 li
687.895 305.228 li
691.072 305.228 692.986 303.965 692.986 300.499 cv
692.986 297.755 692.155 296.455 691.541 295.625 cv
695.08 295.408 li
695.477 296.347 696.271 298.296 696.271 300.968 cv
696.271 306.961 691.975 309.561 686.956 309.561 cv
685.079 298.802 mo
681.793 298.802 680.133 299.885 680.133 301.907 cv
680.133 304.254 682.624 305.228 685.079 305.228 cv
685.079 298.802 li
677.389 291.004 mo
677.389 286.96 li
678.508 286.924 679.663 286.816 680.783 286.816 cv
680.783 286.743 li
679.338 286.202 677.1 284.794 677.1 282.014 cv
677.1 281.725 677.172 281.508 677.208 281.256 cv
681.396 281.256 li
681.288 281.653 681.216 282.05 681.216 282.519 cv
681.216 284.36 682.335 286.382 685.801 286.382 cv
695.982 286.382 li
695.982 290.859 li
680.458 290.859 li
679.302 290.859 678.219 290.895 677.389 291.004 cv
677.389 279.956 mo
677.389 275.335 li
691.722 271.544 li
691.722 271.472 li
677.389 267.645 li
677.389 263.312 li
695.982 269.017 li
695.982 274.288 li
677.389 279.956 li
673.887 260.569 mo
669.482 260.569 li
669.482 255.948 li
673.887 255.948 li
673.887 260.569 li
695.982 260.497 mo
677.389 260.497 li
677.389 256.02 li
695.982 256.02 li
695.982 260.497 li
686.704 252.049 mo
681.396 252.049 677.1 249.305 677.1 243.059 cv
677.1 241.651 677.533 239.99 677.858 239.16 cv
681.396 239.412 li
680.999 240.207 680.494 241.326 680.494 242.553 cv
680.494 245.947 682.768 247.427 686.74 247.427 cv
690.206 247.427 692.877 245.767 692.877 242.337 cv
692.877 241.254 692.372 239.773 691.975 239.16 cv
695.513 238.907 li
695.91 239.954 696.271 241.506 696.271 243.312 cv
696.271 249.449 691.975 252.049 686.704 252.049 cv
673.887 235.802 mo
669.482 235.802 li
669.482 231.181 li
673.887 231.181 li
673.887 235.802 li
695.982 235.73 mo
677.389 235.73 li
677.389 231.253 li
695.982 231.253 li
695.982 235.73 li
686.667 227.282 mo
679.086 227.282 677.1 222.877 677.1 219.086 cv
677.1 215.296 679.086 210.927 686.667 210.927 cv
694.466 210.927 696.271 215.296 696.271 219.086 cv
696.271 222.877 694.466 227.282 686.667 227.282 cv
686.667 215.548 mo
683.563 215.548 680.277 216.198 680.277 219.086 cv
680.277 221.975 683.563 222.661 686.667 222.661 cv
689.772 222.661 693.094 221.975 693.094 219.086 cv
693.094 216.198 689.772 215.548 686.667 215.548 cv
695.368 208.111 mo
691.65 207.895 li
691.939 207.173 692.877 205.331 692.877 203.237 cv
692.877 201.613 692.48 200.349 691.036 200.349 cv
690.314 200.349 689.628 200.71 688.689 202.335 cv
687.606 204.176 li
686.487 206.053 685.295 208.111 682.371 208.111 cv
679.808 208.111 677.1 205.62 677.1 201.685 cv
677.1 199.302 677.714 197.461 677.858 197.028 cv
681.324 197.28 li
680.891 198.4 680.494 199.591 680.494 201.216 cv
680.494 203.021 681.18 203.779 682.299 203.779 cv
683.31 203.779 683.851 202.985 684.682 201.685 cv
686.09 199.483 li
687.57 197.172 688.617 196.017 690.783 196.017 cv
694.213 196.017 696.271 198.905 696.271 202.949 cv
696.271 205.259 695.729 207.173 695.368 208.111 cv
683.382 183.67 mo
676.017 183.67 670.421 179.734 670.421 172.225 cv
670.421 169.661 671.107 167.567 671.468 166.629 cv
675.62 166.881 li
675.15 167.82 674.248 169.3 674.248 171.647 cv
674.248 175.474 676.847 178.759 683.382 178.759 cv
689.917 178.759 692.516 175.474 692.516 171.647 cv
692.516 169.409 691.975 167.928 691.216 166.881 cv
695.441 166.629 li
695.946 167.567 696.343 169.806 696.343 172.08 cv
696.343 179.734 690.747 183.67 683.382 183.67 cv
695.982 162.802 mo
668.904 162.802 li
668.904 158.325 li
695.982 158.325 li
695.982 162.802 li
686.667 154.353 mo
679.086 154.353 677.1 149.949 677.1 146.158 cv
677.1 142.367 679.086 137.999 686.667 137.999 cv
694.466 137.999 696.271 142.367 696.271 146.158 cv
696.271 149.949 694.466 154.353 686.667 154.353 cv
686.667 142.62 mo
683.563 142.62 680.277 143.27 680.277 146.158 cv
680.277 149.046 683.563 149.732 686.667 149.732 cv
689.772 149.732 693.094 149.046 693.094 146.158 cv
693.094 143.27 689.772 142.62 686.667 142.62 cv
.303532 .0682689 .0736706 0 cmyk
f
695.285 132.317 mo
694.236 131.186 693.168 130.049 692.104 128.931 cv
692.434 128.523 692.588 127.988 692.588 127.312 cv
692.588 124.929 690.422 124.243 688.039 124.243 cv
687.558 124.243 li
686.074 122.74 684.568 121.243 683.056 119.767 cv
692.913 119.767 li
694.069 119.767 695.152 119.731 695.982 119.622 cv
695.982 123.81 li
695.043 123.846 694.069 123.955 693.13 123.955 cv
693.094 124.063 li
693.13 124.027 li
694.502 124.893 696.271 126.049 696.271 128.973 cv
696.271 130.406 695.909 131.499 695.285 132.317 cv
.262486 .0382696 .0475471 0 cmyk
f
689.375 134.461 mo
677.389 134.461 li
677.389 129.984 li
688.545 129.984 li
690.372 129.984 691.517 129.658 692.104 128.931 cv
693.168 130.049 694.236 131.186 695.285 132.317 cv
694.069 133.91 691.856 134.461 689.375 134.461 cv
687.558 124.243 mo
677.389 124.243 li
677.389 119.767 li
683.056 119.767 li
684.568 121.243 686.074 122.74 687.558 124.243 cv
.303532 .0682689 .0736706 0 cmyk
f
686.704 116.229 mo
680.638 116.229 677.1 113.81 677.1 109.802 cv
677.1 107.13 678.616 105.65 680.06 105 cv
680.06 104.928 li
668.904 104.928 li
668.904 100.451 li
692.805 100.451 li
694.141 100.451 695.296 100.415 695.982 100.307 cv
695.982 104.495 li
695.441 104.567 694.358 104.639 693.094 104.639 cv
693.094 104.748 li
694.682 105.47 696.271 106.806 696.271 109.694 cv
696.271 114.315 691.866 116.229 686.704 116.229 cv
686.631 104.928 mo
683.021 104.928 680.385 105.939 680.385 108.394 cv
680.385 110.885 682.804 111.752 686.523 111.752 cv
690.819 111.752 692.986 111.066 692.986 108.466 cv
692.986 105.831 690.133 104.928 686.631 104.928 cv
.262486 .0382696 .0475471 0 cmyk
f
695.567 475.57 mo
692.856 475.57 li
692.62 474.917 692.316 474.469 692.059 474.121 cv
694.987 473.942 li
695.142 474.308 695.369 474.859 695.567 475.57 cv
689.041 475.57 mo
681.312 475.57 li
682.502 474.12 684.684 473.165 688.324 473.165 cv
689.041 473.165 li
689.041 475.57 li
680.347 470.357 mo
680.347 466.891 li
680.795 466.831 681.691 466.771 682.737 466.771 cv
682.737 466.682 li
681.422 466.084 680.108 464.979 680.108 462.588 cv
680.108 458.764 683.753 457.18 688.025 457.18 cv
693.045 457.18 695.973 459.182 695.973 462.499 cv
695.973 464.71 694.718 465.935 693.523 466.473 cv
693.523 466.532 li
702.188 466.532 li
702.188 470.237 li
682.976 470.237 li
681.87 470.237 680.914 470.267 680.347 470.357 cv
688.175 460.885 mo
684.619 460.885 682.826 461.453 682.826 463.604 cv
682.826 465.785 685.187 466.532 688.085 466.532 cv
691.073 466.532 693.254 465.696 693.254 463.664 cv
693.254 461.602 691.252 460.885 688.175 460.885 cv
695.734 446.126 mo
674.879 446.126 li
674.879 442.301 li
692.686 442.301 li
692.686 435.429 li
695.734 435.429 li
695.734 446.126 li
688.264 433.637 mo
683.663 433.637 680.108 431.217 680.108 427.303 cv
680.108 423.986 682.05 421.148 688.324 421.148 cv
689.041 421.148 li
689.041 430.052 li
691.671 430.052 693.254 429.006 693.254 426.138 cv
693.254 423.867 692.567 422.791 692.059 422.104 cv
694.987 421.925 li
695.316 422.702 695.973 424.315 695.973 426.526 cv
695.973 431.486 692.417 433.637 688.264 433.637 cv
686.711 424.733 mo
683.992 424.733 682.617 425.63 682.617 427.303 cv
682.617 429.245 684.679 430.052 686.711 430.052 cv
686.711 424.733 li
691.461 419.086 mo
687.278 419.086 686.233 415.68 686.233 410.989 cv
686.233 410.242 li
685.665 410.242 li
684.141 410.242 682.737 410.989 682.737 413.111 cv
682.737 414.963 683.633 416.606 684.231 417.323 cv
681.243 417.533 li
680.765 416.487 680.108 415.023 680.108 412.662 cv
680.108 407.882 682.438 406.776 686.292 406.776 cv
693.015 406.776 li
694.121 406.776 695.136 406.657 695.734 406.567 cv
695.734 409.914 li
695.136 410.093 694.389 410.123 693.643 410.123 cv
693.643 410.182 li
694.897 411.109 695.973 412.274 695.973 414.485 cv
695.973 416.875 694.33 419.086 691.461 419.086 cv
688.205 410.242 mo
688.205 410.571 li
688.205 413.738 688.862 415.62 691.103 415.62 cv
692.507 415.62 693.463 414.694 693.463 413.26 cv
693.463 411.049 691.82 410.242 689.071 410.242 cv
688.205 410.242 li
680.347 403.34 mo
680.347 399.994 li
681.273 399.964 682.229 399.874 683.155 399.874 cv
683.155 399.815 li
681.96 399.366 680.108 398.201 680.108 395.901 cv
680.108 395.661 680.167 395.482 680.197 395.273 cv
683.663 395.273 li
683.573 395.602 683.514 395.93 683.514 396.319 cv
683.514 397.843 684.44 399.516 687.308 399.516 cv
695.734 399.516 li
695.734 403.221 li
682.886 403.221 li
681.93 403.221 681.034 403.251 680.347 403.34 cv
680.347 392.943 mo
680.347 389.477 li
681.123 389.447 681.93 389.357 682.707 389.357 cv
682.707 389.298 li
681.781 388.76 680.108 387.714 680.108 385.204 cv
680.108 381.709 682.707 380.663 685.814 380.663 cv
695.734 380.663 li
695.734 384.368 li
686.502 384.368 li
684.141 384.368 683.155 384.965 683.155 386.489 cv
683.155 388.431 684.798 389.118 686.77 389.118 cv
695.734 389.118 li
695.734 392.823 li
682.886 392.823 li
681.93 392.823 681.034 392.853 680.347 392.943 cv
677.448 377.017 mo
673.803 377.017 li
673.803 373.193 li
677.448 373.193 li
677.448 377.017 li
695.734 376.958 mo
680.347 376.958 li
680.347 373.253 li
695.734 373.253 li
695.734 376.958 li
680.347 369.668 mo
680.347 366.202 li
681.123 366.172 681.93 366.082 682.707 366.082 cv
682.707 366.023 li
681.781 365.485 680.108 364.439 680.108 361.929 cv
680.108 358.434 682.707 357.388 685.814 357.388 cv
695.734 357.388 li
695.734 361.093 li
686.502 361.093 li
684.141 361.093 683.155 361.69 683.155 363.214 cv
683.155 365.156 684.798 365.843 686.77 365.843 cv
695.734 365.843 li
695.734 369.548 li
682.886 369.548 li
681.93 369.548 681.034 369.578 680.347 369.668 cv
688.085 354.46 mo
683.842 354.46 680.108 352.936 680.108 348.902 cv
680.108 346.661 681.392 345.616 682.737 344.839 cv
682.737 344.719 li
681.93 344.719 681.153 344.63 680.347 344.6 cv
680.347 341.253 li
681.153 341.313 681.96 341.373 682.767 341.373 cv
694.121 341.373 li
698.931 341.373 702.367 342.837 702.367 348.484 cv
702.367 350.934 701.74 352.876 701.411 353.773 cv
698.124 353.563 li
698.602 352.697 699.439 350.964 699.439 349.022 cv
699.439 345.526 697.019 344.958 694.599 344.958 cv
693.135 344.958 li
693.135 345.018 li
694.33 345.616 695.734 346.661 695.734 349.082 cv
695.734 351.233 694.3 354.46 688.085 354.46 cv
687.846 344.958 mo
684.619 344.958 682.886 346.183 682.916 347.946 cv
682.946 349.888 684.739 350.635 687.876 350.635 cv
691.491 350.635 693.015 349.47 693.015 348.215 cv
693.015 345.885 691.342 344.958 687.846 344.958 cv
.303532 .0682689 .0736706 0 cmyk
f
697.433 85.9816 mo
668.75 85.9816 li
668.75 79.7358 li
691.269 70.2016 li
691.269 70.1196 li
668.75 70.1196 li
668.75 65.3527 li
697.433 65.3527 li
697.433 71.6395 li
675.078 81.1327 li
675.078 81.2147 li
697.433 81.2147 li
697.433 85.9816 li
687.161 60.6278 mo
680.831 60.6278 675.941 57.2988 675.941 51.9156 cv
675.941 47.3537 678.612 43.4495 687.243 43.4495 cv
688.228 43.4495 li
688.228 55.6958 li
691.844 55.6958 694.022 54.2575 694.022 50.3126 cv
694.022 47.1897 693.078 45.7108 692.378 44.7647 cv
696.407 44.5186 li
696.858 45.5867 697.762 47.8056 697.762 50.8468 cv
697.762 57.6686 692.872 60.6278 687.161 60.6278 cv
685.023 48.3815 mo
681.283 48.3815 679.393 49.6147 679.393 51.9156 cv
679.393 54.5867 682.229 55.6958 685.023 55.6958 cv
685.023 48.3815 li
680.009 40.9848 mo
676.27 40.9848 li
676.27 37.6148 li
671.914 37.6148 li
670.352 32.5198 li
676.27 32.5198 li
676.27 28.2867 li
680.009 28.2867 li
680.009 32.5198 li
690.981 32.5198 li
693.241 32.5198 693.899 31.6978 693.899 30.2175 cv
693.899 29.3138 693.652 28.6565 693.447 28.2867 cv
697.063 28.2867 li
697.433 29.0677 697.762 30.1765 697.762 31.6978 cv
697.762 35.4776 696.036 37.6148 691.598 37.6148 cv
680.009 37.6148 li
680.009 40.9848 li
677.298 27.1466 mo
677.298 22.1416 li
692.977 18.8966 li
692.977 18.8186 li
677.298 15.4165 li
677.298 9.90366 li
692.977 6.58065 li
692.977 6.50162 li
677.298 3.25665 li
677.298 -.430173 li
681.076 -.430173 li
697.433 3.92158 li
697.433 9.19971 li
681.754 12.7965 li
681.754 12.8755 li
697.433 16.3946 li
697.433 21.7117 li
677.298 27.1466 li
.262486 .0382696 .0475471 0 cmyk
f
757.873 475.57 mo
726.755 475.57 li
726.755 472.396 li
739.576 472.396 li
739.576 472.313 li
737.916 471.566 736.174 469.865 736.174 466.795 cv
736.174 462.19 740.24 459.409 747.21 459.409 cv
753.143 459.409 758.205 461.608 758.205 466.919 cv
758.205 470.238 756.38 471.773 754.554 472.603 cv
754.554 472.728 li
756.006 472.728 757.251 472.811 757.873 472.894 cv
757.873 475.57 li
747.003 464.555 mo
742.729 464.555 739.949 465.55 739.949 468.413 cv
739.949 471.235 742.978 472.396 747.127 472.396 cv
751.152 472.396 754.43 471.359 754.43 468.33 cv
754.43 465.342 751.94 464.555 747.003 464.555 cv
747.169 455.924 mo
738.456 455.924 736.174 450.863 736.174 446.506 cv
736.174 442.149 738.456 437.129 747.169 437.129 cv
756.131 437.129 758.205 442.149 758.205 446.506 cv
758.205 450.863 756.131 455.924 747.169 455.924 cv
747.169 442.44 mo
743.6 442.44 739.825 443.187 739.825 446.506 cv
739.825 449.825 743.6 450.614 747.169 450.614 cv
750.737 450.614 754.554 449.825 754.554 446.506 cv
754.554 443.187 750.737 442.44 747.169 442.44 cv
736.506 433.064 mo
736.506 428.417 li
737.792 428.375 739.119 428.251 740.406 428.251 cv
740.406 428.168 li
738.746 427.545 736.174 425.927 736.174 422.732 cv
736.174 422.401 736.257 422.151 736.298 421.861 cv
741.111 421.861 li
740.987 422.317 740.904 422.774 740.904 423.313 cv
740.904 425.429 742.19 427.753 746.173 427.753 cv
757.873 427.753 li
757.873 432.898 li
740.032 432.898 li
738.705 432.898 737.46 432.939 736.506 433.064 cv
736.506 418.625 mo
736.506 413.812 li
737.584 413.771 738.705 413.646 739.783 413.646 cv
739.783 413.563 li
738.497 412.816 736.174 411.364 736.174 407.879 cv
736.174 403.025 739.783 401.572 744.098 401.572 cv
757.873 401.572 li
757.873 406.717 li
745.053 406.717 li
741.775 406.717 740.406 407.547 740.406 409.663 cv
740.406 412.36 742.688 413.315 745.426 413.315 cv
757.873 413.315 li
757.873 418.459 li
740.032 418.459 li
738.705 418.459 737.46 418.501 736.506 418.625 cv
.303532 .0682689 .0736706 0 cmyk
f
751.928 214.286 mo
751.928 214.286 li
751.138 212.696 750.339 211.117 749.526 209.541 cv
749.526 209.541 li
750.339 211.117 751.138 212.696 751.928 214.286 cv
744.549 200.243 mo
744.549 200.243 li
743.967 199.195 743.386 198.161 742.794 197.119 cv
743.386 198.161 743.967 199.195 744.549 200.243 cv
.341649 .00387579 .0252995 0 cmyk
f
756.215 214.286 mo
751.928 214.286 li
751.138 212.696 750.339 211.117 749.526 209.541 cv
752.582 209.541 li
752.582 207.947 li
752.582 203.019 749.486 200.587 744.549 200.243 cv
743.967 199.195 743.386 198.161 742.794 197.119 cv
742.435 196.489 742.062 195.838 741.7 195.209 cv
742.209 195.175 742.735 195.158 743.278 195.158 cv
751.989 195.158 756.215 200.348 756.215 207.539 cv
756.215 214.286 li
.262486 .0382696 .0475471 0 cmyk
f
751.928 214.286 mo
730.341 214.286 li
730.341 207.539 li
730.341 199.97 734.178 195.718 741.7 195.209 cv
742.062 195.838 742.435 196.489 742.794 197.119 cv
743.386 198.161 743.967 199.195 744.549 200.243 cv
744.138 200.214 743.714 200.2 743.278 200.2 cv
737.606 200.2 733.973 202.609 733.973 207.947 cv
733.973 209.541 li
749.526 209.541 li
750.339 211.117 751.138 212.696 751.928 214.286 cv
.303532 .0682689 .0736706 0 cmyk
f
740.012 192.318 mo
739.236 191.003 738.447 189.685 737.654 188.381 cv
751.544 184.668 li
751.544 184.594 li
737.124 180.924 li
737.124 176.476 li
759.848 183.445 li
762.48 184.26 764.444 185.817 764.444 188.894 cv
764.444 190.117 764.185 191.155 763.962 191.822 cv
760.441 191.563 li
760.626 191.044 760.812 190.525 760.812 189.821 cv
760.849 188.449 759.996 187.856 758.031 187.263 cv
756.4 186.929 li
740.012 192.318 li
.262486 .0382696 .0475471 0 cmyk
f
737.124 193.268 mo
737.124 188.523 li
737.654 188.381 li
738.447 189.685 739.236 191.003 740.012 192.318 cv
737.124 193.268 li
.303532 .0682689 .0736706 0 cmyk
f
737.124 174.363 mo
737.124 170.063 li
738.088 170.026 739.089 169.915 740.053 169.915 cv
740.053 169.84 li
738.904 169.173 736.828 167.876 736.828 164.762 cv
736.828 160.425 740.053 159.127 743.908 159.127 cv
756.215 159.127 li
756.215 163.724 li
744.761 163.724 li
741.832 163.724 740.609 164.465 740.609 166.356 cv
740.609 168.765 742.648 169.618 745.094 169.618 cv
756.215 169.618 li
756.215 174.215 li
740.275 174.215 li
739.089 174.215 737.977 174.252 737.124 174.363 cv
750.914 155.977 mo
745.724 155.977 744.427 151.751 744.427 145.931 cv
744.427 145.004 li
743.723 145.004 li
741.832 145.004 740.09 145.931 740.09 148.563 cv
740.09 150.861 741.202 152.9 741.943 153.79 cv
738.236 154.049 li
737.643 152.752 736.828 150.935 736.828 148.007 cv
736.828 142.076 739.719 140.704 744.501 140.704 cv
752.842 140.704 li
754.213 140.704 755.474 140.556 756.215 140.445 cv
756.215 144.596 li
755.474 144.819 754.547 144.856 753.62 144.856 cv
753.62 144.93 li
755.177 146.079 756.512 147.525 756.512 150.268 cv
756.512 153.234 754.473 155.977 750.914 155.977 cv
746.874 145.004 mo
746.874 145.412 li
746.874 149.341 747.689 151.677 750.469 151.677 cv
752.212 151.677 753.398 150.528 753.398 148.748 cv
753.398 146.005 751.359 145.004 747.949 145.004 cv
746.874 145.004 li
737.124 136.701 mo
737.124 132.104 li
738.125 132.067 739.126 131.956 740.127 131.956 cv
740.127 131.882 li
738.644 131.177 736.828 129.695 736.828 127.063 cv
736.828 123.838 738.83 122.8 739.867 122.244 cv
738.533 121.317 736.828 119.945 736.828 117.128 cv
736.828 112.976 739.793 111.642 744.427 111.642 cv
756.215 111.642 li
756.215 116.239 li
744.167 116.239 li
741.795 116.239 740.609 116.98 740.609 118.685 cv
740.609 120.724 742.536 121.799 744.649 121.799 cv
756.215 121.799 li
756.215 126.395 li
744.167 126.395 li
741.795 126.395 740.609 127.137 740.609 128.842 cv
740.609 130.881 742.536 131.956 744.649 131.956 cv
756.215 131.956 li
756.215 136.552 li
740.238 136.552 li
738.867 136.552 737.829 136.627 737.124 136.701 cv
746.651 108.12 mo
738.867 108.12 736.828 103.598 736.828 99.7058 cv
736.828 95.8129 738.867 91.3278 746.651 91.3278 cv
754.658 91.3278 756.512 95.8129 756.512 99.7058 cv
756.512 103.598 754.658 108.12 746.651 108.12 cv
746.651 96.0727 mo
743.463 96.0727 740.09 96.7396 740.09 99.7058 cv
740.09 102.671 743.463 103.375 746.651 103.375 cv
749.839 103.375 753.249 102.671 753.249 99.7058 cv
753.249 96.7396 749.839 96.0727 746.651 96.0727 cv
756.215 87.2508 mo
730.341 87.2508 li
730.341 80.5038 li
730.341 72.4228 734.715 68.1228 743.278 68.1228 cv
751.989 68.1228 756.215 73.3129 756.215 80.5038 cv
756.215 87.2508 li
743.278 73.1648 mo
737.606 73.1648 733.973 75.5738 733.973 80.9119 cv
733.973 82.5059 li
752.582 82.5059 li
752.582 80.9119 li
752.582 75.5738 748.949 73.1648 743.278 73.1648 cv
756.215 63.6747 mo
730.341 63.6747 li
730.341 56.1129 li
730.341 50.7748 732.342 48.3288 736.717 48.3288 cv
740.831 48.3288 742.055 50.9228 742.685 52.6289 cv
742.759 52.6289 li
743.204 50.6267 744.612 47.7349 748.949 47.7349 cv
753.657 47.7349 756.215 51.183 756.215 55.7788 cv
756.215 63.6747 li
748.616 52.4798 mo
746.355 52.4798 744.649 53.6656 744.649 56.5948 cv
744.649 59.0788 li
752.582 59.0788 li
752.582 56.4467 li
752.582 53.8887 751.025 52.4798 748.616 52.4798 cv
737.31 52.9247 mo
735.123 52.9247 733.825 54.4819 733.825 56.7429 cv
733.825 59.0788 li
741.165 59.0788 li
741.165 56.6318 li
741.165 54.2969 739.423 52.9247 737.31 52.9247 cv
.262486 .0382696 .0475471 0 cmyk
f
758.661 383.423 mo
753.184 383.423 li
753.483 382.676 753.832 381.83 753.832 380.485 cv
753.832 377.398 751.541 376.552 748.803 376.552 cv
724.257 376.552 li
724.257 370.179 li
748.853 370.179 li
756.421 370.179 759.508 374.212 759.508 378.842 cv
759.508 380.336 759.159 382.278 758.661 383.423 cv
749.898 364.603 mo
733.368 364.603 li
733.368 358.429 li
748.753 358.429 li
752.687 358.429 754.33 357.334 754.33 354.745 cv
754.33 351.459 751.342 350.513 748.056 350.513 cv
733.368 350.513 li
733.368 344.339 li
754.778 344.339 li
756.371 344.339 757.865 344.289 759.01 344.14 cv
759.01 349.915 li
757.715 349.965 756.371 350.114 755.076 350.114 cv
755.026 350.264 li
755.076 350.214 li
756.968 351.409 759.408 353.002 759.408 357.035 cv
759.408 362.86 755.076 364.603 749.898 364.603 cv
733.368 338.862 mo
733.368 333.087 li
734.115 332.987 735.609 332.887 737.351 332.887 cv
737.351 332.738 li
735.161 331.742 732.97 329.9 732.97 325.917 cv
732.97 319.544 739.044 316.905 746.164 316.905 cv
754.529 316.905 759.408 320.241 759.408 325.768 cv
759.408 329.452 757.317 331.493 755.325 332.39 cv
755.325 332.489 li
769.764 332.489 li
769.764 338.663 li
737.75 338.663 li
735.907 338.663 734.313 338.713 733.368 338.862 cv
746.413 323.079 mo
740.488 323.079 737.501 324.025 737.501 327.61 cv
737.501 331.244 741.434 332.489 746.264 332.489 cv
751.243 332.489 754.877 331.095 754.877 327.709 cv
754.877 324.274 751.541 323.079 746.413 323.079 cv
733.368 314.566 mo
733.368 308.193 li
752.736 303.015 li
752.736 302.915 li
733.368 297.986 li
733.368 292.011 li
763.889 301.372 li
767.424 302.467 770.063 304.558 770.063 308.691 cv
770.063 310.334 769.714 311.728 769.416 312.624 cv
764.686 312.275 li
764.935 311.578 765.184 310.881 765.184 309.935 cv
765.233 308.093 764.088 307.297 761.449 306.5 cv
759.259 306.052 li
733.368 314.566 li
737.899 290.767 mo
733.368 290.767 li
733.368 286.684 li
728.091 286.684 li
726.199 280.51 li
733.368 280.51 li
733.368 275.382 li
737.899 275.382 li
737.899 280.51 li
751.193 280.51 li
753.931 280.51 754.728 279.514 754.728 277.722 cv
754.728 276.627 754.429 275.83 754.18 275.382 cv
758.562 275.382 li
759.01 276.328 759.408 277.672 759.408 279.514 cv
759.408 284.095 757.317 286.684 751.94 286.684 cv
737.899 286.684 li
737.899 290.767 li
746.562 272.146 mo
738.895 272.146 732.97 268.113 732.97 261.591 cv
732.97 256.064 736.206 251.334 746.662 251.334 cv
747.857 251.334 li
747.857 266.171 li
752.238 266.171 754.877 264.429 754.877 259.649 cv
754.877 255.865 753.732 254.073 752.886 252.927 cv
757.765 252.629 li
758.313 253.923 759.408 256.612 759.408 260.296 cv
759.408 268.561 753.483 272.146 746.562 272.146 cv
743.973 257.309 mo
739.443 257.309 737.152 258.803 737.152 261.591 cv
737.152 264.827 740.588 266.171 743.973 266.171 cv
743.973 257.309 li
733.368 246.555 mo
733.368 240.978 li
734.912 240.928 736.505 240.779 738.049 240.779 cv
738.049 240.679 li
736.057 239.933 732.97 237.991 732.97 234.157 cv
732.97 233.759 733.07 233.46 733.119 233.111 cv
738.895 233.111 li
738.746 233.659 738.646 234.207 738.646 234.854 cv
738.646 237.393 740.189 240.182 744.969 240.182 cv
759.01 240.182 li
759.01 246.355 li
737.599 246.355 li
736.007 246.355 734.514 246.405 733.368 246.555 cv
.303532 .0682689 .0736706 0 cmyk
f
640.993 215.335 mo
622.861 215.335 li
622.861 210.14 li
622.861 206.399 624.939 204.451 628.368 204.451 cv
631.797 204.451 633.901 206.399 633.901 210.14 cv
633.901 212.01 li
640.993 212.01 li
640.993 215.335 li
628.368 207.776 mo
626.393 207.776 625.406 208.685 625.406 210.763 cv
625.406 212.01 li
631.355 212.01 li
631.355 210.763 li
631.355 208.685 630.342 207.776 628.368 207.776 cv
627.614 202.165 mo
627.614 199.255 li
628.42 199.229 629.251 199.151 630.056 199.151 cv
630.056 199.099 li
629.017 198.71 627.407 197.697 627.407 195.696 cv
627.407 195.489 627.458 195.333 627.484 195.151 cv
630.498 195.151 li
630.42 195.437 630.368 195.722 630.368 196.06 cv
630.368 197.385 631.173 198.84 633.667 198.84 cv
640.993 198.84 li
640.993 202.061 li
629.822 202.061 li
628.991 202.061 628.212 202.087 627.614 202.165 cv
634.498 193.644 mo
630.498 193.644 627.407 191.54 627.407 188.137 cv
627.407 185.254 629.095 182.786 634.55 182.786 cv
635.174 182.786 li
635.174 190.527 li
637.46 190.527 638.836 189.618 638.836 187.124 cv
638.836 185.15 638.239 184.215 637.797 183.617 cv
640.343 183.461 li
640.629 184.137 641.2 185.54 641.2 187.462 cv
641.2 191.774 638.109 193.644 634.498 193.644 cv
633.147 185.903 mo
630.784 185.903 629.589 186.683 629.589 188.137 cv
629.589 189.826 631.381 190.527 633.147 190.527 cv
633.147 185.903 li
634.316 180.656 mo
629.952 180.656 627.407 178.915 627.407 176.032 cv
627.407 174.11 628.498 173.045 629.537 172.577 cv
629.537 172.525 li
621.51 172.525 li
621.51 169.304 li
638.707 169.304 li
639.668 169.304 640.499 169.278 640.993 169.2 cv
640.993 172.213 li
640.603 172.265 639.824 172.317 638.914 172.317 cv
638.914 172.395 li
640.057 172.915 641.2 173.876 641.2 175.954 cv
641.2 179.279 638.031 180.656 634.316 180.656 cv
634.264 172.525 mo
631.667 172.525 629.77 173.252 629.77 175.019 cv
629.77 176.811 631.511 177.435 634.187 177.435 cv
637.278 177.435 638.836 176.941 638.836 175.071 cv
638.836 173.174 636.784 172.525 634.264 172.525 cv
625.095 166.083 mo
621.926 166.083 li
621.926 162.758 li
625.095 162.758 li
625.095 166.083 li
640.993 166.031 mo
627.615 166.031 li
627.615 162.81 li
640.993 162.81 li
640.993 166.031 li
634.316 159.953 mo
630.498 159.953 627.407 157.978 627.407 153.484 cv
627.407 152.471 627.718 151.276 627.952 150.679 cv
630.498 150.861 li
630.212 151.432 629.848 152.237 629.848 153.121 cv
629.848 155.563 631.485 156.628 634.342 156.628 cv
636.836 156.628 638.759 155.433 638.759 152.965 cv
638.759 152.186 638.395 151.12 638.109 150.679 cv
640.655 150.497 li
640.941 151.25 641.2 152.367 641.2 153.666 cv
641.2 158.082 638.109 159.953 634.316 159.953 cv
634.316 148.887 mo
630.498 148.887 627.407 146.912 627.407 142.418 cv
627.407 141.405 627.718 140.21 627.952 139.613 cv
630.498 139.795 li
630.212 140.366 629.848 141.171 629.848 142.055 cv
629.848 144.496 631.485 145.562 634.342 145.562 cv
636.836 145.562 638.759 144.367 638.759 141.899 cv
638.759 141.119 638.395 140.054 638.109 139.613 cv
640.655 139.431 li
640.941 140.184 641.2 141.301 641.2 142.6 cv
641.2 147.016 638.109 148.887 634.316 148.887 cv
625.095 137.197 mo
621.926 137.197 li
621.926 133.872 li
625.095 133.872 li
625.095 137.197 li
640.993 137.145 mo
627.615 137.145 li
627.615 133.924 li
640.993 133.924 li
640.993 137.145 li
634.29 131.067 mo
628.835 131.067 627.407 127.897 627.407 125.17 cv
627.407 122.442 628.835 119.299 634.29 119.299 cv
639.901 119.299 641.2 122.442 641.2 125.17 cv
641.2 127.897 639.901 131.067 634.29 131.067 cv
634.29 122.624 mo
632.056 122.624 629.692 123.092 629.692 125.17 cv
629.692 127.248 632.056 127.742 634.29 127.742 cv
636.524 127.742 638.914 127.248 638.914 125.17 cv
638.914 123.092 636.524 122.624 634.29 122.624 cv
626.134 126.703 mo
622.393 125.04 li
622.393 122.027 li
626.134 124.676 li
626.134 126.703 li
627.614 116.858 mo
627.614 113.844 li
628.29 113.818 628.991 113.74 629.667 113.74 cv
629.667 113.688 li
628.861 113.221 627.407 112.312 627.407 110.129 cv
627.407 107.09 629.667 106.181 632.368 106.181 cv
640.993 106.181 li
640.993 109.402 li
632.966 109.402 li
630.913 109.402 630.056 109.922 630.056 111.246 cv
630.056 112.935 631.485 113.532 633.199 113.532 cv
640.993 113.532 li
640.993 116.754 li
629.822 116.754 li
628.991 116.754 628.212 116.78 627.614 116.858 cv
f
814.544 37.0603 mo
789.678 37.0603 li
789.678 29.2935 li
789.678 24.8764 791.673 21.8835 796.233 21.8835 cv
799.475 21.8835 801.648 23.9143 802.075 26.6934 cv
802.182 26.6934 li
802.325 25.7664 802.753 24.7333 805.068 23.9503 cv
814.544 20.7083 li
814.544 25.5536 li
806.458 28.0116 li
804.497 28.6175 803.857 29.7923 803.857 31.4673 cv
803.857 32.5004 li
814.544 32.5004 li
814.544 37.0603 li
796.732 26.5864 mo
793.882 26.5864 793.169 28.0823 793.169 30.6473 cv
793.169 32.5004 li
800.508 32.5004 li
800.508 30.6473 li
800.508 28.2254 799.261 26.5864 796.732 26.5864 cv
805.638 18.1783 mo
800.152 18.1783 795.912 15.2925 795.912 10.6253 cv
795.912 6.67135 798.228 3.28632 805.71 3.28632 cv
806.565 3.28632 li
806.565 13.9036 li
809.7 13.9036 811.588 12.6564 811.588 9.23639 cv
811.588 6.5283 810.769 5.24645 810.163 4.42645 cv
813.653 4.21336 li
814.046 5.1394 814.83 7.06351 814.83 9.69957 cv
814.83 15.6136 810.59 18.1783 805.638 18.1783 cv
803.786 7.56138 mo
800.544 7.56138 798.905 8.63048 798.905 10.6253 cv
798.905 12.9415 801.362 13.9036 803.786 13.9036 cv
803.786 7.56138 li
805.389 .365481 mo
803.354 .365481 801.607 .0895819 800.188 -.430173 cv
810.501 -.430173 li
809.015 .113049 807.252 .365481 805.389 .365481 cv
.262486 .0382696 .0475471 0 cmyk
f
754.863 33.087 mo
732.67 33.087 li
732.67 26.1559 li
732.67 22.2129 734.451 19.5429 738.521 19.5429 cv
741.414 19.5429 743.353 21.3549 743.735 23.8349 cv
743.83 23.8349 li
743.957 23.0079 744.339 22.0859 746.406 21.3869 cv
754.863 18.4931 li
754.863 22.8169 li
747.646 25.0111 li
745.897 25.552 745.325 26.601 745.325 28.095 cv
745.325 29.017 li
754.863 29.017 li
754.863 33.087 li
738.966 23.7389 mo
736.422 23.7389 735.786 25.0751 735.786 27.364 cv
735.786 29.017 li
742.336 29.017 li
742.336 27.364 li
742.336 25.2022 741.223 23.7389 738.966 23.7389 cv
746.914 16.2359 mo
742.018 16.2359 738.234 13.6612 738.234 9.49516 cv
738.234 5.96607 740.301 2.94585 746.978 2.94585 cv
747.741 2.94585 li
747.741 12.421 li
750.539 12.421 752.224 11.3079 752.224 8.25499 cv
752.224 5.83902 751.493 4.69389 750.952 3.96293 cv
754.068 3.77219 li
754.418 4.59885 755.117 6.31588 755.117 8.66916 cv
755.117 13.947 751.334 16.2359 746.914 16.2359 cv
745.261 6.76106 mo
742.368 6.76106 740.905 7.71511 740.905 9.49516 cv
740.905 11.562 743.099 12.421 745.261 12.421 cv
745.261 6.76106 li
746.692 .339137 mo
745.191 .339137 743.783 .0901078 742.561 -.430173 cv
750.882 -.430173 li
749.646 .0924772 748.216 .339137 746.692 .339137 cv
f
814.291 392.277 mo
790.278 392.277 li
790.278 386.016 li
790.278 378.516 794.337 374.525 802.284 374.525 cv
810.369 374.525 814.291 379.342 814.291 386.016 cv
814.291 392.277 li
802.284 379.204 mo
797.021 379.204 793.649 381.44 793.649 386.394 cv
793.649 387.873 li
810.919 387.873 li
810.919 386.394 li
810.919 381.44 807.548 379.204 802.284 379.204 cv
805.69 371.498 mo
800.392 371.498 796.298 368.711 796.298 364.205 cv
796.298 360.386 798.534 357.118 805.759 357.118 cv
806.585 357.118 li
806.585 367.37 li
809.612 367.37 811.436 366.166 811.436 362.863 cv
811.436 360.248 810.644 359.01 810.059 358.219 cv
813.431 358.012 li
813.809 358.907 814.566 360.764 814.566 363.31 cv
814.566 369.021 810.472 371.498 805.69 371.498 cv
803.901 361.246 mo
800.771 361.246 799.188 362.278 799.188 364.205 cv
799.188 366.441 801.562 367.37 803.901 367.37 cv
803.901 361.246 li
799.704 355.054 mo
796.574 355.054 li
796.574 352.233 li
792.927 352.233 li
791.62 347.967 li
796.574 347.967 li
796.574 344.423 li
799.704 344.423 li
799.704 347.967 li
808.89 347.967 li
810.782 347.967 811.332 347.279 811.332 346.04 cv
811.332 345.283 811.126 344.733 810.954 344.423 cv
813.981 344.423 li
814.291 345.077 814.566 346.006 814.566 347.279 cv
814.566 350.444 813.121 352.233 809.406 352.233 cv
799.704 352.233 li
799.704 355.054 li
805.69 342.187 mo
800.392 342.187 796.298 339.401 796.298 334.894 cv
796.298 331.075 798.534 327.807 805.759 327.807 cv
806.585 327.807 li
806.585 338.059 li
809.612 338.059 811.436 336.855 811.436 333.552 cv
811.436 330.938 810.644 329.699 810.059 328.908 cv
813.431 328.701 li
813.809 329.596 814.566 331.454 814.566 333.999 cv
814.566 339.71 810.472 342.187 805.69 342.187 cv
803.901 331.935 mo
800.771 331.935 799.188 332.967 799.188 334.894 cv
799.188 337.13 801.562 338.059 803.901 338.059 cv
803.901 331.935 li
805.449 324.986 mo
800.392 324.986 796.298 322.371 796.298 316.42 cv
796.298 315.078 796.711 313.495 797.021 312.704 cv
800.392 312.945 li
800.014 313.702 799.532 314.768 799.532 315.938 cv
799.532 319.172 801.7 320.582 805.484 320.582 cv
808.787 320.582 811.332 319 811.332 315.732 cv
811.332 314.699 810.851 313.289 810.472 312.704 cv
813.844 312.463 li
814.222 313.461 814.566 314.94 814.566 316.66 cv
814.566 322.509 810.472 324.986 805.449 324.986 cv
805.449 310.33 mo
800.392 310.33 796.298 307.716 796.298 301.764 cv
796.298 300.422 796.711 298.84 797.021 298.049 cv
800.392 298.29 li
800.014 299.046 799.532 300.113 799.532 301.283 cv
799.532 304.516 801.7 305.927 805.484 305.927 cv
808.787 305.927 811.332 304.344 811.332 301.076 cv
811.332 300.044 810.851 298.634 810.472 298.049 cv
813.844 297.808 li
814.222 298.806 814.566 300.285 814.566 302.005 cv
814.566 307.853 810.472 310.33 805.449 310.33 cv
793.236 294.85 mo
789.039 294.85 li
789.039 290.446 li
793.236 290.446 li
793.236 294.85 li
814.291 294.781 mo
796.574 294.781 li
796.574 290.515 li
814.291 290.515 li
814.291 294.781 li
805.415 286.731 mo
798.19 286.731 796.298 282.533 796.298 278.921 cv
796.298 275.309 798.19 271.146 805.415 271.146 cv
812.846 271.146 814.566 275.309 814.566 278.921 cv
814.566 282.533 812.846 286.731 805.415 286.731 cv
805.415 275.55 mo
802.456 275.55 799.326 276.169 799.326 278.921 cv
799.326 281.673 802.456 282.327 805.415 282.327 cv
808.374 282.327 811.539 281.673 811.539 278.921 cv
811.539 276.169 808.374 275.55 805.415 275.55 cv
794.613 280.951 mo
789.659 278.749 li
789.659 274.758 li
794.613 278.267 li
794.613 280.951 li
796.574 267.913 mo
796.574 263.922 li
797.468 263.888 798.397 263.784 799.291 263.784 cv
799.291 263.715 li
798.225 263.096 796.298 261.892 796.298 259.002 cv
796.298 254.977 799.291 253.773 802.869 253.773 cv
814.291 253.773 li
814.291 258.039 li
803.661 258.039 li
800.943 258.039 799.807 258.727 799.807 260.482 cv
799.807 262.718 801.7 263.509 803.97 263.509 cv
814.291 263.509 li
814.291 267.775 li
799.498 267.775 li
798.397 267.775 797.365 267.809 796.574 267.913 cv
805.449 241.457 mo
799.67 241.457 796.298 239.152 796.298 235.333 cv
796.298 232.788 797.743 231.377 799.119 230.758 cv
799.119 230.689 li
788.489 230.689 li
788.489 226.423 li
811.264 226.423 li
812.536 226.423 813.637 226.389 814.291 226.286 cv
814.291 230.276 li
813.775 230.345 812.743 230.414 811.539 230.414 cv
811.539 230.517 li
813.052 231.205 814.566 232.478 814.566 235.23 cv
814.566 239.634 810.369 241.457 805.449 241.457 cv
805.381 230.689 mo
801.94 230.689 799.429 231.652 799.429 233.992 cv
799.429 236.366 801.734 237.191 805.277 237.191 cv
809.371 237.191 811.436 236.538 811.436 234.061 cv
811.436 231.549 808.718 230.689 805.381 230.689 cv
805.69 222.983 mo
800.392 222.983 796.298 220.197 796.298 215.69 cv
796.298 211.871 798.534 208.603 805.759 208.603 cv
806.585 208.603 li
806.585 218.855 li
809.612 218.855 811.436 217.651 811.436 214.348 cv
811.436 211.734 810.644 210.495 810.059 209.704 cv
813.431 209.497 li
813.809 210.392 814.566 212.25 814.566 214.795 cv
814.566 220.506 810.472 222.983 805.69 222.983 cv
803.901 212.731 mo
800.771 212.731 799.188 213.763 799.188 215.69 cv
799.188 217.926 801.562 218.855 803.901 218.855 cv
803.901 212.731 li
809.371 197.285 mo
804.555 197.285 803.351 193.363 803.351 187.961 cv
803.351 187.101 li
802.697 187.101 li
800.943 187.101 799.326 187.961 799.326 190.404 cv
799.326 192.537 800.358 194.429 801.046 195.255 cv
797.606 195.496 li
797.055 194.292 796.298 192.606 796.298 189.888 cv
796.298 184.384 798.982 183.111 803.42 183.111 cv
811.16 183.111 li
812.433 183.111 813.603 182.973 814.291 182.87 cv
814.291 186.723 li
813.603 186.929 812.743 186.964 811.883 186.964 cv
811.883 187.033 li
813.328 188.099 814.566 189.441 814.566 191.987 cv
814.566 194.739 812.674 197.285 809.371 197.285 cv
805.621 187.101 mo
805.621 187.48 li
805.621 191.127 806.378 193.294 808.959 193.294 cv
810.575 193.294 811.676 192.227 811.676 190.576 cv
811.676 188.03 809.784 187.101 806.619 187.101 cv
805.621 187.101 li
796.574 179.292 mo
796.574 175.301 li
797.468 175.267 798.397 175.164 799.291 175.164 cv
799.291 175.095 li
798.225 174.476 796.298 173.271 796.298 170.382 cv
796.298 166.357 799.291 165.152 802.869 165.152 cv
814.291 165.152 li
814.291 169.418 li
803.661 169.418 li
800.943 169.418 799.807 170.106 799.807 171.861 cv
799.807 174.097 801.7 174.888 803.97 174.888 cv
814.291 174.888 li
814.291 179.154 li
799.498 179.154 li
798.397 179.154 797.365 179.189 796.574 179.292 cv
805.415 161.781 mo
798.19 161.781 796.298 157.584 796.298 153.972 cv
796.298 150.359 798.19 146.197 805.415 146.197 cv
812.846 146.197 814.566 150.359 814.566 153.972 cv
814.566 157.584 812.846 161.781 805.415 161.781 cv
805.415 150.6 mo
802.456 150.6 799.326 151.219 799.326 153.972 cv
799.326 156.724 802.456 157.377 805.415 157.377 cv
808.374 157.377 811.539 156.724 811.539 153.972 cv
811.539 151.219 808.374 150.6 805.415 150.6 cv
796.574 143.066 mo
796.574 138.8 li
797.502 138.766 798.431 138.663 799.36 138.663 cv
799.36 138.594 li
797.984 137.94 796.298 136.564 796.298 134.122 cv
796.298 131.129 798.156 130.165 799.119 129.649 cv
797.881 128.789 796.298 127.516 796.298 124.902 cv
796.298 121.049 799.051 119.81 803.351 119.81 cv
814.291 119.81 li
814.291 124.076 li
803.11 124.076 li
800.908 124.076 799.807 124.764 799.807 126.347 cv
799.807 128.239 801.596 129.236 803.557 129.236 cv
814.291 129.236 li
814.291 133.502 li
803.11 133.502 li
800.908 133.502 799.807 134.19 799.807 135.773 cv
799.807 137.665 801.596 138.663 803.557 138.663 cv
814.291 138.663 li
814.291 142.929 li
799.463 142.929 li
798.19 142.929 797.227 142.998 796.574 143.066 cv
809.371 116.989 mo
804.555 116.989 803.351 113.067 803.351 107.666 cv
803.351 106.806 li
802.697 106.806 li
800.943 106.806 799.326 107.666 799.326 110.108 cv
799.326 112.241 800.358 114.134 801.046 114.959 cv
797.606 115.2 li
797.055 113.996 796.298 112.31 796.298 109.592 cv
796.298 104.088 798.982 102.815 803.42 102.815 cv
811.16 102.815 li
812.433 102.815 813.603 102.677 814.291 102.574 cv
814.291 106.427 li
813.603 106.634 812.743 106.668 811.883 106.668 cv
811.883 106.737 li
813.328 107.803 814.566 109.145 814.566 111.691 cv
814.566 114.443 812.674 116.989 809.371 116.989 cv
805.621 106.806 mo
805.621 107.184 li
805.621 110.831 806.378 112.998 808.959 112.998 cv
810.575 112.998 811.676 111.932 811.676 110.28 cv
811.676 107.735 809.784 106.806 806.619 106.806 cv
805.621 106.806 li
814.291 98.446 mo
788.489 98.446 li
788.489 94.1799 li
814.291 94.1799 li
814.291 98.446 li
814.291 89.5011 mo
796.574 89.5011 li
796.574 85.235 li
814.291 85.235 li
814.291 89.5011 li
794.613 89.398 mo
789.659 87.1961 li
789.659 83.2062 li
794.613 86.7149 li
794.613 89.398 li
809.371 81.899 mo
804.555 81.899 803.351 77.9771 803.351 72.5749 cv
803.351 71.7149 li
802.697 71.7149 li
800.943 71.7149 799.326 72.5749 799.326 75.0182 cv
799.326 77.1511 800.358 79.0432 801.046 79.8692 cv
797.606 80.1099 li
797.055 78.9061 796.298 77.2201 796.298 74.502 cv
796.298 68.9981 798.982 67.725 803.42 67.725 cv
811.16 67.725 li
812.433 67.725 813.603 67.5869 814.291 67.4842 cv
814.291 71.3371 li
813.603 71.5432 812.743 71.5782 811.883 71.5782 cv
811.883 71.6469 li
813.328 72.713 814.566 74.0552 814.566 76.6012 cv
814.566 79.353 812.674 81.899 809.371 81.899 cv
805.621 71.7149 mo
805.621 72.094 li
805.621 75.7402 806.378 77.9081 808.959 77.9081 cv
810.575 77.9081 811.676 76.841 811.676 75.19 cv
811.676 72.6439 809.784 71.7149 806.619 71.7149 cv
805.621 71.7149 li
813.706 64.456 mo
810.163 64.2502 li
810.438 63.5619 811.332 61.8069 811.332 59.8121 cv
811.332 58.2641 810.954 57.06 809.578 57.06 cv
808.89 57.06 808.236 57.4041 807.342 58.9521 cv
806.31 60.7061 li
805.243 62.4952 804.108 64.456 801.321 64.456 cv
798.879 64.456 796.298 62.083 796.298 58.3332 cv
796.298 56.0619 796.883 54.3079 797.021 53.895 cv
800.323 54.1351 li
799.911 55.2019 799.532 56.337 799.532 57.885 cv
799.532 59.606 800.186 60.328 801.252 60.328 cv
802.216 60.328 802.732 59.571 803.523 58.3332 cv
804.865 56.234 li
806.275 54.0321 807.273 52.931 809.337 52.931 cv
812.605 52.931 814.566 55.6841 814.566 59.537 cv
814.566 61.7379 814.05 63.5619 813.706 64.456 cv
f
.997 .814 .439 .544 cmyk
%ADOBeginSubsetFont: GCAAAA+FrutigerLTStd-Cn AddGlyphs
%ADOt1write: (1.0.24)systemdict beginDKGIWU+FrutigerLTStd-Cn dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/iacute <1C60D8A8C9B88C082599D5E95B5A5C1D0C692966FBAC8F3B978DF25C225A17B34B408D5EF5D57A254E4D992A5B22> |-/aacute <1C60D8A8C9B74CDDEA5D3A1A2896F7BFE1F6945AEED9F725BD5DF815E5C6B6433DF6D2661765551755A2060D754AE411ADC4F005490620DD93B30CCEE7AECC1B23A4A2E8EFB34176A061A7E838D65A81862AED2E9E32A154D4C119C3E9E9161B543792565D7271455E6FD7262129BD7418D482C3CFCF5D509A090CCD80D8DE78E635BE362165B95840D0C37AEFBC1A318E69D2FF734F76473FA73A6D8A7AD59712103197C07824500319AAA812C3DBFD6D11365DB3CD994C079F2133E5C7AB191D23A868604F484D37D51C000B9240117B38C4B5> |-/percent <1C60D8A8C9B6A3514C187E130C4C18D54A04545B3BA58AA4FAA90A6D2125633AF0EA203BBB6A2394D175770D36A4E08EDF3FE5EC40A6E9E9F9FDD1DAB226345F3F4EAFE4D40D951CF0DDCC5056E74AF9E4F18E0F710771C13400A377E40D174349291916565602C21BFBE6E457E9C55ABF4094A9FBEA3A77C7913CDD55D106D7C8A50182C766F3AB50EBD8BF33BBEA909619F3A16BC25DDCE13133> |-/uacute <1C60D8A8C9B75946075F93B1C023511DF24861151F352A2B5B5FCA827DC79FA22DCF4BD8CAF6757E97A16BD7B3601217BA826CA0C5644A82CA5CF57B6675959DE4A4400B507A4B4F7BDAF846DB3383B9C1AE535C843D10E4F3BC63427141A7D861446E452FAA34337CC49E85E93359A23E136B28073AB6> |-/plus <1C60D8A8C9B7C3C9B5778CA7945F3E0D5EF1C424492D2A34918FC72D60DAB48B78550A8C4DDE63C104BC9C4BC91217623BC28A07F82A16> |-/three <1C60D8A8C9B75BE56A12E51A2C0F68A869AD520A317E09B01560FEB1058002039728EFC7B88DA41E53CB6F3F77E5101D98D186F5055533FA08A01EC5385AE9A5E920D455BED09EDFB196A6F351D747D62FEE03DC31BB2937D730C334BA7CA942E44E969F790562FF0A6F9E0A045854F24AD9D6E6A4CC16C45F594A5F6A98B431E1F47DDA9BE7E4718734F0674C917D772B0076B74B46B19F5F9881E40D134E6E4E6C9EB46CC367> |-/four <1C60D8A8C9B75BE54E5BDF8D48656B5DE2DA35C0EBA9BB978F0E85B30833A895C6E71F31A66D8EF8B803A6A2619C124B9BF7ED1C4F4C70B9558EF1D1B045F323B414CC4CD69813E52556253DFBB7B05B6D3C000D> |-/C <1C60D8A8C9B78256A1CE1ACAD5A9908FF736390F29AC635848ABC9357A95B6C273A4DAC33CE80EFE4E069FD0948A8E104BA0BA06A07B2EFE587E7354988828F07000AF48EB65D99FFE30DDF0CEA863764B8C088FDC3C> |-/D <1C60D8A8C9B7FD84E670E2D4C181350F012F93E3EEB66C540FC166ABC126AFD20C45C4FF08A4F87305BE4FBC31DA6CA024AA6959A0F0AC08EAD6AE4E668C240FF63916FD4B9920CCDD7FB77BD599> |-/E <1C60D8A8C9B74CDDE559FC349C72821B6A877A2B15E4CCE2F5587C15267C8DA9F8188A1073702C1E35257AC91B5CF025656AD41E096208DB> |-/M <1C60D8A8C9B6FF86A27735053857B16CEA702FBFDEFFD718C8528143A84731CFE829051558DD3FD1B6C0BAA321955C4B6FF8723D7B38BE463F6EB74C85F579FC461A001E0231AA020A> |-/S <1C60D8A8C9B77FE2BDBECFB17D2E1C0D8F119E5BBE37A455B702EDAB9448C5EB431AEF939AF9469B0F3A6F3117913A56ACEBC895FCD40ED2C1DFA6BFBEF9D992F5FEABA9C0675728F702556E066176F58803999D5D6CD0ED89A46623BEC9043D351933347C096B5A4FFC566A11E34F82> |-/T <1C60D8A8C9B77FE299176F62626AD488D38C59475C17C2B94C1384BA593E58BA95CF19E6F30D93E8E6B4> |-/U <1C60D8A8C9B7CB35154D0FF2E2BC2AD42D372FEB267C7508FE162B7D68617688E879DA99DEF79DE01B909FD6D435122886528E08ED2D510D01BE7E27A4B32F4E6DCE6E33D26B3C131E97B1000366AA31B412> |-/g <1C60D8A8C9B75A17C37AC5ECDED9D58DE77058069848DE9C60048F9FCECDEE88EE344D4ADC7960CF6AE57E99E7EE0AAA49760065068D55174E52C307C0311F5072BCCF81CDE85D4EAF560D205035A3F498C9EC15332B0BA76A354AF2AE4DDBFDEA66BBAF6C26E5FE3909ED8D020BAA205FA203FF4D8C55DC0811216D06665408E6E34AC7DE8269E231843D4C9FE59211254E863FF2A6BB93289202306FE3E2BCF5FC59B13F8E251AE3E66CC2E498BF4CB5> |-/h <1C60D8A8C9B759462356354CA3F88C9C77B88F319D9A7BD5DB1DB4E2FFF15AD1DE34539E00BBF5F284A0F372A27329E60D6AA20DDB30402E84E7CA83D58DE44F8111E1450551F31089> |-/k <1C60D8A8C9B77FE299176F6CB2317F7B4AD8E12F43299322B2D8ADA2EF4910834DC5DF4C58B9B6EE2A8FD3871C5BC0F715B1E0A0B5A80A1575B09A2EA8495F30700FFE> |-/t <1C60D8A8C9B842571278C252E294981B49ECEC94A89A264D86A0ADCC418F4B4424D4632BAACF1A27A999EC458CC673E407405E37E40976C0D7220EAF5A6B952169E7DF999201D0F027E7> |-/v <1C60D8A8C9B7113187732E7EF0BA5C554F39ABB825AC55746D8F8C4147BD8B374DA612D9EF94CAC80D9AAD8AF03F74D84828053BB6AD396092149013> |-/x <1C60D8A8C9B7113187732E7EF0BA5C554F39ABDB407BCB272F66195DFA3DDD7F968230CA237F06BC6B8F7CCA916682771CE2C238B4067EB2C1AD09CC6ADC27> |-/z <1C60D8A8C9B7361F7E7DEAFDF0EAA5007E19B43473844EE9564694FE4F6D2B37BCB0D0ED8A6C80BB8012BF1D96F58D72666C19FD> |-/fi <1C60D8A8C9B7A73DEE9439F95BE5A33048127F5868E25722E4C2117B5DF01633465CE1208283AABDB34A166971575E57041871903284A35139BD38A6225445290FA2EF0AD4840EBD96CE3A9CDDD924A1E4537C7F9E226C1B60F58B61445D0CA41D5F31BEE3F2959300D0550929DEFEBFDB81C9942DCE50AD7E1BBAE1D04CA986119F9BD89260C98ECD50416B572B39E921C8F53E1A7AA3063E8786FF72B7E64B7BE1382B85DA8185848012DB11C169AC3B12D9D43352E6> |-/bullet <1C60D8A8C9B7A73DB96700A79BD73BCAE0157CE5BF7D54A2D9789BBD35AAF2AE9EBD67D6E0D112C0ACFDAB> |-systemdict /gcheck known {setglobal} if end {end} ifendDKGIWU+FrutigerLTStd-Cn /Encoding getdup 35 /iacute putdup 36 /aacute putdup 37 /percent putdup 38 /uacute putdup 43 /plus putdup 51 /three putdup 52 /four putdup 67 /C putdup 68 /D putdup 69 /E putdup 77 /M putdup 83 /S putdup 84 /T putdup 85 /U putdup 103 /g putdup 104 /h putdup 107 /k putdup 116 /t putdup 118 /v putdup 120 /x putdup 122 /z putdup 174 /fi putdup 183 /bullet putpop%ADOEndSubsetFont
/DKGIWU+FrutigerLTStd-Cn*1 [32{/.notdef}rp /space /Euro /oacute /iacute /aacute /percent /uacute /.notdef /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash /zero /one /two /three /four /five /six /seven /eight /nine /colon 5{/.notdef}rp /at /.notdef /B /C /D /E 3{/.notdef}rp /I 2{/.notdef}rp /L /M /.notdef /O /P 2{/.notdef}rp /S /T /U 11{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /.notdef /r /s /t /u /v /.notdef /x /y /z 51{/.notdef}rp /fi 8{/.notdef}rp /bullet 72{/.notdef}rp]DKGIWU+FrutigerLTStd-Cn nfDKGIWU+FrutigerLTStd-Cn*1 [10.494 0 0 -10.494 0 0 ]msf77.9824 848.878 mo(* )[5.247 0 ]xshDKGIWU+FrutigerLTStd-Cn*1 [13.3639 0 0 -13.3639 0 0 ]msf84.9038 850.872 mo(Exenci"n del 25% del precio de matr#cula  a estudiantes del MUII de la UCLM)[6.12063 5.62614 5.86675 6.37451 5.13184 2.89996 6.37451 6.37451 3.1339 6.36127 5.86674 2.89998 3.14058 6.34779 6.34779 10.8113 3.13391 6.36127 5.86674 2.89998 3.14059 6.36124 3.88898 5.86674 5.13185 2.89996 6.37451 3.14056 6.36127 5.86676 3.14056 9.58194 6.12064 3.88895 3.88898 2.89996 5.13184 6.37451 2.89996 6.12064 3.14056 3.13391 6.12064 3.14059 5.86679 4.87775 3.88898 6.37454 6.36124 2.89999 6.12064 6.37454 3.88898 5.86676 4.87778 3.14059 6.36127 5.86676 2.89999 3.13388 10.3303 7.84454 3.16733 3.1673 3.14059 6.36127 5.86676 3.13391 2.89999 6.12064 3.14059 7.84454 7.10965 5.37228 0 ]xshDKGIWU+FrutigerLTStd-Cn*1 [19.8832 0 0 -19.8832 0 0 ]msf78.0838 407.199 mo(Mod)sh112.7 407.199 mo(alidad semipresencial: )[9.20587 4.41408 4.41406 9.56389 9.20586 9.56387 4.77209 7.35669 8.82813 14.3557 4.41408 9.56387 5.88553 8.82814 7.35669 8.82816 9.58359 7.73471 4.41406 9.20587 4.41409 4.03839 0 ]xsh78.0838 433.703 mo(clases y tutoriales en streaming)[7.73472 4.41407 9.20587 7.35669 8.82814 7.35669 4.77208 8.09241 4.77208 5.88553 9.5836 5.88553 9.5836 5.88553 4.41406 9.20587 4.41408 8.82814 7.35669 4.77208 8.82814 9.5836 4.77208 7.35669 5.88553 5.88553 8.82816 9.20587 14.3557 4.41406 9.58362 0 ]xsh78.0838 460.208 mo(+ 4 proyectos + 1 Trabajo \256nal)[11.93 4.77208 9.54385 4.77207 9.56388 5.88553 9.5836 8.09241 8.82816 7.73471 5.88553 9.58359 7.35669 4.77208 11.93 4.77208 9.54385 3.6785 7.3568 5.88553 9.20587 9.56387 9.20587 4.41409 9.58356 4.77209 9.94159 9.58362 9.20587 0 ]xsh%ADOBeginSubsetFont: DCAAAA+FrutigerLTStd-BoldCn AddGlyphs
%ADOt1write: (1.0.24)systemdict beginDKGIWT+FrutigerLTStd-BoldCn dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/A <1C60D8A8C9B7D8BE41A64DA5B10086FC853025E6DD6AC5CAD132B93EDD0A6AF39BE557AE196B3EB01D911E95D2189FBD7DBE52631D0C3D991657030EAAA5B1E65E38B96729613FB2210F134EFDEE195E1E9116DF619D29FD> |-/D <1C60D8A8C9B66B392CBDC0ACABCBEAB196E784EFA640127DE731A36F1F0874DFAE9B89B9E9A90F94B3CF2C170E64C87865BCA7FC8D2A20EFE0591D352C74A3B3474B490CCA8559B07D8DF6> |-/L <1C60D8A8C9B77FE2B27B2499D2D618F90E80635F76C559601BB31D9F28A6C2852E20FCC5DF> |-/S <1C60D8A8C9B7A73DCF12B3661E890282468AB8D852EF8856EE3EC3CEE6FA431A69BC3FC07D4861E974B682B70EA669B8F2EF595BECC94B8B4B3CFF5AFC682BD3768847763CA29965ACE5FF9E3B41610F97887BDB51DCFD81EE948A21087D36BA4DE4A2A567C5423EA51213EBDF3677656A0CCBA02412> |-/T <1C60D8A8C9B75A17982D11DCAFF1B1E97015DCD12FF7D1627F5A4E32F8CC58A89EE2F4FB7E3FE78B46905FB8> |-/h <1C60D8A8C9B7B4A1684D51772B3439050437F72E986CF93FA559EAC36DE3BB7AEBA65D3D745CE28E866C97CD3313D343A4A15CF5314F097D58D5B3E8B5BBE51B922064C017DAA24AF1D4A7D14583> |-/k <1C60D8A8C9B7A73DEE9439F669D3DB127A2D5CBFDBA411934427D21BC9646668F6E51B98A99FCCF57DFFEEA37DE5B4DAE853B6D0EFE553FCB9D46A2349E8876A6F5C610682A6D30B56> |-/v <1C60D8A8C9B75A17982D11DCD0EBC0FEDDB4CC0FCC629A20FE4B58F9B25F961FA937A429B73957DABC4B21C9E741278E036BFE848191F5AA41CC4B7066F1> |-systemdict /gcheck known {setglobal} if end {end} ifendDKGIWT+FrutigerLTStd-BoldCn /Encoding getdup 65 /A putdup 68 /D putdup 76 /L putdup 83 /S putdup 84 /T putdup 104 /h putdup 107 /k putdup 118 /v putpop%ADOEndSubsetFont
/DKGIWT+FrutigerLTStd-BoldCn*1 [32{/.notdef}rp /iacute /space /aacute /uacute /ntilde 7{/.notdef}rp /comma /hyphen /period 2{/.notdef}rp /one 8{/.notdef}rp /colon 6{/.notdef}rp /A /.notdef /C /D /.notdef /F 2{/.notdef}rp /I 2{/.notdef}rp /L /M /.notdef /O /P 2{/.notdef}rp /S /T 12{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /.notdef /y 5{/.notdef}rp /oacute 99{/.notdef}rp /ordfeminine 28{/.notdef}rp]DKGIWT+FrutigerLTStd-BoldCn nfDKGIWT+FrutigerLTStd-BoldCn*1 [74.118 0 0 -74.118 0 0 ]msf77.9824 141.382 mo(Ciencia!de!datos!)[38.986 17.0467 34.8355 36.2435 29.3503 17.0467 34.8355 17.0467 37.578 34.8355 17.0467 37.578 34.8354 23.8664 37.578 30.1658 0 ]xsh77.9824 230.323 mo(y!aplicaciones)[32.0929 17.0467 34.8355 37.578 17.0467 17.0467 29.3503 34.8355 29.3503 17.0467 37.578 36.2435 34.8354 0 ]xshDKGIWU+FrutigerLTStd-Cn*1 [28.7202 0 0 -28.7202 0 0 ]msf78.0838 359.163 mo(T#tulo propio de la UCLM - 30 ECTS)[12.2061 6.37589 8.50134 13.843 6.37589 13.843 6.89301 13.8145 8.50133 13.843 13.8145 6.37589 13.843 6.89301 13.8145 12.7518 6.89302 6.37585 13.2974 6.89301 17.0022 15.4228 11.6891 22.3443 6.89301 8.50134 6.89301 13.7856 13.7856 6.89301 13.2974 15.4228 12.7518 0 ]xshDKGIWU+FrutigerLTStd-Cn*1 [13.9782 0 0 -13.9782 0 0 ]msf77.0714 629.69 mo(M$s de 160 horas de contenido pr$ctico y 70 horas de teor#a orientadas a la formaci"n en tecnolog#as )[10.4557 6.05252 4.75252 2.9355 6.30421 5.78698 2.9355 6.29013 6.29013 6.29013 2.9355 6.31805 6.31808 3.71826 6.05252 4.75252 2.9355 6.3042 5.78699 2.93549 5.01828 6.31807 6.31807 3.71829 5.78699 6.31805 2.68384 6.3042 6.31808 2.93549 6.30423 3.71826 6.05255 5.01828 3.71826 2.68384 5.01828 6.31805 2.93552 5.26974 2.93552 6.29013 6.29013 2.93549 6.31808 6.31805 3.71826 6.05252 4.7525 2.93549 6.3042 5.78699 2.93549 3.71826 5.78696 6.31808 3.71826 2.68381 6.05252 2.93549 6.31805 3.71826 2.68381 5.78696 6.31808 3.71826 6.05252 6.3042 6.05249 4.75253 2.93549 6.05252 2.93549 2.68381 6.05249 2.93552 3.46658 6.31805 3.71826 9.67291 6.05249 5.01828 2.68381 6.31805 6.31808 2.93549 5.78696 6.31805 2.93549 3.71826 5.78699 5.01831 6.31805 6.31812 2.68384 6.31812 6.3042 2.68384 6.05255 5.17188 0 ]xsh77.0714 646.464 mo(de &ltima generaci"n para la creaci"n de )[6.30421 5.78698 2.93549 6.31808 2.68382 3.71828 2.68382 9.67291 6.05253 2.9355 6.3042 5.78697 6.31808 5.78696 3.71829 6.05252 5.01826 2.68382 6.31805 6.31808 2.93549 6.30421 6.05254 3.71826 6.05252 2.93552 2.68381 6.05255 2.93549 5.01828 3.71829 5.78699 6.05252 5.01828 2.68381 6.31808 6.31808 2.93549 6.30423 5.78699 0 ]xshDKGIWT+FrutigerLTStd-BoldCn*1 [13.9782 0 0 -13.9782 0 0 ]msf279.015 646.464 mo(aplicaciones!inteligentes!basadas!en!ciencia!de!datos)[6.56976 7.08698 3.2149 3.2149 5.53531 6.56976 5.53528 3.2149 7.08701 6.8353 6.56973 5.26978 3.2149 3.2149 6.83527 4.50107 6.56973 3.2149 3.2149 7.08701 6.56973 6.83533 4.50104 6.56976 5.26974 3.21494 7.08698 6.56976 5.26974 6.56973 7.08701 6.56976 5.26974 3.2149 6.56976 6.83533 3.2149 5.53528 3.21494 6.56973 6.83533 5.53528 3.2149 6.5697 3.2149 7.08698 6.56976 3.2149 7.08698 6.56976 4.50098 7.08704 0 ]xshDKGIWU+FrutigerLTStd-Cn*1 [13.9782 0 0 -13.9782 0 0 ]msf568.866 646.464 mo(:)sh77.0714 677.216 mo(\267 Dominio del stack cient#\256co de )[6.9891 3.35484 8.02356 6.73742 10.0923 3.10316 6.73741 3.10316 6.73741 3.35486 6.72354 6.20633 3.10316 3.35484 5.17188 4.1376 6.47188 5.43762 6.20633 3.35484 5.43762 3.10316 6.20631 6.73743 4.13763 3.10315 6.98911 5.43762 6.73743 3.35483 6.72357 6.2063 0 ]xshDKGIWT+FrutigerLTStd-BoldCn*1 [13.9782 0 2.9712 -13.9782 0 0 ]msf252.996 677.216 mo(Pyt)sh271.643 677.216 mo(hon)[7.25464 7.50635 0 ]xshDKGIWU+FrutigerLTStd-Cn*1 [13.9782 0 0 -13.9782 0 0 ]msf293.658 677.216 mo( \(an$lisis, visualizaci"n, Machine Learning \))[3.35486 3.88593 6.47186 6.73743 6.47186 3.10318 3.10315 5.17188 3.10315 4.65466 2.83768 3.35483 5.95465 3.10315 5.17188 6.73743 6.47186 3.10315 3.10318 5.43762 6.47186 5.43762 3.10318 6.73743 6.7374 2.83768 3.35483 10.875 6.47186 5.43762 6.73743 3.10318 6.7374 6.20636 3.35483 5.68909 6.20633 6.47186 4.13763 6.73743 3.10315 6.73743 6.72351 3.35486 0 ]xsh77.0659 693.99 mo(\267 Manipulaci"n y an$lisis de vol&menes masivos de datos con )[6.9891 3.35485 10.875 6.47188 6.73741 3.10316 6.72356 6.73741 3.10316 6.47186 5.43762 3.10318 6.73741 6.73741 3.35486 5.68909 3.35484 6.47188 6.73741 6.47188 3.10315 3.10316 5.17186 3.10316 5.17188 3.35484 6.72356 6.20631 3.35484 5.95465 6.73741 3.10316 6.73741 10.0923 6.2063 6.73743 6.20633 5.17184 3.35486 10.0923 6.47186 5.17188 3.10315 5.95465 6.7374 5.17184 3.35486 6.72357 6.2063 3.35486 6.72357 6.47186 4.13763 6.73737 5.17188 3.35486 5.43762 6.73743 6.73743 0 ]xshDKGIWT+FrutigerLTStd-BoldCn*1 [13.9782 0 2.9712 -13.9782 0 0 ]msf408.528 693.99 mo(Apache!Spark)[8.54059 7.50632 6.98911 5.95462 7.25467 6.98911 3.63425 6.98911 7.50632 6.98911 4.92041 0 ]xshDKGIWU+FrutigerLTStd-Cn*1 [13.9782 0 0 -13.9782 0 0 ]msf77.0715 710.764 mo(\267 Inteligencia arti\256cial en aplicaciones mediante )[6.9891 3.35485 3.38278 6.73742 4.13762 6.20632 3.10316 3.10316 6.72355 6.20632 6.73743 5.43762 3.10316 6.47186 3.35486 6.47186 4.13762 4.13762 3.10316 6.98909 5.43764 3.10316 6.47186 3.10316 3.35484 6.20633 6.73741 3.35484 6.47188 6.72356 3.10315 3.10316 5.43762 6.47188 5.43762 3.10316 6.73741 6.73743 6.2063 5.17188 3.35486 10.0923 6.20633 6.72357 3.10315 6.47186 6.73743 4.13763 6.2063 0 ]xshDKGIWT+FrutigerLTStd-BoldCn*1 [13.9782 0 2.9712 -13.9782 0 0 ]msf335.814 710.764 mo(Deep!Learning)[8.80634 6.98911 6.98911 7.50632 3.63425 6.20633 6.98911 6.98911 4.92038 7.25467 3.63425 7.25464 0 ]xshDKGIWT+FrutigerLTStd-BoldCn*1 [13.9782 0 0 -13.9782 0 0 ]msf420.493 710.764 mo(!co)sh437.588 710.764 mo(n!)[7.25467 0 ]xshDKGIWT+FrutigerLTStd-BoldCn*1 [13.9782 0 2.9712 -13.9782 0 0 ]msf448.477 710.764 mo(TensorFlow)[5.5354 6.98911 7.25464 5.68912 7.50632 4.92038 6.47189 3.63425 7.50632 0 ]xshDKGIWU+FrutigerLTStd-Cn*1 [13.9782 0 0 -13.9782 0 0 ]msf77.0715 727.538 mo(\267 Creaci"n de aplicaciones en la nube con )[6.9891 3.35485 7.50632 4.13762 6.20633 6.47187 5.43762 3.10316 6.73741 6.73743 3.35484 6.72354 6.20633 3.35486 6.47186 6.72354 3.10318 3.10315 5.43762 6.47188 5.43764 3.10315 6.73743 6.73741 6.20633 5.17186 3.35484 6.20633 6.73741 3.35484 3.10316 6.47188 3.35484 6.73743 6.7374 6.72354 6.20636 3.35483 5.43762 6.73743 6.7374 0 ]xshDKGIWT+FrutigerLTStd-BoldCn*1 [13.9782 0 2.9712 -13.9782 0 0 ]msf302.702 727.538 mo(Ser)sh321.6 727.538 mo(verless)[6.72357 6.98907 4.92041 3.63425 6.98911 5.68909 0 ]xshDKGIWT+FrutigerLTStd-BoldCn*1 [42.3996 0 0 -42.3996 0 0 ]msf76.6665 300.612 mo(escalab)sh209.377 300.612 mo(les!en!la!nub)sh434.136 300.612 mo(e)shgrestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/DKGIWT+FrutigerLTStd-BoldCn*1 uf/DKGIWT+FrutigerLTStd-BoldCn uf/DCAAAA+FrutigerLTStd-BoldCn uf/DKGIWU+FrutigerLTStd-Cn*1 uf/DKGIWU+FrutigerLTStd-Cn uf/GCAAAA+FrutigerLTStd-Cn ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
